{
  "summaries":  {
    "showcase_Splunk_Internal_Top_Sourcetypes": {
        "id": "Splunk Internal - Top Sourcetypes",
        "domain": "Application",
        "help": "Lets look at top Splunk Sourcetypes",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Splunk",
        "howToImplement": "<p>Check internal logs..",
        "hasSearch": "Yes",
        "category": "Splunk",
        "knownFP": "unused",
        "operationalize": "Words around how to operationalize things...",
        "relevance": "This looks at top sourcetypes in Splunk's internal logs....",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Splunk Internal Top Sourcetypes - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "You use splunk, but do you know Splunk?",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Splunk Internal Top Sourcetypes",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "index=_internal earlist=-1week latest=now | top 5 sourcetype",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Splunk Internal Top Sourcetypes - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Fraud_NewAccount.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Fraud_NewAccount.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Top Internal Sourcetypes over the last 24 hours",
                "search": "index=_internal earliest=-1d@d | top 10 sourcetype",
                "vizParameters": {
                "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },

    "showcase_Splunk_Search_Scheduler_Usage": {
        "id": "Splunk Internal - Search Scheduler Activity",
        "domain": "Application",
        "help": "Lets look at Splunk Job Scheduler",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Splunk",
        "howToImplement": "<p>Check internal logs..",
        "hasSearch": "Yes",
        "category": "Splunk",
        "knownFP": "unused",
        "operationalize": "Words around how to operationalize things...",
        "relevance": "This looks at job scheduling in Splunk's internal logs....",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Splunk Internal Search Scheduler - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "You use splunk, but do you know Splunk?",
        "released": "1.0.0",
        "journey": "Stage_3",
        "icon": "Core_Use_Case.png",
        "name": "Splunk Job Scheduler Status",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Medium",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "index=_internal earliest=-1y@y host=* sourcetype=scheduler (status=\"completed\" OR status=\"skipped\" OR status=\"deferred\") | eval alert_actions = if(isnull(alert_actions) OR alert_actions == \"\", \"none\", alert_actions) | stats count by status | sort - count | eventstats sum(count) AS total | eval percent = round(count / total * 100, 2).\" %\" | fields - total | rename status as Status, app as App, user as User, savedsearch_name as \"Report Name\", alert_actions as \"Alert Actions\", count as Count, percent as \"Percent of Total\"",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Splunk Internal Search Scheduler - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Fraud_NewAccount.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Fraud_NewAccount.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Scheduler Status over all Time",
                "search": "index=_internal earliest=-1y@y host=* sourcetype=scheduler (status=\"completed\" OR status=\"skipped\" OR status=\"deferred\") | eval alert_actions = if(isnull(alert_actions) OR alert_actions == \"\", \"none\", alert_actions) | stats count by status | sort - count | eventstats sum(count) AS total | eval percent = round(count / total * 100, 2).\" %\" | fields - total | rename status as Status, app as App, user as User, savedsearch_name as \"Report Name\", alert_actions as \"Alert Actions\", count as Count, percent as \"Percent of Total\"",
                "vizParameters": {
                "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
  
    "showcase_Wire_Transfer_Fraud_Denies": {
        "id": "Wire Transfer Fraud Denies",
        "domain": "Application",
        "help": "If too many denials are followed by an authorization in a short time, it is a good chance that credentials were guessed.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Wire Transfer Fraud",
        "howToImplement": "<p>Use Streamstats to count the number of authorized and denies for the same customer, from Account and to Account. If in a one hour time window, there are at least 5 denies and at least one authorizations, you have found an outlier.",
        "hasSearch": "Yes",
        "category": "Fraud Outliers",
        "knownFP": "unused",
        "operationalize": "Imposters may be using brute force to impersonate real users. Run a report every hour to find suspious users, who may have cracked credentials.",
        "relevance": "Users who login after a number of failures may be imposters, who gained credential access.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Wire Transfer Fraud Denies - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "If a user is trying to authorize a wire transfer is denied a large amount of tries (5) and then is authorized within a one hour window, they may be imposters gaining credentials.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Wire Transfer Fraud Denies",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs|streamstats time_window=1h count(eval(action=\"denied\")) as denied_count count(eval(action=\"authorized\")) as \"authorized_count\" latest(action) as latest_action last(action) as last_action by customer,FromAccount,ToAccount|where denied_count>=5 and authorized_count>=1 and latest_action=\"authorized\" and last_action=\"denied\"|table _time, customer, FromAccount, ToAccount, amount, denied_count, authorized_count|eval amount=tostring(round(amount, 2),\"commas\")",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Wire Transfer Fraud Denies - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Fraud_Denies.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Fraud_Denies.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Users who used the ATM in more than one location in under a minute",
                "search": "|inputlookup wire_transfer.csv| convert timeformat=\"%Y/%m/%d %H:%M:%S\" ctime(UTC) AS c_time|sort - _time|streamstats time_window=1h count(eval(action=\"denied\")) as denied_count count(eval(action=\"authorized\")) as \"authorized_count\" latest(action) as latest_action by customer,FromAccount,ToAccount|where denied_count>=5 and authorized_count>=1 and latest_action=\"authorized\"|table _time, customer, FromAccount, ToAccount, amount, denied_count, authorized_count|eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
            "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_Wire_Transfer_Fraud_NewAccount": {
        "id": "Wire Transfer Fraud NewAccount",
        "domain": "Application",
        "help": "If a customer has just opened up an account, it is suspicious to try to transfer large amounts on the same day. Is this a fraudulent account?",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Wire Transfer Fraud",
        "howToImplement": "<p>Check the application logs to see if a transfer of large amount (greater than 10000.00) is initiated and if the from account is less than one day old, suspect that something may be amiss.",
        "hasSearch": "Yes",
        "category": "Fraud Outliers",
        "knownFP": "unused",
        "operationalize": "As part of your reports for new account usage, check if new customers are instantly trying to transfer a large sum of money upon account activation. If so, it may be a fraudulent account used to transfer a bad check.",
        "relevance": "Users who open up new accounts to transfer large amounts out on day one may be creating fraudulent accounts.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Wire Transfer Fraud NewAccount - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Customers open up accounts all the time. It is unusual for a customer to open up a new account and instantly transfer a large amount of money upon activation. This use case reports on this activity.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Wire Transfer Fraud New Account",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|where _time<(OpenDate+86400) and amount>10000|eval AccountOpenDate=strftime(OpenDate,\"%Y-%m-%d %H:%M:%S\") |iplocation destIP|rename Country as DestCountry City as DestCity |table _time,AccountOpenDate, customer, amount, FromAccount, ToAccount, DestCountry, DestCity|eval amount=tostring(round(amount, 2),\"commas\")",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Wire Transfer Fraud NewAccount - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Fraud_NewAccount.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Fraud_NewAccount.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "One day old account with large transfer",
                "search": "|inputlookup wire_transfer.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|where _time<relative_time(OpenDate, \"+1d\") and amount>10000|eval AccountOpenDate=strftime(OpenDate,\"%Y-%m-%d %H:%M:%S\") |iplocation destIP|rename Country as DestCountry City as DestCity |table _time,AccountOpenDate, customer, amount, FromAccount, ToAccount, DestCountry, DestCity|eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
                "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Wire_Transfer_Fraud_MultipleIP": {
        "id": "Wire Transfer Fraud MultipleIP",
        "domain": "Application",
        "help": "When customers transfer funds, it is unusual for them to use different machines within the same minute to transfer the funds. Is this a bot?",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Wire Transfer Fraud",
        "howToImplement": "<p>In one minute time windows using streamstats, group tranfer events by customer and list out the client IPs the customer was using. If more than one is detected, you have found an outlier.",
        "hasSearch": "Yes",
        "category": "Fraud Outliers",
        "knownFP": "unused",
        "operationalize": "Reports should be run regularly testing for the counts of IPs customers have been using in a short amount of time. This will help detect unusual behavior such as using two client IPs to transfer funds in a short amount of time. It may indicate compromised accounts.",
        "relevance": "Users who transfer funds from multiple client IPs within a minute may be committing fraud.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Wire Transfer Fraud MultipleIP - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Look for customers who transfer funds in a short amount of time using more than one client IP, as this is unusual behavior.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Wire Transfer Fraud Multiple Client IPs",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs|| convert timeformat=\"%Y/%m/%d %H:%M:%S\" ctime(epoch) AS c_time|sort - _time|eval amount=tostring(round(amount, 2),\"commas\")|streamstats time_window=1m count(eval(action=\"authorized\")) as authorized_count list(FromAccount) as FromAccount list(ToAccount) as ToAccount list(amount) as amount list(action) as action list(c_time) as time values(clientIP) as clientIP dc(clientIP) as clientIP_count by customer|where clientIP_count>=2|fields - OpenDate epoch destIP _time, clientIP_count c_time authorized_count",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Wire Transfer Fraud MultipleIP - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Fraud_MultipleIP.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Fraud_MultipleIP.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "More than one client IP used in one minute window",
                "search": "|inputlookup wire_transfer.csv| convert timeformat=\"%Y/%m/%d %H:%M:%S\" ctime(epoch) AS c_time|sort - _time|eval amount=tostring(round(amount, 2),\"commas\")|streamstats time_window=1m count(eval(action=\"authorized\")) as authorized_count list(FromAccount) as FromAccount list(ToAccount) as ToAccount list(amount) as amount list(action) as action list(c_time) as time values(clientIP) as clientIP dc(clientIP) as clientIP_count by customer|where clientIP_count>=2|fields - OpenDate epoch destIP _time, clientIP_count c_time authorized_count",
                "vizParameters": {
            "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_Wire_Transfer_Fraud_TooMany": {
        "id": "Wire Transfer Fraud TooMany",
        "domain": "Application",
        "help": "When the same customer is committing too many transfer transactions in a one hour window, this may be fraudulent behavior.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Wire Transfer Fraud",
        "howToImplement": "<p>From the application logs, use streamstats with a one hour time window to count the number of transfers by customer. if the number is greater than a threshold (7 here), it is suspicious.",
        "hasSearch": "Yes",
        "category": "Fraud Outliers",
        "knownFP": "unused",
        "operationalize": "Users performing too many transfers in a short time period may have compromised accounts. Report on a large number of transfers by the same customer in an one hour span and then check if this is fraudulent.",
        "relevance": "Users who are constantly transferring funds in a short amount of time may have had their accounts taken over.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Wire Transfer Fraud TooMany - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This use case counts the number of transfers per customer in one hour time windows and finds those that are over a threshold.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Wire Transfer Fraud Too Many",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs|eval amount=tostring(round(amount, 2),\"commas\")|streamstats time_window=1h count(eval(action=\"authorized\")) as authorized_count list(FromAccount) as FromAccount list(ToAccount) as ToAccount list(amount) as amount list(action) as action list(_time) as time by customer|where authorized_count>=7|fields - OpenDate epoch clientIP destIP _time",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Wire Transfer Fraud TooMany - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Fraud_TooMany.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Fraud_TooMany.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Too many authorized transfers in one hour window",
                "search": "|inputlookup wire_transfer.csv|sort - _time|eval amount=tostring(round(amount, 2),\"commas\")|streamstats time_window=1h count(eval(action=\"authorized\")) as authorized_count list(FromAccount) as FromAccount list(ToAccount) as ToAccount list(amount) as amount list(action) as action list(_time) as time by customer|where authorized_count>=7|fields - OpenDate epoch clientIP destIP _time",
                "vizParameters": {
            "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_Wire_Transfer_Fraud_Suspicious": {
        "id": "Wire Transfer Fraud Suspicious",
        "domain": "Application",
        "help": "Banks needs to monitor large transfers to suspicious countries. This search looks for this scenario.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Wire Transfer Fraud",
        "howToImplement": "<p>Find all large transfers to countries that may be suspicious. Use a lookup to label countries. If the country name is not in the event, but the destination IP is, use iplocation to find the country name. ",
        "hasSearch": "Yes",
        "category": "Fraud Outliers",
        "knownFP": "unused",
        "operationalize": "Regularly report on all large amounts transferred to suspicious countries. Keep the list of suspicious or banned countries in a separate file or database to correlate. By finding this suspicious behavior early, fraud may be avoided.",
        "relevance": "Users who transfer large funds to suspicious countries may have had their accounts taken over.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Wire Transfer Fraud Suspicious - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example provides a report of large transfers going into suspicious or banned countries.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Wire Transfer Fraud Suspicious",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs||eval is_suspicious=\"no\"|lookup isSuspicious ip as destIP OUTPUT is_suspicious|where is_suspicious=\"yes\" AND amount>10000|iplocation destIP|rename Country as destCountry|table _time, customer, FromAccount, ToAccount, action, amount, destCountry, destIP|eval amount=tostring(round(amount, 2),\"commas\") ",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Wire Transfer Fraud Suspicious - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Fraud_Suspicious.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Fraud_Suspicious.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Transferring greater than 10,000.00 to suspicious countries",
                "search": "|inputlookup wire_transfer.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|eval is_suspicious=\"no\"|lookup isSuspicious ip as destIP OUTPUT is_suspicious|where is_suspicious=\"yes\" AND amount>10000|iplocation destIP|rename Country as destCountry|table _time, customer, FromAccount, ToAccount, action, amount, destCountry, destIP|eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_Payment_Response_Outliers": {
        "id": "Payment Response Outliers",
        "domain": "Application",
        "help": "Banks want to know the duration of responses from their payment systems. This example illustrates outliers to the average response time.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Payment Response",
        "howToImplement": "<p>After indexing the app logs, use stats to find the first and last time for request and response. The duration is the difference. Then, use eventstats to find the average duration and standard deviation. Finally, find all durations that are greater than the duration plus a multiple of the standard deviation.",
        "hasSearch": "Yes",
        "category": "Outliers",
        "knownFP": "unused",
        "operationalize": "After knowing what response times are high outliers, you can report on these as they may fail your SLA. Further investigation is needed to find out if there is a reason for the SLA miss.",
        "relevance": "Payments that take too long to process may be subject to fines and/or customer dissatisfaction.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Payment Response Outliers - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "A payment is sent and response for clearing is sent back. Knowing which responses took the longest in terms of duration to process is important to meet SLAs.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Payment Response Outliers",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs|sort _time|stats count values(customer) as customer values(amount) as amount  values(_time) as _time first(epoch) as first last(epoch) as last by sessionID|where count>1|eval duration=last-first|eventstats avg(duration) as avgdur stdev(duration) as stdev|where duration>(avgdur+(2*stdev))|fields - first last count _time|sort - duration |table sessionID customer amount duration avgdur stdev|eval amount=tostring(round(amount, 2),\"commas\")",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Payment Response Outliers - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Payment_Response_Outliers.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Payment_Response_Outliers.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Payments that took longest to complete, greater than 2 * standard deviation plus average",
                "search": "|inputlookup RequestResponse.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|stats count values(customer) as customer values(amount) as amount  values(_time) as _time first(epoch) as first last(epoch) as last by sessionID|where count>1|eval duration=last-first|eventstats avg(duration) as avgdur stdev(duration) as stdev|where duration>(avgdur+(2*stdev))|fields - first last count _time|sort - duration |table sessionID customer amount duration avgdur stdev|eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_Payment_SLA_Counts": {
        "id": "Payment SLA Counts",
        "domain": "Application",
        "help": "Banks want to know the duration of responses from their payment systems.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Payment Response",
        "howToImplement": "<p>After indexing the app logs, use stats to find the first and last time for request and response. The duration is the difference. Then use rangemap to give ranges for payment durations that missed SLA, met SLA, and nearly missed SLA. Perform a chart or stats count by range to show the different counts by duration category.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Knowing how many payments that were processed missed SLAs, met SLAs, and nearly missed SLAs is a KPI to monitor for payments processing as banks want to constantly know how many are missing SLAs.",
        "relevance": "Payments that take too long to process may be subject to fines and/or customer dissatisfaction. Visually seeing a count of payments that did not meet SLA due their long durations can help speed up investigations into why.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Payment SLA Counts - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "A payment is sent and response for clearing is sent back. Knowing how many met SLAs and did not meet SLAs for duration/response time is a KPI to follow.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Payment SLA Counts",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Payment SLA Counts - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Payment_SLA_Counts.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Payment_SLA_Counts.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Missed, Near Missed, and Met SLA Counts Based on Durations",
                "search": "|inputlookup RequestResponse.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|stats count  first(_time) as first last(_time) as last by sessionID|where count>1|eval duration=last-first|rangemap field=duration Met_SLA=1-1500 Near_SLA=1501-2200 Missed_SLA=2201-10000 default=Missed_SLA|chart count by range",
                "vizParameters": {
                    "trellis.size": "medium",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.lineWidth": "2",
                    "charting.legend.placement": "right",
                    "charting.layout.splitSeries": "0",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.scale": "linear",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisY.abbreviation": "none",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.scale": "inherit",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.bubbleMinimumSize": "10",
                    "trellis.enabled": "0",
                    "resizable": true,
                    "charting.chart.nullValueMode": "gaps",
                    "charting.legend.mode": "standard",
                    "trellis.scales.shared": "1",
                    "charting.drilldown": "none",
                    "charting.chart": "column",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisY2.abbreviation": "none",
                    "charting.chart.style": "shiny",
                    "charting.chart.showDataLabels": "all",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisY2.enabled": "0",
                    "charting.axisX.scale": "linear",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_Payment_SLA_Amounts": {
        "id": "Payment SLA Amounts",
        "domain": "Application",
        "help": "Banks want to know the duration of responses from their payment systems.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Payment Response",
        "howToImplement": "<p>After indexing the app logs, use stats to find the first and last time for request and response. The duration is the difference. Then use rangemap to give ranges for payment durations that missed SLA, met SLA, and nearly missed SLA. Perform a stats sum(amount) by range to show the different amounts processed by duration category.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Knowing how much money in payments that were processed missed SLAs, met SLAs, and nearly missed SLAs is a KPI to monitor for payments processing as banks want to constantly know how much money was involed, when SLAs were missed.",
        "relevance": "Payments that take too long to process may be subject to fines and/or customer dissatisfaction. It is important to monitor response time for SLA infractions to improve customer experience.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Payment SLA Amounts - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "A payment is sent and response for clearing is sent back. Knowing how much total amounts met SLAs and did not meet SLAs for duration/response time is a KPI to follow.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Payment SLA Amounts",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Payment SLA Amounts - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Payment_SLA_Amounts.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Payment_SLA_Amounts.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "TotalAmounts Involved for Payment Categories",
                "search": "|inputlookup RequestResponse.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|stats count first(amount) as amount  first(_time) as first last(_time) as last by sessionID|where count>1|eval duration=last-first|rangemap field=duration Met_SLA=1-1500 Near_SLA=1501-2200 Missed_SLA=2201-10000 default=Missed_SLA|chart sum(amount) as TotalAmount by range|eval TotalAmount=tostring(TotalAmount,\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_Payment_Response_Missing": {
        "id": "Payment Response Missing",
        "domain": "Application",
        "help": "Payment applications will send a request for payment to be cleared and expect a response. This report finds all requests that are missing areresponse",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Payment Response",
        "howToImplement": "<p>Group all payment events by their unique ID using stats and list all those that have only one event (request) in the grouping.",
        "hasSearch": "Yes",
        "category": "Responses",
        "knownFP": "unused",
        "operationalize": "Run a report on a regular basis looking for payments missing a response and act upon it. A missing respnose is an error condition and will definitely influence the SLA.",
        "relevance": "Payments requests that have no response indicates an error condition",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Payment Response Missing - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Find all Payment requests that have no responses.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Payment Response Missing",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs|stats values(action) as action values(customer) as customer values(amount) as amount  count by sessionID|where count=1| eval amount=tostring(round(amount, 2),\"commas\")",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Payment Response Missing - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Payment_Response_Missing.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Payment_Response_Missing.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Payments that have a request, but missing a response.",
                "search": "|inputlookup RequestResponse.csv|sort - _time|stats values(action) as action values(customer) as customer values(amount) as amount  count by sessionID|where count=1| eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
            "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_Payment_Response_Statistics": {
        "id": "Payment Response Statistics",
        "domain": "Application",
        "help": "",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Payment Response",
        "howToImplement": "<p>With the app logs, use stats to find all customers/users who had their payments cleared as in received a response. Then, sum up the amounts and also count the customers that cleared the most payments. As for duration, in the stats command get the first and last time a payment ID was found and use eval to calculate a duration. Then, use timechart to see the average duration over time.",
        "hasSearch": "Yes",
        "category": "Responses",
        "knownFP": "unused",
        "operationalize": "This dashboard could be used on a monitor to show customers that are most active and performance of response times over time. Decisions can then be made with this data to improve the payments response application.",
        "relevance": "By knowing who are the top users getting responses, insights can be gathered on treating your best customers to better service. Also, durations over time can tell how the systems is performing.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Payment Response Statistics - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "These set of searches show customers who have the most payments cleared and who have the most aggregate amounts cleared. The durations over time show how the system is performing.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Payment Response Statistics",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs ",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Payment Response Statistics - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Payment_Response_Statistics.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Payment_Response_Statistics.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Customers who have the highest total amounts cleared",
                "search": "|inputlookup RequestResponse.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|stats count values(customer) as customer sum(amount) as amount  values(_time) as _time first(epoch) as first last(epoch) as last by sessionID|where count>1 AND (count%2==0)|eval amount=amount/2|sort - amount|head 10|timechart span=10m fixedrange=F sum(amount) by customer",
                "vizParameters": {
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.showDataLabels": "none",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisY2.scale": "inherit",
                    "charting.axisY2.enabled": "0",
                    "charting.chart.stackMode": "default",
                    "charting.axisY.scale": "linear",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.legend.mode": "standard",
                    "charting.axisX.scale": "linear",
                    "resizable": true,
                    "charting.chart": "column",
                    "charting.axisY2.abbreviation": "none",
                    "trellis.size": "medium",
                    "charting.chart.style": "shiny",
                    "trellis.scales.shared": "1",
                    "charting.chart.nullValueMode": "connect",
                    "charting.legend.placement": "right",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.abbreviation": "none",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.lineWidth": "2",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "trellis.enabled": "0",
                    "charting.layout.splitSeries": "0",
                    "charting.drilldown": "none",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisTitleY2.visibility": "visible",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
            {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Average duration for completed payments",
                "search": "|inputlookup RequestResponse.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|stats count  values(_time) as _time first(epoch) as first last(epoch) as last by sessionID|where count>1|eval duration=last-first|timechart avg(duration) span=5m fixedrange=F",
                "vizParameters": {
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.showDataLabels": "none",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisY2.scale": "inherit",
                    "charting.axisY2.enabled": "0",
                    "charting.chart.stackMode": "default",
                    "charting.axisY.scale": "linear",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.legend.mode": "standard",
                    "charting.axisX.scale": "linear",
                    "resizable": true,
                    "charting.chart": "line",
                    "charting.axisY2.abbreviation": "none",
                    "trellis.size": "medium",
                    "charting.chart.style": "shiny",
                    "trellis.scales.shared": "1",
                    "charting.chart.nullValueMode": "connect",
                    "charting.legend.placement": "right",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.abbreviation": "none",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.lineWidth": "2",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "trellis.enabled": "0",
                    "charting.layout.splitSeries": "0",
                    "charting.drilldown": "none",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisTitleY2.visibility": "visible",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
            {
                "panel": "row2cell2",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Customers with most payments processed",
                "search": "|inputlookup RequestResponse.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|stats count  values(_time) as _time values(amount) as amount by customer|where count>2 AND (count%2==0)|eval CompletedPayments=count/2|top CompletedPayments by customer |sort -CompletedPayments|head 10|fields - count, percent",
                "vizParameters": {
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisY2.scale": "inherit",
                    "trellis.size": "medium",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.style": "shiny",
                    "charting.drilldown": "none",
                    "charting.axisX.scale": "linear",
                    "charting.axisY.scale": "linear",
                    "charting.chart": "column",
                    "trellis.enabled": "0",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.showDataLabels": "none",
                    "charting.chart.nullValueMode": "connect",
                    "charting.layout.splitSeries": "0",
                    "charting.lineWidth": "2",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.stackMode": "default",
                    "charting.chart.bubbleSizeBy": "area",
                    "trellis.scales.shared": "1",
                    "charting.axisTitleX.visibility": "visible",
                    "resizable": true,
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisY2.enabled": "0",
                    "charting.axisY2.abbreviation": "none",
                    "charting.legend.placement": "right",
                    "charting.legend.mode": "standard",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
            {
                "panel": "row3cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Count of request or response over time",
                "search": "|inputlookup RequestResponse.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|timechart count span=5m fixedrange=F",
                "vizParameters": {
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.showDataLabels": "none",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisY2.scale": "inherit",
                    "charting.axisY2.enabled": "0",
                    "charting.chart.stackMode": "default",
                    "charting.axisY.scale": "linear",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.legend.mode": "standard",
                    "charting.axisX.scale": "linear",
                    "resizable": true,
                    "charting.chart": "line",
                    "charting.axisY2.abbreviation": "none",
                    "trellis.size": "medium",
                    "charting.chart.style": "shiny",
                    "trellis.scales.shared": "1",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.legend.placement": "right",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.abbreviation": "none",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.lineWidth": "2",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "trellis.enabled": "0",
                    "charting.layout.splitSeries": "0",
                    "charting.drilldown": "none",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisTitleY2.visibility": "visible",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_ATM_Risk_Scores": {
        "id": "ATM Risk Scores",
        "domain": "Application",
        "help": "Knowing which users are the riskiest can help determine, if they have committed fraud in questionable transactions.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "ATM Fraud",
        "howToImplement": "<p>First, have access to the risk scores of your users and set up a lookup in Splunk. Then, ingest application logs that contain ATM activity for the user. Now combine this to find the riskiest users. Use stats to summarize the risk scores per user based on user activity. The highest summarized totals indicate the riskiest users. We want the top 5 here.",
        "hasSearch": "Yes",
        "category": "Risk",
        "knownFP": "unused",
        "operationalize": "Reporting on your riskiest uesrs provides a watchlst of users to monitor. Correlate this information with suspected fraud activity for the same users to reduce false positives.",
        "relevance": "Finding out who are riskiest users can help determine, if their questionable transaction activity may be involved in fraud.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=ATM Risk Scores - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Use an external source (database) to get a base risk score and summarize this per user per ATM access to find riskiest users.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "ATM Example Risk Scores",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs |lookup Risk user OUTPUT score|stats sum(score) as Risk_Score by user|sort - Risk_Score|head 5",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "ATM Risk Scores - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "ATM_Risk.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_RIsk.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Top 5 Riskiest Users",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\") |sort - _time|lookup Risk user OUTPUT score|stats sum(score) as Risk_Score by user|sort - Risk_Score|head 5",
                "vizParameters": {
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY2.abbreviation": "none",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.legend.mode": "standard",
                    "charting.axisY2.enabled": "0",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.lineWidth": "2",
                    "charting.chart.stackMode": "default",
                    "charting.axisX.scale": "linear",
                    "charting.axisY.scale": "linear",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.legend.placement": "right",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.drilldown": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "trellis.size": "medium",
                    "trellis.enabled": "0",
                    "charting.chart": "column",
                    "resizable": true,
                    "charting.axisY2.scale": "inherit",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisTitleY.visibility": "visible",
                    "trellis.scales.shared": "1",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.chart.showDataLabels": "none",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.chart.style": "shiny",
                    "charting.axisY.abbreviation": "none",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                    
                }
            }
        ]
    },
    "showcase_ATM_Outliers": {
        "id": "ATM Fraud Outliers",
        "domain": "Application",
        "help": "Users that use the ATM more the most may have questionable motives or have their credentials stolen. Also, look at their risk scores.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "ATM Fraud",
        "howToImplement": "<p>Count all the times users, who have used an ATM over a time period. Next, get the average count and standard deviation of counts of all users. Now find all users, who have a count greater than the average count plus some multiple of standard deviation.",
        "hasSearch": "Yes",
        "category": "Fraud Outliers",
        "knownFP": "unused",
        "operationalize": "Counting access and comparing to average counts plus some multiple of standard deviation can find risky users, because for some reason, these users are using the ATM most. Compare this to their risk scores to see if they need to be put on a watchlist.",
        "relevance": "Users that use the ATM more than most average users may have questionable motives or have their credentials stolen. Also, look at their risk scores.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=ATM Fraud Outliers - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Counting access and comparing to average counts plus some multiple of standard deviation may find risky users",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "ATM Fraud Outliers",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs |lookup Risk user OUTPUT score|stats sum(score) as Risk_Score count by user|eventstats avg(count) as avg stdev(count) as stdev|where count>(avg+stdev*3.5) |sort - count",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "ATM Fraud Outliers - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "ATM_Fraud_Outliers.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Fraud_Outliers.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "VisualizationElement",
                "title": "Users who use the ATM Most",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\") |sort - _time|stats count by user|eventstats avg(count) as avg stdev(count) as stdev|where count>(avg+stdev*3.5)",
                "vizParameters": {
                    "type": "treemap_app.treemap",
                    "drilldown": "none",
                    "trellis.enabled": "0",
                    "resizable": true,
                    "trellis.scales.shared": "1",
                    "trellis.size": "medium",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_ATM_Location_Fraud": {
        "id": "ATM Location Fraud",
        "domain": "Application",
        "help": "By detetecting if any user is using more than one location for an ATM transaction in under a minute, we can find suspected fraudsters",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "ATM Fraud",
        "howToImplement": "<p><img src=\"/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Stealing.png\" alt=\"ATM Stealing\"><br>From your ATM logs, search for withdrawal events and perform a streamstats for a 1 minute time window where the distinct location count is greater than one split by user. Print out the user, times, amounts and locations.<p>You may also use <b>Splunk Enterprise Security</b> to learn how to implement this example as it covers the land speed violation use case.",
        "hasSearch": "Yes",
        "category": "Fraud Outliers",
        "knownFP": "unused",
        "operationalize": "Find users that withdraw from multiple ATMs within a minute window and alert upon the activity, as users cannot be in two places at once.",
        "relevance": "Users who withdraw from multiple ATMs at almost the same time are most likely committing fraud.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=ATM Location Fraud - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Find users who have used ATMs at more than one location in under a minute.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "ATM Location Fraud",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs action=withdrawal|streamstats time_window=1m dc(location) as dc list(amount) as amount list(location) as location earliest(epoch) as epoch latest(epoch) as latest_epoch by user|where dc>1|dedup user| eval first_time=strftime(epoch,\"%m/%d/%y %H:%M:%S\"),  last_time=strftime(latest_epoch,\"%m/%d/%y %H:%M:%S\") |table user amount action location first_time last_time ",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "ATM Location Fraud - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "ATM_Location_Fraud.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Location_Fraud.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Users who used the ATM in more than one location in under a minute",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\") |sort - _time|search action=withdrawal|eval amount=tostring(round(amount, 2),\"commas\")|streamstats time_window=1m dc(location) as dc list(amount) as amount list(location) as location earliest(epoch) as epoch latest(epoch) as latest_epoch by user|where dc>1|dedup user| eval first_time=strftime(epoch,\"%m/%d/%y %H:%M:%S\"),  last_time=strftime(latest_epoch,\"%m/%d/%y %H:%M:%S\") |table user amount action location first_time last_time",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_ATM_Testing_Fraud": {
        "id": "ATM Testing Fraud",
        "domain": "Application",
        "help": "Banks like to know if people have stolen ATM credentials and are testing them for success and then withdrawing as much as they can immediately following their successful test.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "ATM Fraud",
        "howToImplement": "<p><img src=\"/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Stealing.png\" alt=\"ATM Stealing\"><br>Using your ATM logs, use streamstats in a one minute window to find users that have a small minimum withdrawal amount like less tthan 10 and a large maximum amount such as more than 1000.00. These fraudsters  may be testing the ATM machine and then withdrawing a large amount to take home.",
        "hasSearch": "Yes",
        "category": "Fraud Outliers",
        "knownFP": "unused",
        "operationalize": "Use your ATM logs to find suspicious users that are testing ATM machines for successful withdrawal and then immediately hitting payday by withdrawing very large amounts. They could be testing the card at first and then emptying the account.",
        "relevance": "Rarely do users withdraw very small amounts and very large amounts in a short one minute window. These users may be testing the machine and then taking home a large payload",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=ATM Testing Fraud - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Sometimes, suspicious users may be testing an ATM card to see if it works with a small withdrawal to avoid suspicion and then immediately withdraw a large amount to take home. This use case spots such situations.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "ATM Testing Fraud",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourctype=app_logs action=withdrawal|streamstats count time_window=1m min(amount) as min max(amount) as max by user,location|where count>1 and min<20 and max>9000|table _time user action min max location|dedup user, location|eval min=tostring(round(min, 2),\"commas\")|eval max=tostring(round(max, 2),\"commas\")",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "ATM Testing Fraud - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "ATM_Testing_Fraud.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Testing_Fraud.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Users small min and large max withdrawals in under a minute",
                "search": "|inputlookup ATM_list.csv|sort - _time|search action=withdrawal|streamstats count time_window=1m min(amount) as min max(amount) as max by user,location|where count>1 and min<20 and max>9000|table _time user action min max location|dedup user, location|eval min=tostring(round(min, 2),\"commas\")|eval max=tostring(round(max, 2),\"commas\")",
                "vizParameters": {
            "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_ATM_10000_Fraud": {
        "id": "ATM 10000 Fraud",
        "domain": "Application",
        "help": "Banks want to know if their users are participating in money laundering schemes by transacting amounts just under government regulations for notification.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "ATM Fraud",
        "howToImplement": "<p><img src=\"/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Stealing.png\" alt=\"ATM Stealing\"><br>Run a report, say, every week, which uses stats to find all amounts the user has transacted that are less than the target (10,000) but close to it such as more than 9,800",
        "hasSearch": "Yes",
        "category": "Fraud Outliers",
        "knownFP": "unused",
        "operationalize": "Users who continually make transactions just under a government reported threshold may be trying to hide their transactions.",
        "relevance": "Users who slip multiple transactions in a short amount of time just under government detection may be participating in money laundering schemes",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=ATM 10000 Fraud - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "In countries such as the USA, if a transaction is over a limit (10,000), it must be reported to the government. To slip under the radar, some users may keep their transactions just under the limit and may be doing suspicious things with their money.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "ATM 10000 Fraud",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs action=*|where amount>9800 AND amount<10000|table _time user action amount|eval amount=tostring(round(amount, 2),\"commas\")",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "ATM 10000 Fraud - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "ATM_10000_Fraud.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_10000_Fraud.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Users who used the ATM with transactions just under 10,000",
                "search": "|inputlookup ATM_list.csv| sort - _time|where amount>9800 AND amount<10000|table _time user action amount|eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
            "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_MFID_Time_Drift": {
        "id": "MFID Time Drift",
        "domain": "Application",
        "help": "Capture the time difference between an NTP server and the hostinvolved with a MFID trade. If the difference is too much, Splunk can report upon it and you can take action to correct it.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "MFID",
        "howToImplement": "<p>Use a script to contact an NTP server on a host every N minutes and capture ther results to a file. Forward this file to Splunk and check if the time drift is tolerable. A script such as echo `sntp time_server` `hostname` may be enough. In production, you would use milliseconds for thresholds, but we are being more relaxed with the sample data. Keep in mind that some banks may rely on atomic clocks for precision, but the same principles on implementation apply here.",
        "hasSearch": "Yes",
        "category": "Compliance",
        "knownFP": "unused",
        "operationalize": "Run a compliance report on a regular basis to find out which hosts have time issues. Fixing this problem can improve best execution and also help stay in compliance.",
        "relevance": "Hosts that have a large time drift may effect best execution. Fix them.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=MFID Time Drift - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows Splunk capturing the output of sntp from each host involved in a MFID trade. If the time drift in the log entry is above a tolerance, the host should be fixed as trades may be impacted.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "MFID Time Drift",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "SNTP Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=sntp_logs|where drift<-0.1 OR drift>+0.1",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "MFID Time Drift - Demo",
                "label": "Demo Data"
            },
            {
                "name": "MFID Time Drift - Live",
                "label": "Live Data"
            }
        ],
        "images": [
            {
                "name": "MFID_Time_Drift.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/MFID_Time_Drift.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Hosts with NTP time issues (time drifts) can affect best execution practices",
                "search": "|inputlookup timedrift.csv|sort - date|where drift<-0.1 OR drift>+0.1",
                "vizParameters": {
            "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_MFID_Best_Execution_Buy": {
        "id": "MFID Best Execution Buy",
        "domain": "Application",
        "help": "Buy orders should get the best price among exchanges. Find orders that have lower prices in other exchanges than the execution price.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "MFID",
        "howToImplement": "<p>This one requires a lookup data base of reference data that has the price of all tradeable commodidities for each interval being considered. Perform a lookup (dbx lookup) to find the price of a symbol at the time of a trade from each exchange in the database. If the exchange price is lower than the trade price, it is a violation.",
        "hasSearch": "Yes",
        "category": "Compliance",
        "knownFP": "unused",
        "operationalize": "Run a compliance report on a regular basis to find out which trades have violated buy execution compliance. It is important to know this to investigate to avoid future issues.",
        "relevance": "Violating Best Execution may result in penalties.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=MFID Best Execution Buy - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows Splunk correlating trade logs with pricing databases to see if a trade met best execution for a buyer or a lower price was found.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "MFID Best Execution Buy Violations",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs| lookup FSExchange _time, symbol OUTPUT exchangeA exchangeB exchangeC|where (action=\"buy\") AND (amount>exchangeA OR amount>exchangeB OR amount>exchangeC)",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "MFID Best Execution Buy - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "MFID_Best_Execution_Buy.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/MFID_Best_Execution_Buy.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Buy orders that did not get the best price from exchanges",
                "search": "|inputlookup orders.csv|lookup FSExchange _time, symbol OUTPUT exchangeA exchangeB exchangeC|where (action=\"buy\") AND (amount>exchangeA OR amount>exchangeB OR amount>exchangeC)|fields - epoch",
                "vizParameters": {
            "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_MFID_Best_Execution_Sell": {
        "id": "MFID Best Execution Sell",
        "domain": "Application",
        "help": "Sell orders should get the best price among exchanges. Find orders that have higher prices in other exchanges than the execution price.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "MFID",
        "howToImplement": "<p>This one requires a lookup data base of reference data that has the price of all tradeable commodidities for each interval being considered. Perform a lookup (dbx lookup) to find the price of a symbol at the time of a trade from each exchange in the database. If the exchange price is higher than the trade price, it is a violation.",
        "hasSearch": "Yes",
        "category": "Compliance",
        "knownFP": "unused",
        "operationalize": "Run a compliance report on a regular basis to find out which trades have violated buy execution compliance. It is important to know this to investigate why to avoid future issues.",
        "relevance": "Violating Best Execution may result in penalties.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=MFID Best Execution Sell - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows Splunk correlating trade logs with pricing databases to see if a trade met best execution for a seller or a higher price was found.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "MFID Best Execution Sell Violations",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs| lookup FSExchange _time, symbol OUTPUT exchangeA exchangeB exchangeC|where (action=\"sell\") AND (amount<exchangeA OR amount<exchangeB OR amount<exchangeC)",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "MFID Best Execution Sell - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "MFID_Best_Execution_Sell.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/MFID_Best_Execution_Sell.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Sell orders that did not get the best price from exchanges",
                "search": "|inputlookup orders.csv|lookup FSExchange _time, symbol OUTPUT exchangeA exchangeB exchangeC|where (action=\"sell\") AND (amount<exchangeA OR amount<exchangeB OR amount<exchangeC)|fields - epoch",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_CC_Fraud_Rare_Spending": {
        "id": "CC Fraud Rare Spending",
        "domain": "Application",
        "help": "If a customer has not used their card in 6 months and all of a sudden make a big purchaes with it, it should be questioned if the purchase is from the customer or a stolen card.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Fraud",
        "howToImplement": "<p>Use a lookup to find out the last time a customer used their credit card. Then use stats to summarize their day's total spent and if the total is large (greater than 3000.00) and the last time they used the card was 6 months ago, question the customer.",
        "hasSearch": "Yes",
        "category": "Fraud",
        "knownFP": "unused",
        "operationalize": "Run a daily report which customers have not used their card in at least 6 months and today they spend an inordinate amount. This may be a sign of a stolen credit card.",
        "relevance": "Rarely using a card and suddenly spending too much could be a sign of a stolen credit card.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CC Fraud Rare Spending - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows Splunk correlating total purchase amount by customer with the last time they used a credit card. If the time difference is more than 6 months and a large amount was spent, it could indicate possible fraud.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "CC Fraud Rare Large Spending",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|lookup CCData customer|stats sum(amount) as total_spent first(_time) as _time  first(previous_tx_date) as previous_date by customer|where total_spent>3000 and _time>relative_time(strptime(previous_date, \"%m/%d/%Y %H:%M:%S\"), \"+6mon\")|eval total_spent=tostring(round(total_spent, 2),\"commas\")",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CC Fraud Rare Spending - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CC_Fraud_Rare_Spending.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CC_Fraud_Rare_Spending.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Spending large amount for 1st time in 6 months",
                "search": "|inputlookup customer_txn.csv | eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|lookup CCData customer|stats sum(amount) as total_spent first(_time) as _time  first(previous_tx_date) as previous_date by customer|where total_spent>3000 and _time>relative_time(strptime(previous_date, \"%m/%d/%Y %H:%M:%S\"), \"+6mon\")|eval total_spent=tostring(round(total_spent, 2),\"commas\")",
                "vizParameters": {
            "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_CC_Fraud_Rare_TooMany": {
        "id": "CC Fraud Rare TooMany",
        "domain": "Application",
        "help": "If a customer has large number of transactions in a one minute window, it could indicate fraudulent card use as opposed to a spending spree.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Fraud",
        "howToImplement": "<p>Use Streamstats in a 1 minute time window to count the number of credit card transactions the customer does. If the number is too high (greater than or equal to 10), report the outlier.",
        "hasSearch": "Yes",
        "category": "Fraud",
        "knownFP": "unused",
        "operationalize": "Run a regular report for which customers have used their card too frequently over a 1 minute interval. Too much use of the credit card in a short window may indicate a stolen card going on a shopping spree.",
        "relevance": "Too many transactions in one minute could indicate a stolen card.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CC Fraud Rare TooMany - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example calculates over one minute windows the number of credit card transactions that were done. If too many were done for the same customers, it could indicate a stolen card.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "CC Fraud Too Many Transactions",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs | eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|streamstats earliest(_time) as _time latest(_time) as latest_time time_window=1m count(action) as num_transactions  by customer|where num_transactions>=10 |eval latest_time=strftime(latest_time,\"%Y-%m-%d %H:%M:%S\")|dedup customer|table customer, _time, latest_time, num_transactions, category",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CC Fraud Rare TooMany - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CC_Fraud_Rare_TooMany.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CC_Fraud_Rare_TooMany.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Too Many Transactions in 1 minute window from customer",
                "search": "|inputlookup customer_txn.csv | eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|streamstats earliest(_time) as _time latest(_time) as latest_time time_window=1m count(action) as num_transactions  by customer|where num_transactions>=10 |eval latest_time=strftime(latest_time,\"%Y-%m-%d %H:%M:%S\")|dedup customer|table customer, _time, latest_time, num_transactions, category",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_CC_Fraud_New_Category": {
        "id": "CC Fraud New Category",
        "domain": "Application",
        "help": "Buying from a new category a large ticket item could indicate a stolen credit card",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Fraud",
        "howToImplement": "<p>Use a lookup to find out each customer's categories for spending. If they are buying from a new category not in their list and the amount is greater than a theshhold (1000.00), it is an outlier. ",
        "hasSearch": "Yes",
        "category": "Fraud",
        "knownFP": "unused",
        "operationalize": "Run a regular report for which customers have bought from new categories with large transactions. This may indicate fraud. You can also make this an alert that instantly notifies the customer. Use a lookup to get the customer's email or text message contact.",
        "relevance": "Buying from a new category a large ticket item could indicate a stolen credit card",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CC Fraud New Category - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows results of customers purchasing from a new category with a large transaction amount. If the category is new and the amount is large, suspect fraud.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "CC Fraud Large Spending on New Category",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs|lookup CCData customer|streamstats window=1 list(category) as category by customer |makemv delim=\"|\" categories|eval match=if(match(categories,category),1,0)|where match=0 and amount>1000|eval amount=tostring(round(amount, 2),\"commas\")|table customer _time, amount, categories category, action",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CC Fraud New Category - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CC_Fraud_New_Category.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CC_Fraud_New_Category.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Spending large amount on a new category",
                "search": "|inputlookup customer_txn.csv | eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|lookup CCData customer|streamstats window=1 list(category) as category by customer |makemv delim=\"|\" categories|eval match=if(match(categories,category),1,0)|where match=0 and amount>1000|eval amount=tostring(round(amount, 2),\"commas\")|table customer _time, amount, categories category, action",
                "vizParameters": {
            "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_CC_Fraud_Small_Large": {
        "id": "CC Fraud Small Large",
        "domain": "Application",
        "help": "Testing a  card and then using it immediately for a large purchase could indicate  a stolen credit card.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Fraud",
        "howToImplement": "<p>Use Streamstats to find out if a customer purchases a small amount to test a card and a large amount in a one minute time window. If so, the card may be stolen.",
        "hasSearch": "Yes",
        "category": "Fraud",
        "knownFP": "unused",
        "operationalize": "Run a regular report for which customers have a small amount followed by a large amount within a short period. You can also alert the customer right away after looking up their contact information. If the card is stolen, this may prevent further fraud.",
        "relevance": "Testing a card and then using it immediately for a large purchase could indicate a stolen credit card.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CC Fraud Small Large - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows Splunk looking for a customer who may be testing a credit card with a small purchase followed by a large purchase in a short time window.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "CC Fraud Buy Small, Then Large Quickly",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs|streamstats earliest(amount) as first_amount latest(amount) as last_amount earliest(_time) as _time latest(_time) as latest_time time_window=1m count(action) as num_transactions by customer|where num_transactions>=2 and first_amount<20 and last_amount>3000|eval first_amount=tostring(round(first_amount, 2),\"commas\"), last_amount=tostring(round(last_amount, 2),\"commas\")| eval latest_time=strftime(latest_time,\"%Y/%m/%d %H:%M:%S\")|table customer, _time, latest_time, num_transactions, first_amount last_amount",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CC Fraud Small Large - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CC_Fraud_Small_Large.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CC_Fraud_Small_Large.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Buying small amount followed by large amount in 1 minute window",
                "search": "|inputlookup customer_txn.csv | eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|streamstats earliest(amount) as first_amount latest(amount) as last_amount earliest(_time) as _time latest(_time) as latest_time time_window=1m count(action) as num_transactions   by customer|where num_transactions>=2 and first_amount<20 and last_amount>3000|eval first_amount=tostring(round(first_amount, 2),\"commas\"), last_amount=tostring(round(last_amount, 2),\"commas\")| eval latest_time=strftime(latest_time,\"%Y/%m/%d %H:%M:%S\")|table customer, _time, latest_time, num_transactions, first_amount last_amount",
                "vizParameters": {
            "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_CC_Fraud_TooMany_TooLarge": {
        "id": "CC Fraud TooMany TooLarge",
        "domain": "Application",
        "help": "Going on a shopping spree in a short amount of time with a large amount of transactions may indicate fraud.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Fraud",
        "howToImplement": "<p>Use Streamstats to find out if a customer purchases a large total amount with at least 5 transactions in a one minute window. This could be a bot or a stolen credit card.",
        "hasSearch": "Yes",
        "category": "Fraud",
        "knownFP": "unused",
        "operationalize": "Run a regular report for which customers have a large amount purchased within a short period with a high number of transactions. You can also alert the customer right away after looking up their contact information, to prevent further fraud.",
        "relevance": "Going on a shopping spree in a short amount of  time with a large amount of transactions may indicate fraud.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CC Fraud TooMany TooLarge - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows Splunk looking for a customer who may be using a credit card as fast as possible in an automated way to purchase a large total amount, indicating a stolen credit card.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "CC Fraud Large Spending Quickly",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs|streamstats earliest(_time) as _time latest(_time) as latest_time time_window=1m count(action) as num_transactions  sum(amount) as total_spent by customer|where num_transactions>=5 AND total_spent>5000|fields - UTC|eval latest_time=strftime(latest_time,\"%Y/%m/%d %H:%M:%S\")|eval total_spent=tostring(round(total_spent, 2),\"commas\")|table customer, _time, latest_time, num_transactions, total_spent, category",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CC Fraud TooMany TooLarge - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CC_Fraud_TooMany_TooLarge.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CC_Fraud_TooMany_TooLarge.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "At least 5 transactions in 1 minute with over 5000 spent",
                "search": "|inputlookup customer_txn.csv | eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|streamstats earliest(_time) as _time latest(_time) as latest_time time_window=1m count(action) as num_transactions  sum(amount) as total_spent by customer|where num_transactions>=5 AND total_spent>5000|eval latest_time=strftime(latest_time,\"%Y/%m/%d %H:%M:%S\")|eval total_spent=tostring(round(total_spent, 2),\"commas\")|table customer, _time, latest_time, num_transactions, total_spent, category",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Account_Compliance_Negative_Balance": {
        "id": "Account Compliance Negative Balance",
        "domain": "Application",
        "help": "A negative balance could indicate an overdraft or account takeover.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Bank Account Compliance",
        "howToImplement": "<p>Obtain the application logs for a banking transaction. Correlate this with database reference data that shows the other accounts for the customer. If any other account has a negative balance, inform the customer",
        "hasSearch": "Yes",
        "category": "Compliance",
        "knownFP": "unused",
        "operationalize": "Every time a customer performs an account transaction, inform them about their other accounts, especially, one that that has a negative balance, so they can take corrective action.",
        "relevance": "A negative balance could indicate an overdraft or account takeover.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Account Compliance Negative Balance - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows just in time information. After an account transaction, inform the customer if any of their other accounts have a negative balance.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Negative Account Balance",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs|lookup All_Accounts customer |stats last(_time) as _time last(amount) as amount last(accountID) as accountID last(action) as action last(account_type) as account_type list(other_balance) as other_balance list(other_accountID) as other_accountID  list(other_account_type) as other_account_type by customer |search other_balance=*|nomv other_balance|search other_balance=\"-*\"|makemv delim=\" \" other_balance|table _time, customer, amount, accountID, action, account_type, other_accountID, other_account_type, other_balance|eval amount=tostring(round(amount, 2),\"commas\")",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Account Compliance Negative Balance - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Account_Compliance_Negative_Balance.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Account_Compliance_Negative_Balance.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Customers with at least 1 negative balance account",
                "search": "|inputlookup bank_accounts.csv | eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|lookup All_Accounts customer |stats last(_time) as _time last(amount) as amount last(accountID) as accountID last(action) as action last(account_type) as account_type list(other_balance) as other_balance list(other_accountID) as other_accountID  list(other_account_type) as other_account_type by customer |search other_balance=*|nomv other_balance|search other_balance=\"-*\"|makemv delim=\" \" other_balance|table _time, customer, amount, accountID, action, account_type, other_accountID, other_account_type, other_balance|eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Account_Compliance_Zero_Balance": {
        "id": "Account Compliance Zero Balance",
        "domain": "Application",
        "help": "A zero balance could indicate a bogus account created for commissions.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Bank Account Compliance",
        "howToImplement": "<p>Obtain the application logs for a banking transaction. Correlate this with database reference data that shows the other accounts for the customer. If any other account as a zero balance, inform the customer",
        "hasSearch": "Yes",
        "category": "Compliance",
        "knownFP": "unused",
        "operationalize": "Everytime a customer performs an account tranaction, inform them about their other accounts, especially, one that that has a zero balance, so they can take corrective action.",
        "relevance": "A zero balance could indicate a bogus account created for commissions.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Account Compliance Zero Balance - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows just in time information. After an account transaction, inform the customer if any of their other accounts have a zero balance, which may be created for commissions.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Zero Account Balance",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs|lookup All_Accounts customer |stats last(_time) as _time last(amount) as amount last(accountID) as accountID last(action) as action last(account_type) as account_type list(other_balance) as other_balance list(other_accountID) as other_accountID  list(other_account_type) as other_account_type by customer |eval is_match=mvfilter(match(\"0\", other_balance))|search is_match=*|fields - is_matchtable|table _time, customer, amount, accountID, action, account_type, other_accountID, other_account_type, other_balance|eval amount=tostring(round(amount, 2),\"commas\")",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Account Compliance Zero Balance - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Account_Compliance_Zero_Balance.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Account_Compliance_Zero_Balance.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Customers with at least 1 zero balance account",
                "search": "|inputlookup bank_accounts.csv | eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|lookup All_Accounts customer |stats last(_time) as _time last(amount) as amount last(accountID) as accountID last(action) as action last(account_type) as account_type list(other_balance) as other_balance list(other_accountID) as other_accountID  list(other_account_type) as other_account_type by customer |eval is_match=mvfilter(match(\"0\", other_balance))|search is_match=*|fields - is_matchtable|table _time, customer, amount, accountID, action, account_type, other_accountID, other_account_type, other_balance|eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Account_Compliance_TooMany": {
        "id": "Account Compliance TooMany",
        "domain": "Application",
        "help": "Too many accounts may mean consolidation is called for or to check if accounts were created just for commissions.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Bank Account Compliance",
        "howToImplement": "<p>Obtain the application logs for a banking transaction. Correlate this with database reference data that shows the other accounts for the customer. If the number of other accounts is greater than a threshold, (10), inform the customer.",
        "hasSearch": "Yes",
        "category": "Compliance",
        "knownFP": "unused",
        "operationalize": "Every time a customer performs an account transaction, inform them about their other accounts, especially, when they have too many accounts, which allows them to consolidate.",
        "relevance": "Too many accounts may mean consolidation is called for or to check if accounts were created just for commissions.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Account Compliance TooMany - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows just in time information. After an account transaction, inform the customer if they have too many accounts above a threshold so they can consolidate.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Too Many Accounts for Customer",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs|lookup All_Accounts customer|stats last(_time) as _time list(accountID) as accountID list(action) as action list(amount) as amount list(balance) as balance values(other_accountID) as other_accountID sum(other_balance) as Total_Balance by customer|eval count_other_accounts=mvcount(other_accountID)|where count_other_accounts>10|eval Total_Balance=Total_Balance+balance |eval balance=tostring(round(balance, 2),\"commas\"), Total_Balance=tostring(round(Total_Balance, 2),\"commas\")",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Account Compliance TooMany - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Account_Compliance_TooMany.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Account_Compliance_TooMany.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Customers with large number of accounts",
                "search": "|inputlookup bank_accounts.csv | eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|lookup All_Accounts customer|stats last(_time) as _time list(accountID) as accountID list(action) as action list(amount) as amount list(balance) as balance values(other_accountID) as other_accountID sum(other_balance) as Total_Balance by customer|eval count_other_accounts=mvcount(other_accountID)|where count_other_accounts>10|eval Total_Balance=Total_Balance+balance |eval balance=tostring(round(balance, 2),\"commas\"), Total_Balance=tostring(round(Total_Balance, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Account_Compliance_TooOld": {
        "id": "Account Compliance TooOld",
        "domain": "Application",
        "help": "Customer's other accounts older than 6 months could be considered dormant. Inform the customer.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Bank Account Compliance",
        "howToImplement": "<p>Obtain the application logs for a banking transaction. Correlate this with database reference data that shows the other accounts for the customer. If the last touched data for any other accounts is older than 6 months from the current transaction date, inform the customer.",
        "hasSearch": "Yes",
        "category": "Compliance",
        "knownFP": "unused",
        "operationalize": "Every time a customer performs an account transaction, inform them about their other accounts, especially, when an account is older than 6 months since last touched. This will help the customer avoid fees and future government takeover of accounts.",
        "relevance": "If a Customer's other accounts older than 6 months have not been touched, then inform the customer, so they can take action.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Account Compliance TooOld - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows just in time information. After an account transaction, inform the customer if they have any untouched accounts older than 6 months from their current transaction date to avoid dormant accounts.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Dormant Accounts for Customer",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "|inputlookup other_accounts.csv | eval prev_epoch=strptime(last_touched, \"%m/%d/%Y %H:%M:%S\")|sort - last_touched|join customer [ sourctype=app_logs ]|where epoch>relative_time(prev_epoch, \"+6mon\")|fields - prev_epoch, balance|rename accountID as current_accountID action as current_action account_type as current_account_type |eval current_balance=tostring(round(current_balance, 2),\"commas\"), other_balance=tostring(round(other_balance, 2),\"commas\")|convert timeformat=\"%m/%d/%Y %H:%M:%S\" ctime(epoch) AS current_time|fields - epoch",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Account Compliance TooOld - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Account_Compliance_TooOld.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Account_Compliance_TooOld.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Customers with other accounts older than 6 months since last touched",
                "search": "|inputlookup other_accounts.csv | eval prev_epoch=strptime(last_touched, \"%m/%d/%Y %H:%M:%S\")|sort - last_touched|join customer [ |inputlookup bank_accounts.csv ]|where epoch>relative_time(prev_epoch, \"+6mon\")|fields - prev_epoch, balance|rename accountID as current_accountID action as current_action account_type as current_account_type |eval current_balance=tostring(round(current_balance, 2),\"commas\"), other_balance=tostring(round(other_balance, 2),\"commas\")|convert timeformat=\"%m/%d/%Y %H:%M:%S\" ctime(epoch) AS current_time|fields - epoch",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Account_Too_Much_Balance": {
        "id": "Account Too Much Balance",
        "domain": "Application",
        "help": "In certain countries, accounts are insured only up to certain threshold. Inform the customer, their accounts are not totally insured.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Bank Account Compliance",
        "howToImplement": "<p>Obtain the application logs for a banking transaction. Correlate this with database reference data that shows the other accounts for the customer. If the total balance for the customer is greater than a threshold (250,000.00), inform the customer of their large balance.",
        "hasSearch": "Yes",
        "category": "Compliance",
        "knownFP": "unused",
        "operationalize": "Every time a customer performs an account transaction, inform them about their other accounts, especially, when their total balance is greater than the country's insured accounts threshold. This allows them to take action to move assets or invest them into the bank's offerings.",
        "relevance": "In certain countries, accounts are insured only up to certain threshold. Inform the customer that their accounts are not totally insured after a certain total amount.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Account Too Much Balance - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows just in time information. After an account transaction, inform the customer if their total accounts balance is greater than their country's established insured threshold.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Large Account Balance for Customer",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs|lookup All_Accounts customer|stats  values(_time) as _time list(balance) as current_account_balance list(account_type) as current_account_type list(other_account_type) as other_account_type list(other_accountID) as other_accountID list(other_balance) as other_balance sum(other_balance) as Total_Balance by customer|eval Total_Balance=Total_Balance+current_account_balance|search other_account_type=\"*\" AND Total_Balance>250000|eval Total_Balance=tostring(round(Total_Balance, 2),\"commas\"), current_account_balance=tostring(round(current_account_balance, 2),\"commas\")",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Account Too Much Balance - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Account_Too_Much_Balance.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Account_Too_Much_Balance.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Customers that have a total balance greater than 250,000.00",
                "search": "|inputlookup bank_accounts.csv | eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|lookup All_Accounts customer|stats  values(_time) as _time list(balance) as current_account_balance list(account_type) as current_account_type list(other_account_type) as other_account_type list(other_accountID) as other_accountID list(other_balance) as other_balance sum(other_balance) as Total_Balance by customer|eval Total_Balance=Total_Balance+current_account_balance|search other_account_type=\"*\" AND Total_Balance>250000|eval Total_Balance=tostring(round(Total_Balance, 2),\"commas\"), current_account_balance=tostring(round(current_account_balance, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_FIX_Readable": {
        "id": "FIX Readable",
        "domain": "Application",
        "help": "By making the FIX order logs human readable, it makes searching easier.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "FIX Order",
        "howToImplement": "<p>Obtain the application logs for a FIX Order. Then run them through the translatefix command installed from  <a href=\"https://splunkbase.splunk.com/app/431\">Splunkbase</a>.</p> <p>This will translate binary tags into human readable form. As a bonus, use extract kvdelim=\"=\" to extract fields automatically. Here's the sample SPL</p><b>sourcetype=app_logs|translatefix|extract kvdelim=\"=\"|table _time, _raw</b></p>",
        "hasSearch": "Yes",
        "category": "Investigation",
        "knownFP": "unused",
        "operationalize": "Use translatefix command to read and investigate your FIX order. By making key values human readable, fix orders in logs can be used for reports as well and become a valuable source of information.",
        "relevance": "By making the FIX order logs human readable, it makes searching easier.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=FIX Readable - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows how Splunk can use a custom command from Splunkbase to make FIX logs human readable by replacing binary with words for the tags.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "All FIX Data Human Readable",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "FIX Readable - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "FIX_Readable.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/FIX_Readable.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Human Readable Fix Order Events",
                "search": "|inputlookup fix.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\")|sort - _time|translatefix|extract kvdelim=\"=\"|table _time, _raw",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_FIX_Average_Price": {
        "id": "FIX Average Price",
        "domain": "Application",
        "help": "By making the FIX order logs human readable, it makes searching easier. An average price per symbol gives an at a glance report on how prices are doing for the Symbols in the FIX orders.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "FIX Order",
        "howToImplement": "<p>Obtain the application logs for a FIX Order. Then run them through the translatefix command installed from  <a href=\"https://splunkbase.splunk.com/app/431\">Splunkbase</a>.</p> <p>This will translate binary tags into human readable form. As a bonus, use extract kvdelim=\"=\" to extract fields automatically. Then, you can do a stats avg(Price) by Symbol. Here's the sample SPL</p><b>sourcetype=app_logs|translatefix|extract kvdelim=\"=\"|stats avg(Price) by Symbol</b></p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Use translatefix command to read and investigate your FIX order. Then create reports using Splunk commands. An average price per symbol gives an at a glance report on how prices are doing for the Symbols in the FIX orders.",
        "relevance": "By making the FIX order logs human readable, it makes searching easier. An average price per symbol gives an at a glance report on how prices are doing for the Symbols in the FIX orders.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=FIX Average Price - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows how Splunk can use a custom command from Splunkbase to make FIX logs human readable by replacing binary with words for the tags. It then uses stats to compute the average price of a Symbol.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Getting Average Symbol Price from FIX",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "FIX Average Price - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "FIX_Average_Price.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/FIX_Average_Price.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                    "panel": "row1cell1",
                    "type": "viz",
                    "vizType": "ChartElement",
                    "title": "Human Readable Average Price from Symbol",
                    "search": "|inputlookup morefix.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\")|sort _time|translatefix|extract kvdelim=\"=\"|stats avg(Price) by Symbol",
                    "vizParameters": {
                        "charting.chart.showDataLabels": "none",
                        "charting.axisTitleY2.visibility": "visible",
                        "charting.chart.stackMode": "default",
                        "charting.axisY2.scale": "inherit",
                        "charting.layout.splitSeries.allowIndependentYRanges": "0",
                        "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                        "charting.axisY2.abbreviation": "none",
                        "charting.axisY2.enabled": "0",
                        "charting.chart.bubbleMinimumSize": "10",
                        "charting.lineWidth": "2",
                        "charting.chart.bubbleMaximumSize": "50",
                        "trellis.size": "medium",
                        "charting.chart": "column",
                        "trellis.scales.shared": "1",
                        "charting.chart.sliceCollapsingThreshold": "0.01",
                        "charting.drilldown": "none",
                        "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                        "charting.legend.placement": "right",
                        "trellis.enabled": "0",
                        "charting.chart.bubbleSizeBy": "area",
                        "charting.axisY.scale": "linear",
                        "resizable": true,
                        "charting.legend.mode": "standard",
                        "charting.chart.style": "shiny",
                        "charting.axisTitleX.visibility": "visible",
                        "charting.axisTitleY.visibility": "visible",
                        "charting.axisX.scale": "linear",
                        "charting.axisY.abbreviation": "none",
                        "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                        "charting.layout.splitSeries": "0",
                        "charting.chart.nullValueMode": "gaps",
                        "count": "15",
                        "drilldown": "none",
                        "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_FIX_Order_Status_Distribution": {
        "id": "FIX Order Status Distribution",
        "domain": "Application",
        "help": "By making the FIX order logs human readable, it makes searching easier.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "FIX Order",
        "howToImplement": "<p>Obtain the application logs for a FIX Order. Then run them through the translatefix command installed from  <a href=\"https://splunkbase.splunk.com/app/431\">Splunkbase</a>.</p> <p>This will translate binary tags into human readable form. As a bonus, use extract kvdelim=\"=\" to extract fields automatically. Then, you can do a stats avg(Price) by Symbol. Here's the sample SPL</p><b>sourcetype=app_logs|translatefix|extract kvdelim=\"=\"|stats count by OrdStatus</b></p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Use translatefix command to read and investigate your FIX order. Then create reports using Splunk commands. A distribution by order status gives a quick report on how FIX orders are flowing.",
        "relevance": "By making the FIX order logs human readable, it makes reporting easier. A distribution by order status gives a quick report on how FIX orders are flowing.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=FIX Order Status Distribution - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows how Splunk can use a custom command from Splunkbase to make FIX logs human readable by replacing binary with words for the tags. It then uses stats to count by order status for reporting.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Order Status Distribution for FIX Orders",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "FIX Order Status Distribution - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "FIX_Order_Status_Distribution.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/FIX_Order_Status_Distribution.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Order status distribution pie chart",
                "search": "|inputlookup fix.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\")|sort _time|translatefix|extract kvdelim=\"=\"|stats count by OrdStatus",
                "vizParameters": {
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.scale": "inherit",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.lineWidth": "2",
                    "charting.chart.bubbleMaximumSize": "50",
                    "trellis.size": "medium",
                    "charting.chart": "pie",
                    "trellis.scales.shared": "1",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.drilldown": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.placement": "right",
                    "trellis.enabled": "0",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.scale": "linear",
                    "resizable": true,
                    "charting.legend.mode": "standard",
                    "charting.chart.style": "shiny",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.scale": "linear",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.nullValueMode": "gaps",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
            {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Order status distribution bar chart",
                "search": "|inputlookup fix.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\")|sort _time|translatefix|extract kvdelim=\"=\"|stats count by OrdStatus",
                "vizParameters": {
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.scale": "inherit",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.lineWidth": "2",
                    "charting.chart.bubbleMaximumSize": "50",
                    "trellis.size": "medium",
                    "charting.chart": "bar",
                    "trellis.scales.shared": "1",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.drilldown": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.placement": "right",
                    "trellis.enabled": "0",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.scale": "linear",
                    "resizable": true,
                    "charting.legend.mode": "standard",
                    "charting.chart.style": "shiny",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.scale": "linear",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.nullValueMode": "gaps",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        
        ]
    },
    "showcase_FIX_Message_Types": {
        "id": "FIX Message Types",
        "domain": "Application",
        "help": "By making the FIX order logs human readable, it makes searching easier.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "FIX Order",
        "howToImplement": "<p>Obtain the application logs for a FIX Message Types. Then run them through the translatefix command installed from  <a href=\"https://splunkbase.splunk.com/app/431\">Splunkbase</a>.</p> <p>This will translate binary tags into human readable form. As a bonus, use extract kvdelim=\"=\" to extract fields automatically. Here's the sample SPL</p><b>sourcetype=app_logs|translatefix|extract kvdelim=\"=\"|stats sparkline count by MsgType|sort - count</b> Remove the sparkline for the bar chart.<br>For the last search, use at the end |chart usenull=f count by MsgType, OrdType</p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Use translatefix command to read and report your FIX order. Finding aggregate trends with your message types can help in seeing the flow of your orders and plan for the future.",
        "relevance": "By making the FIX order logs human readable, it makes searching easier. This data can then be used for reports such as the distribution of message types. Decisions can then be made on this distribution.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=FIX Message Types - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows how Splunk can use a custom command from Splunkbase to make FIX logs human readable by replacing binary with words for the tags. It then finds aggregate trends for message types.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "FIX Message Types Distribution",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "FIX Message Types - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "FIX_Message_Types.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/FIX_Message_Types.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Message type trend",
                "search": "|inputlookup fix.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\")|sort - _time|translatefix|extract kvdelim=\"=\"|stats sparkline count by MsgType|sort - count",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
            {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Count by message types",
                "search": "|inputlookup fix.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\")|sort - _time|translatefix|extract kvdelim=\"=\"|stats count by MsgType|sort - count",
                "vizParameters": {
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.scale": "inherit",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.lineWidth": "2",
                    "charting.chart.bubbleMaximumSize": "50",
                    "trellis.size": "medium",
                    "charting.chart": "bar",
                    "trellis.scales.shared": "1",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.drilldown": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.placement": "right",
                    "trellis.enabled": "0",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.scale": "linear",
                    "resizable": true,
                    "charting.legend.mode": "standard",
                    "charting.chart.style": "shiny",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.scale": "linear",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.nullValueMode": "gaps",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
            {
                "panel": "row2cell2",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Message type order type distribution",
                "search": "|inputlookup fix.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\")|sort - _time|translatefix|extract kvdelim=\"=\"|chart usenull=f count by MsgType, OrdType",
                "vizParameters": {
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.scale": "inherit",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.lineWidth": "2",
                    "charting.chart.bubbleMaximumSize": "50",
                    "trellis.size": "medium",
                    "charting.chart": "column",
                    "trellis.scales.shared": "1",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.drilldown": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.placement": "right",
                    "trellis.enabled": "0",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.scale": "linear",
                    "resizable": true,
                    "charting.legend.mode": "standard",
                    "charting.chart.style": "shiny",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.scale": "linear",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.nullValueMode": "gaps",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_FIX_Order_Types": {
        "id": "FIX Order Types",
        "domain": "Application",
        "help": "By making the FIX order logs human readable, it makes searching easier.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "FIX Order",
        "howToImplement": "<p>Obtain the application logs for a FIX Message Types. Then run them through the translatefix command installed from  <a href=\"https://splunkbase.splunk.com/app/431\">Splunkbase</a>.</p> <p>This will translate binary tags into human readable form. As a bonus, use extract kvdelim=\"=\" to extract fields automatically. Here's the sample SPL</p><b>sourcetype=app_logs|translatefix|extract kvdelim=\"=\"|chart usenull=f count(MsgType) over OrdType by TimeInForce</b> <br>For the first table search, use at the end |stats count by OrdType</p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Use translatefix command to read and report your FIX order. Knowing how many orders are market and how many are limit until the day's end can help in planning and knowing order trends.",
        "relevance": "By making the FIX order logs human readable, it makes searching easier. Reports on the type of order can then be created, which helps see how many orders will process immediately and how many will wait for a limit.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=FIX Order Types - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows how Splunk can use a custom command from Splunkbase to make FIX logs human readable by replacing binary with words for the tags. It then groups by order types to see end of day distributions.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "FIX Order Types Market Closing Distribution",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "FIX Order Types - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "FIX_Order_Types.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/FIX_Order_Types.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Order types for duration",
                "search": "|inputlookup fix.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\")|sort - _time|translatefix|extract kvdelim=\"=\"|stats count by OrdType",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
            {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Message types and duration to market close distribution",
                "search": "|inputlookup fix.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\")|sort - _time|translatefix|extract kvdelim=\"=\"|chart usenull=f count(MsgType) over OrdType by TimeInForce",
                "vizParameters": {
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.scale": "inherit",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.lineWidth": "2",
                    "charting.chart.bubbleMaximumSize": "50",
                    "trellis.size": "medium",
                    "charting.chart": "column",
                    "trellis.scales.shared": "1",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.drilldown": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.placement": "right",
                    "trellis.enabled": "0",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.scale": "linear",
                    "resizable": true,
                    "charting.legend.mode": "standard",
                    "charting.chart.style": "shiny",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.scale": "linear",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.nullValueMode": "gaps",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_Bitcoin_TX_Index": {
        "id": "Bitcoin TX Index",
        "domain": "Application",
        "help": "Trace Bitcoin Transaction.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Bitcoin",
        "howToImplement": "<p>First obtain Brian Guilfoyle's  <a href=\"https://splunkbase.splunk.com/app/2625\">Splunkbase app Bitcoin Observer</a>.</p> <p>This will provide Python scripts to index public ledger data for Bitcoin transactions and activity. Next, use the indexed data and field extractions to create reports. The app has some sample dashboards.  Here's the sample SPL for this example, which covers tracing in and out values for a bitcoin transaction index. Ideally, you would provide a Splunk macro or Splunk form for the search.</p><p><b>sourcetype=bitcoin|(eventcat=input_from OR eventcat=output_to) block_height=$enter_your_block_height$ tx_index=$enter_your_tx_index$ | table _time, eventcat, block_height, tx_index, out_address, out_n, out_script, out_spent, out_tx_index, out_value, in_address, in_n, in_script, in_tx_index, in_value</b></p>",
        "hasSearch": "Yes",
        "category": "Investigation",
        "knownFP": "unused",
        "operationalize": "By tracing individual transactions within a block, one can see the values transferred between bitcoin addresses, giving a ledger report for the transactions. This involves no code skills and easy SPL.",
        "relevance": "Bitcoin is a popular digital currency. By tracing the transaction flow, one can troubleshoot and get insight.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Bitcoin TX Index - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows how an index transaction in Bitcoin can be traced with the block_height and tx index as inputs to the search. The in and out values for the transaction will be presented over time.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Bitcoin Transaction Index Tracing",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Bitcoin Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Bitcoin TX Index - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Bitcoin_TX_Index.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Bitcoin_TX_Index.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Sample TXN Tracing",
                "search": "|inputlookup bc_trans.csv| sort - _time|search (eventcat=input_from OR eventcat=output_to) block_height=532209 tx_index=360716205 | table _time, eventcat, block_height, tx_index, out_address, out_n, out_script, out_spent, out_tx_index, out_value, in_address, in_n, in_script, in_tx_index, in_value",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Bitcoin_Average_Block_Fee": {
        "id": "Bitcoin Average Block Fee",
        "domain": "Application",
        "help": "Bitcoin Block Fee Charts.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Bitcoin",
        "howToImplement": "<p>First obtain Brian Guilfoyle's  <a href=\"https://splunkbase.splunk.com/app/2625\">Splunkbase app Bitcoin Observer</a>.</p> <p>This will provide Python scripts to index public ledger data for Bitcoin transactions and activity. Next, use the indexed data and field extractions to create reports. The app has some sample dashboards.  Here's the sample SPL for this example, which covers average block fees over time and average block fee by block height.</p><p><b>sourcetype=bitcoin|timechart avg(block_fee) as average_block_fee span=15m fixedrange=F</b><br> For the first report, use |chart avg(block_fee) by block_size, at the end.</p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "By seeing the average block fee over time, one can see trending. Average block fees over block height provides a report on how block fees are charged by different heights. This involves no code skills and easy SPL.",
        "relevance": "Bitcoin is a popular digital currency. Reports on average block fees can provide insights into how they are trending.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Bitcoin Average Block Fee - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows Bitcoin average block fees over time and average block fees split by block heights to determine trends and aggregations.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Bitcoin Average Block Fee",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Bitcoin Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Bitcoin Average Block Fee - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Bitcoin_Average_Block_Fee.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Bitcoin_Average_Block_Fee.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Average block fee by block size",
                "search": "|inputlookup bc_block.csv|chart avg(block_fee) by block_size",
                "vizParameters": {
                    "charting.drilldown": "none",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisY2.enabled": "0",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.bubbleMaximumSize": "50",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.abbreviation": "none",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.lineWidth": "2",
                    "trellis.size": "medium",
                    "charting.chart.style": "shiny",
                    "charting.chart.stackMode": "stacked",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "column",
                    "charting.axisX.scale": "linear",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisY.scale": "linear",
                    "charting.chart.nullValueMode": "connect",
                    "charting.legend.mode": "standard",
                    "charting.axisY2.scale": "inherit",
                    "charting.legend.placement": "right",
                    "trellis.enabled": "0",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.showDataLabels": "none",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
            {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Average block fee over time",
                "search": "|inputlookup bc_block.csv|eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\") |sort - _time|timechart avg(block_fee) as average_block_fee span=15m fixedrange=F",
                "vizParameters": {
                    "charting.axisTitleY2.visibility": "visible",
                    "resizable": true,
                    "charting.drilldown": "none",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisY2.enabled": "0",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.bubbleMaximumSize": "50",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.abbreviation": "none",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.lineWidth": "2",
                    "trellis.size": "medium",
                    "charting.chart.style": "shiny",
                    "charting.chart.stackMode": "stacked",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "area",
                    "charting.axisX.scale": "linear",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisY.scale": "linear",
                    "charting.chart.nullValueMode": "connect",
                    "charting.legend.mode": "standard",
                    "charting.axisY2.scale": "inherit",
                    "charting.legend.placement": "right",
                    "trellis.enabled": "0",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.showDataLabels": "none",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_Bitcoin_Average_Market_Price": {
        "id": "Bitcoin Average Market Price",
        "domain": "Application",
        "help": "Bitcoin Average Market Price Timechart.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Bitcoin",
        "howToImplement": "<p>First obtain Brian Guilfoyle's  <a href=\"https://splunkbase.splunk.com/app/2625\">Splunkbase app Bitcoin Observer</a>.</p> <p>This will provide Python scripts to index public ledger data for Bitcoin transactions and activity. Next, use the indexed data and field extractions to create reports. The app has some sample dashboards.  Here's the sample SPL for this example, which shows average Market Price over time.</p><p><b>sourcetype=bitcoin|timechart avg(market_price_usd) span=10m fixedrange=F</b></p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "By seeing the average market price over time, one can see trending and make proactive decisions. This involves no code skills and easy SPL.",
        "relevance": "Bitcoin is a popular digital currency. Reports on average market price can help make decisions on investment.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Bitcoin Average Market Price - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows Bitcoin average market price over time to determine trends and aggregations.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Bitcoin Average Market Price",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Bitcoin Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Bitcoin Average Market Price - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Bitcoin_Average_Market_Price.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Bitcoin_Average_Market_Price.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Average market price over time",
                "search": "|inputlookup bc_stats.csv| eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\")|sort - _time| timechart avg(market_price_usd) span=10m fixedrange=F",
                "vizParameters": {
                    "charting.axisTitleY2.visibility": "visible",
                    "resizable": true,
                    "charting.drilldown": "none",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisY2.enabled": "0",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.bubbleMaximumSize": "50",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.abbreviation": "none",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.lineWidth": "2",
                    "trellis.size": "medium",
                    "charting.chart.style": "shiny",
                    "charting.chart.stackMode": "stacked",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "line",
                    "charting.axisX.scale": "linear",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisY.scale": "linear",
                    "charting.chart.nullValueMode": "connect",
                    "charting.legend.mode": "standard",
                    "charting.axisY2.scale": "inherit",
                    "charting.legend.placement": "right",
                    "trellis.enabled": "0",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.showDataLabels": "none",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Bitcoin_Average_Trade_Volume": {
        "id": "Bitcoin Average Trade Volume",
        "domain": "Application",
        "help": "Bitcoin Average Trade Volume Timechart.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Bitcoin",
        "howToImplement": "<p>First obtain Brian Guilfoyle's  <a href=\"https://splunkbase.splunk.com/app/2625\">Splunkbase app Bitcoin Observer</a>.</p> <p>This will provide Python scripts to index public ledger data for Bitcoin transactions and activity. Next, use the indexed data and field extractions to create reports. The app has some sample dashboards.  Here's the sample SPL for this example, which shows average Trade Volume over time.</p><p><b>sourcetype=bitcoin|timechart avg(trade_volume_usd) span=10m fixedrange=F</b></p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "By seeing the average trade volume over time, one can see trending and make proactive decisions to see when the market is volatile or steady. This involves no code skills and easy SPL.",
        "relevance": "Bitcoin is a popular digital currency. The average trade volume can be used to see the volatility of the market.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Bitcoin Average Trade Volume - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows Bitcoin average trade volume over time to determine trends and aggregations.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Bitcoin Average Trade Volume",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Bitcoin Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Bitcoin Average Trade Volume - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Bitcoin_Average_Trade_Volume.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Bitcoin_Average_Trade_Volume.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Average trade volume over time",
                "search": "|inputlookup bc_stats.csv| eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\")|sort - _time| timechart avg(trade_volume_usd) span=10m fixedrange=F",
                "vizParameters": {
                    "charting.axisTitleY2.visibility": "visible",
                    "resizable": true,
                    "charting.drilldown": "none",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisY2.enabled": "0",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.bubbleMaximumSize": "50",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.abbreviation": "none",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.lineWidth": "2",
                    "trellis.size": "medium",
                    "charting.chart.style": "shiny",
                    "charting.chart.stackMode": "stacked",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "area",
                    "charting.axisX.scale": "linear",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisY.scale": "linear",
                    "charting.chart.nullValueMode": "connect",
                    "charting.legend.mode": "standard",
                    "charting.axisY2.scale": "inherit",
                    "charting.legend.placement": "right",
                    "trellis.enabled": "0",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.showDataLabels": "none",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Bitcoin_Average_Miners_Revenue": {
        "id": "Bitcoin Average Miners Revenue",
        "domain": "Application",
        "help": "Bitcoin Average Miners Revenue Timechart.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Bitcoin",
        "howToImplement": "<p>First obtain Brian Guilfoyle's  <a href=\"https://splunkbase.splunk.com/app/2625\">Splunkbase app Bitcoin Observer</a>.</p> <p>This will provide Python scripts to index public ledger data for Bitcoin transactions and activity. Next, use the indexed data and field extractions to create reports. The app has some sample dashboards.  Here's the sample SPL for this example, which shows average Average Miner's Revenue over time.</p><p><b>sourcetype=bitcoin|timechart avg(miners_revenue_usd) span=10m fixedrange=F</b></p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "By seeing the average miner's revenue over time, one can see trending and make proactive decisions to see how the market is doing. This involves no code skills and easy SPL.",
        "relevance": "Bitcoin is a popular digital currency. The average miner's revenue over time report can be used to provide insights.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Bitcoin Average Miners Revenue - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows Bitcoin average miner's revenue over time to determine trends and aggregations.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Bitcoin Average Miners Revenue",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Bitcoin Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Bitcoin Average Miners Revenue - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Bitcoin_Average_Miners_Revenue.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Bitcoin_Average_Miners_Revenue.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Average miners revenue over time",
                "search": "|inputlookup bc_stats.csv| eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\")|sort - _time| timechart avg(miners_revenue_usd) span=10m fixedrange=F",
                "vizParameters": {
                    "charting.axisTitleY2.visibility": "visible",
                    "resizable": true,
                    "charting.drilldown": "none",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisY2.enabled": "0",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.bubbleMaximumSize": "50",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.axisY.abbreviation": "none",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.lineWidth": "2",
                    "trellis.size": "medium",
                    "charting.chart.style": "shiny",
                    "charting.chart.stackMode": "stacked",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "line",
                    "charting.axisX.scale": "linear",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisY.scale": "linear",
                    "charting.chart.nullValueMode": "connect",
                    "charting.legend.mode": "standard",
                    "charting.axisY2.scale": "inherit",
                    "charting.legend.placement": "right",
                    "trellis.enabled": "0",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.showDataLabels": "none",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Trade_Where_Is_It": {
        "id": "Trade Where Is It",
        "domain": "Application",
        "help": "Trace Trade Transaction.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Trade - Where is it",
        "howToImplement": "<p>First, gather application logs for your trades into Splunk and extract the fields that represent the trade ID. If the field names are different across your application logs, you can use the coalesce command in Splunk to collapse them into one name.  Here's the sample SPL for this example, which covers tracing trades using transaction trade ID. The grouping is done by the stats command. Ideally, you would provide a Splunk macro or Splunk form for the search.</p><p><b>sourcetype=app_logs $tradeID$|eval tradeID=coalesce(tradeID, tradeIDReceived, tradeIDSent)|stats list(_raw) by tradeID</b><br>Note the $tradeID$ should be replaced by your actual trade ID.</p>",
        "hasSearch": "Yes",
        "category": "Investigation",
        "knownFP": "unused",
        "operationalize": "Where did my trade go is a popular question. By tracing your trade through time through your trade logs, you can find out where it went for each step and for which step it might have gotten stuck. This is effective for troubleshooting and optimizing your trade flows.",
        "relevance": "Where is my trade is a popular question. This is involved for troubleshooting as trades travel from front office to back office (application to application) and for reporting.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Trade Where Is It - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example traces a trade through the application logs over time. It is used for troubleshooting and providing insights.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Trade Where Is It Tracing",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Trade Where Is It - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Trade_Where_Is_It.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Trade_Where_Is_It.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Sample TXN Tracing",
                "search": "|inputlookup trade_entry.csv |sort - _time|search 327532|eval tradeID=coalesce(tradeID, tradeIDReceived, tradeIDSent)|stats list(_raw) by tradeID",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Trade_Top_Customers": {
        "id": "Trade Top Customers",
        "domain": "Application",
        "help": "Top Trade Customers",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Trade - Where is it",
        "howToImplement": "<p>First, gather application logs for your trades into Splunk and extract the fields that represent customer or account ID. Here's the sample SPL for this example, which covers listing out the top 10 customers making trades by how many times they appear in the logs.</p><p><b>sourcetype=app_logs|top customer limit=10|sort - count|fields - percent</b></p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Knowing who your top customers are is important to make offers and treat them with a certain status.",
        "relevance": "By knowing who are your top customers trading, you can separate out your high value customers and also have insight who they are are day to day.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Trade Top Customers - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example creates a report listing out the top 10 customers making trades.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Top Customers Trading",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Trade Top Customers - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Trade_Top_Customers.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Trade_Top_Customers.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Top 10 customers trading as a list",
                "search": "|inputlookup trade_entry.csv|sort - _time|top customer limit=10|sort - count|fields - percent",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Trade_Total_Bought": {
        "id": "Trade Total Bought",
        "domain": "Application",
        "help": "Trade Total Bought",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Trade - Where is it",
        "howToImplement": "<p>First, gather application logs for your trades into Splunk and extract the fields that represent Symbols and Quantity. Here's the sample SPL for this example, which covers listing out highest total volume per symbol bought.</p><p><b>sourcetype=app_logs action=\"buy\"|chart sum(quantity) as \"Total quantity bought\" by symbol|sort - \"Total quantity bought\"</b></p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Knowing the highest Symbol quantities bought by your customers gives an indicator of how the market is moving for any time slice.",
        "relevance": "Knowing the highest quantity bought by symbol provides insights into market trends. This quantity and symbol list will change hour to hour and day to day.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Trade Total Bought - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example creates a report listing the top Symbols being bought based on quantity.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Trading Total Volume Bought By Symbol",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Trade Total Bought - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Trade_Total_Bought.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Trade_Total_Bought.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Total Bought by Symbol",
                "search": "|inputlookup trade_entry.csv|sort - _time|where action=\"buy\"|chart sum(quantity) as \"Total quantity bought\" by symbol|sort - \"Total quantity bought\"",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Trade_Total_Sold": {
        "id": "Trade Total Sold",
        "domain": "Application",
        "help": "Trade Total Sold",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Trade - Where is it",
        "howToImplement": "<p>First, gather application logs for your trades into Splunk and extract the fields that represent Symbols and Quantity. Here's the sample SPL for this example, which covers listing out highest total volume per symbol sold.</p><p><b>sourcetype=app_logs action=\"sell\"|chart sum(quantity) as \"Total quantity sold\" by symbol|sort - \"Total quantity sold\"</b></p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Knowing the highest Symbol quantities sold by your customers gives an indicator of how the market is moving for any time slice.",
        "relevance": "Seeing what symbols are involved in sell orders by their quantity can help drive some decisions. This list will change hour to hour and day to day.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Trade Total Sold - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example creates a report listing the top Symbols being sold based on quantity.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Trading Total Volume Sold By Symbol",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Trade Total Sold - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Trade_Total_Sold.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Trade_Total_Sold.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Total Sold by Symbol",
                "search": "|inputlookup trade_entry.csv|sort - _time|where action=\"sell\"|chart sum(quantity) as \"Total quantity sold\" by symbol|sort - \"Total quantity sold\"",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Trade_Sell_Statistics": {
        "id": "Trade Sell Statistics",
        "domain": "Application",
        "help": "Trade Sell Statistics",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Trade - Where is it",
        "howToImplement": "<p>First, gather application logs for your trades into Splunk and extract the fields that represent Symbols and Price. Here's the sample SPL for this example, which covers listing out the min, max, mean, and standard deviation of the price per symbol sold.</p><p><b>sourcetype=app_logs action=\"sell\"|stats min(price) max(price) stdev(price) mean(price) by symbol</b></p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Knowing the min, max, mean, and standard deviation for sold symbol prices gives an indicator of how the market is moving for any time slice.",
        "relevance": "Statistics on sell orders such as min, max, mean, and standard deviation of price can help analysts make decisions in near-realtime using machine data rather than relying on a hourly report.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Trade Sell Statistics - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example creates a report listing out the min, max, mean, and standard deviation of prices for Symbols being sold in a report.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Statistics for Prices of Sold Symbols",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Trade Sell Statistics - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Trade_Sell_Statistics.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Trade_Sell_Statistics.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Sell Order Price Statistics by Symbol",
                "search": "|inputlookup trade_entry.csv|sort - _time|where action=\"sell\"|stats min(price) as min_price max(price) as max_price stdev(price) as stdev_price mean(price) as mean_price by symbol|eval min_price=tostring(round(min_price, 2),\"commas\"), max_price=tostring(round(max_price, 2),\"commas\"), stdev_price=tostring(round(stdev_price, 2),\"commas\"), mean_price=tostring(round(mean_price, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Trade_Buy_Statistics": {
        "id": "Trade Buy Statistics",
        "domain": "Application",
        "help": "Trade Buy Statistics",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Trade - Where is it",
        "howToImplement": "<p>First, gather application logs for your trades into Splunk and extract the fields that represent Symbols and Price. Here's the sample SPL for this example, which covers listing out the min, max, mean, and standard deviation of the price per symbol bought.</p><p><b>sourcetype=app_logs action=\"buy\"|stats min(price) max(price) stdev(price) mean(price) by symbol</b></p>",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Knowing the min, max, mean, and standard deviation for bought symbol prices gives an indicator of how the market is moving for any time slice.",
        "relevance": "Statistics on buy orders such as min, max, mean, and standard deviation of price can help analysts make decisions in near-realtime using machine data rather than relying on a hourly report.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Trade Buy Statistics - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example creates a report listing out the min, max, mean, and standard deviation of prices for Symbols being bought in a report.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Statistics for Prices of Bought Symbols",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Trade Buy Statistics - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Trade_Buy_Statistics.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Trade_Buy_Statistics.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Buy Order Price Statistics by Symbol",
                "search": "|inputlookup trade_entry.csv|sort - _time|where action=\"buy\"|stats min(price) as min_price max(price) as max_price stdev(price) as stdev_price mean(price) as mean_price by symbol|eval min_price=tostring(round(min_price, 2),\"commas\"), max_price=tostring(round(max_price, 2),\"commas\"), stdev_price=tostring(round(stdev_price, 2),\"commas\"), mean_price=tostring(round(mean_price, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Login_Denied_Auth": {
        "id": "Login Denied Auth",
        "domain": "Application",
        "help": "Login Denied Auth",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "New User Login",
        "howToImplement": "<p>First, gather application logs for your new user logins into Splunk and extract the fields that represent denial and authentication. Use stats to find where the first action was denied and the last action was authorized in a given time period. Since a new user login is a one time action, streamstats is not needed.",
        "hasSearch": "Yes",
        "category": "Customer Experience",
        "knownFP": "unused",
        "operationalize": "After registering for access, a bank can decide a user should not be allowed access and deny them. In this case, it would be unusual to see users that were denied and then authorized. Was there a mistake? If so, how many of these happen per day?",
        "relevance": "Customers register for the bank. They then try to login, but are denied on purpose for whatever business reason. They try again and now they are authorized. Something changed to allow for this.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Login Denied Auth - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example lists customers that were initially denied access after registering and then were later authorized.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "New Account Login Authorized after Denial",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Login Denied Auth - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Login_Denied_Auth.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Login_Denied_Auth.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "New Account User Denied followed by Authorized",
                "search": "|inputlookup new_today.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time |stats first(action) as first_action last(action) as last_action last(_time) as _time by customer, location,sessionID |where first_action=\"denied\" AND last_action=\"authorized\"",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Login_Denied": {
        "id": "Login Denied",
        "domain": "Application",
        "help": "Login Denied",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "New User Login",
        "howToImplement": "<p>First, gather application logs for your new user logins into Splunk and extract the fields that represent errors. Find where the action results in a denial in a given time period and print out the details of customer such as name, time, action, response time, and location.", 
        "hasSearch": "Yes",
        "category": "Customer Experience",
        "knownFP": "unused",
        "operationalize": "After registering for access, a bank can decide a user should not be allowed access and deny them for whatever reason. How many of these happen per day? Should these customers be tracked in other parts of the multi channel bank?",
        "relevance": "After a customer registers for login at your web site, they are denied access. This example list customers that were denied access for whatever reason.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Login Denied - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example lists customers that were initially denied access by the institution after registering. Monitoring these customers is important.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "New Account Login Denied",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Login Denied - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Login_Denied.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Login_Denied.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "User denied first time login",
                "search": "|inputlookup new_today.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|where action=\"denied\"|table _time, customer, action, sessionID, location",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Login_Errors": {
        "id": "Login Errors",
        "domain": "Application",
        "help": "Login Errors",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "New User Login",
        "howToImplement": "<p>First, gather application logs for your new user logins into Splunk and extract the fields that represent errors. Find where the action results in an error in a given time period and print out the details of customer such as name, time, action, response time, and location.",
        "hasSearch": "Yes",
        "category": "Customer Experience",
        "knownFP": "unused",
        "operationalize": "After registering for access, a user's login experience may result in an error for whatever reason. How many of these happen per day? Is this a known problem or is it a new one?",
        "relevance": "After registering for a login, a customer receives an error upon first time logging in leading to a bad customer experience.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Login Errors - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example lists customers that received errors upon first time login after registering. Monitoring this condition is important to improve customer experience.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "New Account Login Errors",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Login Errors - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Login_Errors.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Login_Errors.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "User geting errors logging in after registering for access",
                "search": "|inputlookup new_today.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|where action=\"error\"|table _time, customer, action, sessionID, location, ResponseTime",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Login_Response_Outliers": {
        "id": "Login Response Outliers",
        "domain": "Application",
        "help": "Login Response Outliers",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "New User Login",
        "howToImplement": "<p>First, gather application logs for your new user logins into Splunk and extract the fields that represent customers and response time. Then group the average response time by customer using stats. Use eventstats to find the average and standard deviation of all response times. If the customer's response time to login is greater than the total average plus 4 times the standard deviation, it should be noted as this is a bad customer experience.",
        "hasSearch": "Yes",
        "category": "Outliers",
        "knownFP": "unused",
        "operationalize": "After registering for access, a user's login experience may result in a larger than usual response time. How many customers were effected by this bad user experience and should they be contacted?",
        "relevance": "Response Time outliers are customers that took the longest to login. This group of customers had the worst customer experience in terms of response time.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Login Response Outliers - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example lists customers that had unusually high first time login respone times after registering. Monitoring this condition is important to improve customer experience.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "New Account Login Response Time Outliers",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Login Response Outliers - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Login_Response_Outliers.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Login_Response_Outliers.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Login response times greater than avg plus 4 times stdev",
                "search": "|inputlookup new_today.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|stats avg(ResponseTime) as averageResp by customer,location|eventstats avg(averageResp) as avg stdev(averageResp) as stdev |where averageResp>(avg+4*stdev)",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Login_Response_Timewrap": {
        "id": "Login Response Timewrap",
        "domain": "Application",
        "help": "Login Response Timewrap",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "New User Login",
        "howToImplement": "<p>First, gather application logs for your new user logins into Splunk and extract the fields that represent response times. Then group the average response time using timechart. Finally, send the output to the timewrap command to compare the last two hour or in the last report, the last 4 hours. Thanks to the hard work of David Carasso for providing timewrap.",
        "hasSearch": "Yes",
        "category": "Customer Experience",
        "knownFP": "unused",
        "operationalize": "Customer response time for initial login is an indicator of customer experience. By comparing response times from different hours, it is possible to see if the application is behaving normally or abnormally.",
        "relevance": "Comparting the average response time and counts of new account logins with different time periods is the purpose of this example.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Login Response Timewrap - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example charts out average response times from different hours to see if it is consistent or inconsistent. There is also a report for login attempts (counts) comparing different hours.",
        "released": "1.0.0",
        "journey": "Stage_3",
        "icon": "Core_Use_Case.png",
        "name": "New Account Login Response Time Comparisons",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Login Response Timewrap - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Login_Response_Timewrap.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Login_Response_Timewrap.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Logins Timewrap Comparing Two Hours vs Previous Two Hours Response Times",
                "search": "|inputlookup new_today.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|timechart span=5m fixedrange=F count|timewrap 2h series=exact",
                "vizParameters": {
                    "charting.axisY.abbreviation": "none",
                    "trellis.size": "medium",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "line",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.axisX.scale": "linear",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.layout.splitSeries": "0",
                    "charting.drilldown": "none",
                    "trellis.enabled": "0",
                    "charting.axisY2.enabled": "0",
                    "charting.legend.mode": "standard",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.nullValueMode": "zero",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.chart.style": "shiny",
                    "resizable": true,
                    "charting.lineWidth": "2",
                    "charting.axisY.scale": "linear",
                    "charting.legend.placement": "right",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisX.abbreviation": "none",
                    "trellis.scales.shared": "1",
                    "charting.chart.showDataLabels": "none",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
            {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Timewrap Response Times 4 Hour Comparison",
                "search": "|inputlookup new_total.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|timechart span=15m fixedrange=F avg(ResponseTime) as ResponseTime |timewrap 4h series=exact",
                "vizParameters": {
                    "charting.axisY.abbreviation": "none",
                    "trellis.size": "medium",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "line",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.axisX.scale": "linear",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.layout.splitSeries": "0",
                    "charting.drilldown": "none",
                    "trellis.enabled": "0",
                    "charting.axisY2.enabled": "0",
                    "charting.legend.mode": "standard",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.chart.style": "shiny",
                    "resizable": true,
                    "charting.lineWidth": "2",
                    "charting.axisY.scale": "linear",
                    "charting.legend.placement": "right",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisX.abbreviation": "none",
                    "trellis.scales.shared": "1",
                    "charting.chart.showDataLabels": "none",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Login_Trellis": {
        "id": "Login Trellis",
        "domain": "Application",
        "help": "Login Trellis",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "New User Login",
        "howToImplement": "<p>First, gather application logs for your new user logins into Splunk and extract the fields that represent actions such as authorized, denied, or error. Then perform a timechart command that groups by action. For visualization, choose a Trellis chart.",
        "hasSearch": "Yes",
        "category": "Customer Experience",
        "knownFP": "unused",
        "operationalize": "The Trellis chart will tell you how each action is performing over time with its own timechart. This is useful for side-by-side comparisons to chart customer experience.",
        "relevance": "A trellis chart for different actions (authorized, denied, and error) is provided for this example for new account logins. Side-by-side comparisons provide useful information on trends.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Login Trellis - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a Trellis chart for different actions upon new account logins over time. Monitoring this condition is important to improve customer experience.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "New Account Login Trellis Action Chart",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Login Trellis - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Login_Trellis.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Login_Trellis.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Trellis Report on Actions",
                "search": "|inputlookup new_today.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|timechart fixedrange=F span=10m count by action",
                "vizParameters": {
                    "charting.axisY.abbreviation": "none",
                    "trellis.size": "medium",
                    "charting.axisTitleX.visibility": "collapsed",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "line",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisTitleY2.visibility": "collapsed",
                    "charting.axisX.scale": "linear",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.layout.splitSeries": "0",
                    "charting.drilldown": "none",
                    "trellis.enabled": "1",
                    "charting.axisY2.enabled": "0",
                    "charting.legend.mode": "standard",
                    "charting.axisTitleY.visibility": "collapsed",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.chart.style": "shiny",
                    "resizable": true,
                    "charting.lineWidth": "2",
                    "charting.axisY.scale": "linear",
                    "charting.legend.placement": "none",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisX.abbreviation": "none",
                    "trellis.scales.shared": "1",
                    "charting.chart.showDataLabels": "none",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Login_Action_Location": {
        "id": "Login Action Location",
        "domain": "Application",
        "help": "Login Action Location",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "New User Login",
        "howToImplement": "<p>First, gather application logs for your new user logins into Splunk and extract the fields that represent actions and location. Then perform a chart count over location by action.",
        "hasSearch": "Yes",
        "category": "Customer Experience",
        "knownFP": "unused",
        "operationalize": "The chart of actions over location will give you a relative characteristic of how new account logins are performing with respect to location. If some have less authorized actions than others, it may be time to investigate the customer experience.",
        "relevance": "This example counts the types of actions that occurred at given locations from where new users are logging in.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Login Action Location - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a chart for new account login action results stacked by location. Monitoring different locations side-by-side can provide new insights into the customer experience or potential outages by region.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "New Account Login Action Location Chart",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Login Action Location - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Login_Action_Location.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Login_Action_Location.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Comparing Actions by Location",
                "search": "|inputlookup new_today.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|chart count over location by action",
                "vizParameters": {
                    "charting.axisY.abbreviation": "none",
                    "trellis.size": "medium",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "column",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.axisX.scale": "linear",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.chart.stackMode": "stacked",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.layout.splitSeries": "0",
                    "charting.drilldown": "none",
                    "trellis.enabled": "0",
                    "charting.axisY2.enabled": "0",
                    "charting.legend.mode": "standard",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.chart.style": "shiny",
                    "resizable": true,
                    "charting.lineWidth": "2",
                    "charting.axisY.scale": "linear",
                    "charting.legend.placement": "right",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisX.abbreviation": "none",
                    "trellis.scales.shared": "1",
                    "charting.chart.showDataLabels": "none",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Login_Action_Time": {
        "id": "Login Action Time",
        "domain": "Application",
        "help": "Login Action Time",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "New User Login",
        "howToImplement": "<p>First, gather application logs for your new user logins into Splunk and extract the fields that represent actions and location. Then perform a timechart count(action) as action by location.",
        "hasSearch": "Yes",
        "category": "Customer Experience",
        "knownFP": "unused",
        "operationalize": "The chart of new account login attempts over location by time gives you a relative characteristic of how new account logins are performing with respect to location and time. The counts can be looked at as normal or requiring investigation.",
        "relevance": "Viewing the the types of action split by location over time is useful for analysts gauging customer experience.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Login Action Time - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a timechart for new account login attempts over time split by location. Monitoring different locations side-by-side over time can provide new insights into the customer experience, , application performance, and highlight potential security concerns.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "New Account Login Attempts Over Time",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Login Action Time - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Login_Action_Time.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Login_Action_Time.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Count Login Actions by Location Over Time",
                "search": "|inputlookup new_today.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|timechart span=15m fixedrange=F count(action) as action by location",
                "vizParameters": {
                    "charting.axisY.abbreviation": "none",
                    "trellis.size": "medium",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "line",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.axisX.scale": "linear",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.layout.splitSeries": "0",
                    "charting.drilldown": "none",
                    "trellis.enabled": "0",
                    "charting.axisY2.enabled": "0",
                    "charting.legend.mode": "standard",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.nullValueMode": "zero",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.chart.style": "shiny",
                    "resizable": true,
                    "charting.lineWidth": "2",
                    "charting.axisY.scale": "linear",
                    "charting.legend.placement": "right",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisX.abbreviation": "none",
                    "trellis.scales.shared": "1",
                    "charting.chart.showDataLabels": "all",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Login_Action_Types_Time": {
        "id": "Login Action Types Time",
        "domain": "Application",
        "help": "Login Action Types Time",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "New User Login",
        "howToImplement": "<p>First, gather application logs for your new user logins into Splunk and extract the fields that represent actions and location. Then perform |timechart  span=15m fixedrange=F count(eval(action=\"authorized\")) as authorized count(eval(action=\"denied\")) as denied by location",
        "hasSearch": "Yes",
        "category": "Customer Experience",
        "knownFP": "unused",
        "operationalize": "The timechart of different actions over location will give you a fine grained relative characteristic of how new account logins are performing with respect to location. This can determine whether things are normal or out of the ordinary.",
        "relevance": "The purpose of this example is to show two actions (authorized and denied) split by location to show relative contrasts.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Login Action Types Time - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a timechart for new account login actions (authorized vs. denied) split by location. Monitoring different location actions side-by-side over time can provide new insights into the customer experience.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "New Account Login Authorized vs Denied Over Time",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Login Action Types Time - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Login_Action_Types_Time.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Login_Action_Types_Time.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Authorized or Denied over time by location",
                "search": "|inputlookup new_today.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|timechart span=15m fixedrange=F count(eval(action=\"authorized\")) as authorized count(eval(action=\"denied\")) as denied by location",
                "vizParameters": {
                    "charting.axisY.abbreviation": "none",
                    "trellis.size": "medium",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "area",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.axisX.scale": "linear",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.layout.splitSeries": "0",
                    "charting.drilldown": "none",
                    "trellis.enabled": "0",
                    "charting.axisY2.enabled": "0",
                    "charting.legend.mode": "standard",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.chart.style": "shiny",
                    "resizable": true,
                    "charting.lineWidth": "2",
                    "charting.axisY.scale": "linear",
                    "charting.legend.placement": "right",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisX.abbreviation": "none",
                    "trellis.scales.shared": "1",
                    "charting.chart.showDataLabels": "none",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Login_Response_Location": {
        "id": "Login Response Location",
        "domain": "Application",
        "help": "Login Response Location",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "New User Login",
        "howToImplement": "<p>First, gather application logs for your new user logins into Splunk and extract the fields that represent actions and location. Then perform |timechart span=15m avg(ResponseTime) as averageResponseTime by location",
        "hasSearch": "Yes",
        "category": "Customer Experience",
        "knownFP": "unused",
        "operationalize": "The timechart of different response times split by location will give you a fine grained relative characteristic of how new account logins are performing with respect to login response time. This can determine whether things are normal or out of the ordinary. For instance, one location has an instant response time while another is taking several seconds may indicate a latency issue.",
        "relevance": "Monitoring the average response time for new login attempts over time split by location is the purpose of this example.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Login Response Location - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a timechart for different new account login response times split by location. Monitoring different location response times side-by-side over time can provide new insights into the customer experience.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "New Account Login Response Location Chart",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Login Response Location - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Login_Response_Location.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Login_Response_Location.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Average Response Time to Login Split by Location",
                "search": "|inputlookup new_today.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|timechart span=15m fixedrange=F avg(ResponseTime) as averageResponseTime by location",
                "vizParameters": {
                "charting.axisY.abbreviation": "none",
                    "trellis.size": "medium",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "line",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.axisX.scale": "linear",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.layout.splitSeries": "0",
                    "charting.drilldown": "none",
                    "trellis.enabled": "0",
                    "charting.axisY2.enabled": "0",
                    "charting.legend.mode": "standard",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.nullValueMode": "zero",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.chart.style": "shiny",
                    "resizable": true,
                    "charting.lineWidth": "2",
                    "charting.axisY.scale": "linear",
                    "charting.legend.placement": "right",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisX.abbreviation": "none",
                    "trellis.scales.shared": "1",
                    "charting.chart.showDataLabels": "none",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_ATM_Stat_Maps": {
        "id": "ATM Stat Maps",
        "domain": "Application",
        "help": "ATM Stat Maps",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "ATM Statistics",
        "howToImplement": "<p>First, gather application logs and extract the fields that represent locations for each user transaction. If you have public IP addresses for these locations in your data, you can use iplocation to get the longitude and latitude. If not, use a lookup with your location field to get the required fields. Then, produce a Splunk map visual with geostats. Create one map for action=deposit and one for action=withdrawal. Then perform at the end of your search |geostats count latfield=latitude longfield=longitude",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "The count of actions at ATM location seen visually on a map tells you right away which ATMs are most active and least active at a glance. This helps to see if ATMs may be down or need further capacity. It also indicates how the business is doing.",
        "relevance": "Maps of deposits and withdrawals are important visual KPIs for tracking ATM activities.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=ATM Stat Maps - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows one map for deposit and one map for withdrawal for your ATM locations to see how your business is performing.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "ATM Deposit and Withdrawal Maps",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "ATM Stat Maps - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "ATM_Stat_Maps.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Stat_Maps.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "MapElement",
                "title": "ATM Map of Withdrawal Actions",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\") |sort - _time|where action=\"withdrawal\"|lookup ATM_place location OUTPUT latitude longitude|geostats count latfield=latitude longfield=longitude",
                "vizParameters": {
                    "mapping.data.maxClusters": "100",
                    "mapping.markerLayer.markerMinSize": "10",
                    "mapping.markerLayer.markerMaxSize": "50",
                    "mapping.choroplethLayer.showBorder": "1",
                    "mapping.map.scrollZoom": "0",
                    "mapping.tileLayer.minZoom": "0",
                    "trellis.size": "medium",
                    "mapping.choroplethLayer.colorMode": "auto",
                    "drilldown": "none",
                    "mapping.choroplethLayer.maximumColor": "0xaf575a",
                    "mapping.tileLayer.tileOpacity": "1",
                    "mapping.choroplethLayer.minimumColor": "0x62b3b2",
                    "trellis.enabled": "0",
                    "mapping.showTiles": "1",
                    "mapping.choroplethLayer.neutralPoint": "0",
                    "mapping.choroplethLayer.shapeOpacity": "0.75",
                    "mapping.map.center": "(38.75,-96.28)",
                    "trellis.scales.shared": "1",
                    "mapping.markerLayer.markerOpacity": "0.8",
                    "resizable": true,
                    "mapping.map.zoom": "4",
                    "mapping.choroplethLayer.colorBins": "5",
                    "mapping.tileLayer.maxZoom": "7",
                    "mapping.legend.placement": "bottomright",
                    "mapping.map.panning": "1",
                    "mapping.type": "marker",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
            {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "MapElement",
                "title": "ATM Map of Deposit Actions",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\") |sort - _time|where action=\"deposit\"|lookup ATM_place location OUTPUT latitude longitude|geostats count latfield=latitude longfield=longitude",
                "vizParameters": {
                    "mapping.data.maxClusters": "100",
                    "mapping.markerLayer.markerMinSize": "10",
                    "mapping.markerLayer.markerMaxSize": "50",
                    "mapping.choroplethLayer.showBorder": "1",
                    "mapping.map.scrollZoom": "0",
                    "mapping.tileLayer.minZoom": "0",
                    "trellis.size": "medium",
                    "mapping.choroplethLayer.colorMode": "auto",
                    "drilldown": "none",
                    "mapping.choroplethLayer.maximumColor": "0xaf575a",
                    "mapping.tileLayer.tileOpacity": "1",
                    "mapping.choroplethLayer.minimumColor": "0x62b3b2",
                    "trellis.enabled": "0",
                    "mapping.showTiles": "1",
                    "mapping.choroplethLayer.neutralPoint": "0",
                    "mapping.choroplethLayer.shapeOpacity": "0.75",
                    "mapping.map.center": "(38.75,-96.28)",
                    "trellis.scales.shared": "1",
                    "mapping.markerLayer.markerOpacity": "0.8",
                    "resizable": true,
                    "mapping.map.zoom": "4",
                    "mapping.choroplethLayer.colorBins": "5",
                    "mapping.tileLayer.maxZoom": "7",
                    "mapping.legend.placement": "bottomright",
                    "mapping.map.panning": "1",
                    "mapping.type": "marker",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_ATM_Stat_Trellis": {
        "id": "ATM Stat Trellis",
        "domain": "Application",
        "help": "ATM Stat Trellis",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "ATM Statistics",
        "howToImplement": "<p>First, gather application logs and extract the fields that represent users and amounts they have deposited or withdrawn. Use timechart to sum up the users amounts split by user. In real life, you will be using time ranges that span days, but in the sample data, we use a very short time period to simulate the same concept. Perform at end of your search | timechart span=10m fixedrange=F avg(amount)  by user useother=f to get the top users making deposits and withdrawals. Save the format or your search as Trellis.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Trellis charts will give you side-by-side comparisons of how your top users are using the ATM over given time periods. In this example, we are using the amount field to monitor per top user. This will help you monitor your top users' activities and look for any unusual behavior like lockstep usage. ",
        "relevance": "A trellis chart of top users depositing and withdrawing is the purpose of this example. By having the users' activities shown side-by-side, analysts can understand typical behaviors.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=ATM Stat Trellis - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows one trellis chart for deposit and one chart for withdrawal amounts for your top ATM users to see how your business is performing.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "ATM Deposit and Withdrawal Trellis Charts",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "ATM Stat Trellis - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "ATM_Stat_Trellis.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Stat_Trellis.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "ATM Trellis Withdrawal Amounts for Top Users",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|where action=\"withdrawal\"| timechart span=10m fixedrange=F avg(amount)  by user useother=f",
                "vizParameters": {
                    "charting.chart.nullValueMode": "gaps",
                    "charting.axisTitleY.visibility": "collapsed",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.legend.mode": "standard",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.legend.placement": "none",
                    "trellis.size": "medium",
                    "charting.axisY.scale": "linear",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisY2.abbreviation": "none",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisTitleX.visibility": "collapsed",
                    "trellis.enabled": "1",
                    "charting.chart.bubbleSizeBy": "area",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY2.visibility": "collapsed",
                    "charting.chart.stackMode": "default",
                    "resizable": true,
                    "charting.chart.style": "shiny",
                    "charting.drilldown": "none",
                    "charting.chart": "line",
                    "charting.axisX.scale": "linear",
                    "charting.lineWidth": "2",
                    "charting.layout.splitSeries": "0",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
            {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "ATM Trellis Deposit Amounts for Top Users",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|where action=\"deposit\"| timechart span=10m fixedrange=F avg(amount)  by user useother=f",
                "vizParameters": {
                    "charting.chart.nullValueMode": "gaps",
                    "charting.axisTitleY.visibility": "collapsed",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.legend.mode": "standard",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.legend.placement": "none",
                    "trellis.size": "medium",
                    "charting.axisY.scale": "linear",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisY2.abbreviation": "none",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisTitleX.visibility": "collapsed",
                    "trellis.enabled": "1",
                    "charting.chart.bubbleSizeBy": "area",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY2.visibility": "collapsed",
                    "charting.chart.stackMode": "default",
                    "resizable": true,
                    "charting.chart.style": "shiny",
                    "charting.drilldown": "none",
                    "charting.chart": "line",
                    "charting.axisX.scale": "linear",
                    "charting.lineWidth": "2",
                    "charting.layout.splitSeries": "0",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_ATM_Stat_Top_Users": {
        "id": "ATM Top Users",
        "domain": "Application",
        "help": "ATM Top Users",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "ATM Statistics",
        "howToImplement": "<p>First, gather application logs and extract the fields that represent users and amounts they have withdrawn. Use action=withdrawal|top users to get the first pie chart. For the 2nd chart, use action=withdrawal|stats sparkline sum(amount) as totalWithdrawal by user|sort - totalWithdrawal|head 10 to get the top 10 users by withdrawal amounts sorted in descending order.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Top users allows a bank to monitor which users withdraw the most and the count of how much they withdraw. The Sparkline shows trends in activity and the main thing to monitor is lockstep activity or sudden upswing in activity for a longer time span for the search.",
        "relevance": "Getting the top users, who withdraw money, in terms of counts for number of withdrawals and total amounts by user is the purpose of this example.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=ATM Top Users - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows one top users chart for withdrawal activity and one sparkline for total withdrawal amounts per top users. It allows the bank to see their most active customers.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "ATM Withdrawal Top Users",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "ATM Top Users - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "ATM_Stat_Top_Users.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Stat_Top_Users.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Top Users Doing Withdrawal Activities",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|where action=\"withdrawal\" |top user",
                "vizParameters": {
                    "charting.chart.nullValueMode": "gaps",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.legend.mode": "standard",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.legend.placement": "right",
                    "trellis.size": "medium",
                    "charting.axisY.scale": "linear",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisY2.abbreviation": "none",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisTitleX.visibility": "visible",
                    "trellis.enabled": "0",
                    "charting.chart.bubbleSizeBy": "area",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.stackMode": "default",
                    "resizable": true,
                    "charting.chart.style": "shiny",
                    "charting.drilldown": "none",
                    "charting.chart": "pie",
                    "charting.axisX.scale": "linear",
                    "charting.lineWidth": "2",
                    "charting.layout.splitSeries": "0",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
            {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Top Users by Withdrawal Amounts Sparkline",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|search action=\"withdrawal\" |stats sparkline sum(amount) as totalWithdrawal by user|sort - totalWithdrawal|head 10|eval totalWithdrawal=tostring(round(totalWithdrawal, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_ATM_Stat_With_Dep": {
        "id": "ATM Average Withdrawal Deposit",
        "domain": "Application",
        "help": "ATM Average Withdrawal Deposit",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "ATM Statistics",
        "howToImplement": "<p>First, gather application logs for your fields that represent amounts for withdrawals and deposits. Use action=withdrawal|stats avg(amount) for average withdrawals and do action=deposit|stats avg(amount) for average deposits. You can perform the second search in an appendcols so that all results are in one report.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Average withdrawals vs average deposits provides a KPI for the business. If the number of withdrawals is too large in terms of expectations, the bank needs to investigate why as the reasons may vary from IT issues, fraud, or currency movements.",
        "relevance": "The example is used to provide two single numbers, average withdrawals and average deposit amounts to get a quick KPI of the ATM business.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=ATM Average Withdrawal Deposit - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows one KPI for average deposit and one KPI for average withdrawal amounts for a given period of time to see how your business is performing.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "ATM Average Withdrawal and Deposit Amounts",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "ATM Average Withdrawal Deposit - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "ATM_Stat_With_Dep.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Stat_With_Dep.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Average Withdrawal and Average Deposits for all Users",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|where action=\"withdrawal\" |stats avg(amount) as average_withdrawal|eval average_withdrawal=tostring(round(average_withdrawal, 2),\"commas\")|appendcols [|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|where action=\"deposit\" |stats avg(amount) as average_deposit|eval average_deposit=tostring(round(average_deposit, 2),\"commas\")]",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_ATM_Stat_Sankey": {
        "id": "ATM Location Sankey",
        "domain": "Application",
        "help": "ATM Location Sankey",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "ATM Statistics",
        "howToImplement": "<p>First, gather application logs for your fields that represent amounts, users, and locations for withdrawals. Use action=withdrawal|stats count sum(amount) as sum by user,location|sort - sum|head 10. This will find the top 10 users based on amount making withdrawals by user and location combination. <b>You must have the Sankey add-on from Splunkbase installed on your Splunk instance.</b> Then, save the report as a Sankey visualization.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Withdrawals grouped by user and location for top amounts is a KPI worth knowing. Seeing this in a Sankey diagram gives a visual on relative sizes to find unusual amounts such as one user dominating the rest. The mouse hover over the diagram provides additional information.",
        "relevance": "A Sankey diagram shows the relative size of a KPI from a source to destination. In this example, we will use a top user as the source and the location as the target.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=ATM Location Sankey - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a KPI of the top 10 highest amounts withdrawn split by user and location to show relative sizes in a sankey diagram.",
        "released": "1.0.0",
        "journey": "Stage_3",
        "icon": "Core_Use_Case.png",
        "name": "ATM Withdrawal Split by User and Location",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "ATM Location Sankey - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "ATM_Stat_Sankey.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Stat_Sankey.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "VisualizationElement",
                "title": "Withdrawal Users to Location in Sankey Diagram",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|where action=\"withdrawal\"|stats count sum(amount) as sum by user,location|sort - sum|head 10",
                "vizParameters": {
                    "type": "sankey_diagram_app.sankey_diagram",
                    "trellis.enabled": "0",
                    "trellis.size": "medium",
                    "resizable": true,
                    "drilldown": "none",
                    "trellis.scales.shared": "1",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_ATM_Stat_Horizon": {
        "id": "ATM Location Horizon",
        "domain": "Application",
        "help": "ATM Location Horizon",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "ATM Statistics",
        "howToImplement": "<p>First, gather application logs for your fields that represent locations. Use |timechart span=10m fixedrange=F count by location useother=f. This will group locations by time in 10 minute spans for counts.<b>You must have the Horizon add-on from Splunkbase installed on your Splunk instance.</b> Then, save the report as a Horizon visualization.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Location usage shown across time is a KPI worth knowing. Unlike a sparkline, Seeing this in a Horizon diagram gives a visual on increases and decreases in counts over time in a color coded manner. The mouse hover over the diagram provides additional information. If a particular location has a high delta, it may be worth knowing.",
        "relevance": "A horizon chart will show color coordinated relative increases and descreases of a KPI over time. This is useful for ATM location monitoring to understand the usage at each location.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=ATM Location Horizon - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a KPI for location counts over time to show relative increases and decreases in a Horizon diagram.",
        "released": "1.0.0",
        "journey": "Stage_3",
        "icon": "Core_Use_Case.png",
        "name": "ATM Fine Grained Location Usage Over Time",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "ATM Location Horizon - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "ATM_Stat_Horizon.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Stat_Horizon.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "VisualizationElement",
                "title": "Location Usage Horizon Chart to See Changes Across Time",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|timechart span=10m fixedrange=F count by location useother=f",
                "vizParameters": {
                    "type": "horizon_chart_app.horizon_chart",
                    "trellis.enabled": "0",
                    "trellis.size": "medium",
                    "resizable": true,
                    "drilldown": "none",
                    "trellis.scales.shared": "1",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_ATM_Stat_Timeline": {
        "id": "ATM Location Timeline",
        "domain": "Application",
        "help": "ATM Location Timeline",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "ATM Statistics",
        "howToImplement": "<p>First, gather application logs for your fields that represent locations and users. Use the transaction command to group activity by user,location in 5 minute spans. Finally, print out a table for _time, location, and duration computed from the transaction command. Use |transaction user,location maxspan=5m|table _time location duration. This will group ATM usage over time with 5 minute maximum spans for duration lengths. Because the sample data is dense, you will see a lot of activity in the sample screenshot.<b>You must have the Timeline add-on from Splunkbase installed on your Splunk instance.</b> Remember to save the report as a Timeline visualization.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Knowing the duration of a transaction over time shown by location will show you how busy a location is. Comparing all locations in one diagram can give a business the KPI it needs to understand the health of the ATMs. If a few locations show no usage, investigate why.",
        "relevance": "We can compute the duration of a tranaction in a maximum of 5 minute spans per locations. Showing a timeline view of these durations per location gives a linear view of the activity per location. Sparse activity may need to be investigated for locations that are expected to be busy.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=ATM Location Timeline - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a KPI for duration of usage at each ATM location over time to show relative increases and decreases in a Timeline diagram.",
        "released": "1.0.0",
        "journey": "Stage_3",
        "icon": "Core_Use_Case.png",
        "name": "ATM Durations at Locations Over Time",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "ATM Location Timeline - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "ATM_Stat_Timeline.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/ATM_Stat_Timeline.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "VisualizationElement",
                "title": "Timeline Chart to See Transaction Durations Per Location",
                "search": "|inputlookup ATM_list.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|transaction user,location maxspan=5m|table _time location duration",
                "vizParameters": {
                    "type": "timeline_app.timeline",
                    "trellis.enabled": "0",
                    "trellis.size": "medium",
                    "resizable": true,
                    "drilldown": "none",
                    "trellis.scales.shared": "1",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_Wire_Transfer_Maps": {
        "id": "Wire Transfer Maps",
        "domain": "Application",
        "help": "Banks needs to monitor large transfers to suspicious countries.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Wire Transfer Statistics",
        "howToImplement": "<p>From your app logs, find all authorized transfers, and use Splunk iplocation on the client IP address to get geo information. Send the output to |geostats count by clientIP and use Maps as the visualization. For the destination map, use the destination IP address in the same manner. Keep in mind that this latter report implementation is artificial as most likely, you will have access to the destination location (city, country and you can look up longitude and latitude) in your data. For the sample data, we use a destination IP address for convenience.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "By visually seeing where transfers originate and where they are going, a quick idea of the business process can be gathered. It also helps to know how many transfers are initiated and being received.",
        "relevance": "Providing a visual map for where wire transfers originate and terminate is the purpose of this example.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Wire Transfer Maps - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example provides a map and counts of transfers' originations and destinations",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Wire Transfer Maps",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Wire Transfer Maps - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Maps.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Maps.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "MapElement",
                "title": "Origination of Transfers Map",
                "search": "|inputlookup wire_transfer.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort  _time|search action=\"authorized\"|iplocation clientIP|geostats count by clientIP",
                "vizParameters": {
                    "mapping.choroplethLayer.neutralPoint": "0",
                    "mapping.choroplethLayer.maximumColor": "0xaf575a",
                    "mapping.choroplethLayer.minimumColor": "0x62b3b2",
                    "mapping.type": "marker",
                    "mapping.map.center": "(0,0)",
                    "mapping.markerLayer.markerOpacity": "0.8",
                    "resizable": true,
                    "drilldown": "none",
                    "mapping.showTiles": "1",
                    "mapping.choroplethLayer.showBorder": "1",
                    "mapping.legend.placement": "bottomright",
                    "mapping.choroplethLayer.shapeOpacity": "0.75",
                    "mapping.markerLayer.markerMaxSize": "50",
                    "mapping.markerLayer.markerMinSize": "10",
                    "mapping.choroplethLayer.colorBins": "5",
                    "mapping.data.maxClusters": "100",
                    "mapping.map.scrollZoom": "1",
                    "mapping.choroplethLayer.colorMode": "auto",
                    "trellis.enabled": "0",
                    "mapping.tileLayer.minZoom": "0",
                    "mapping.map.panning": "1",
                    "trellis.size": "medium",
                    "mapping.tileLayer.maxZoom": "7",
                    "trellis.scales.shared": "1",
                    "mapping.map.zoom": "2",
                    "mapping.tileLayer.tileOpacity": "1",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
        {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "MapElement",
                "title": "Destination of Transfers Map",
                "search":"|inputlookup wire_transfer.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|search action=\"authorized\"|iplocation destIP|geostats count by destIP",
                "vizParameters": {
                    "mapping.choroplethLayer.neutralPoint": "0",
                    "mapping.choroplethLayer.maximumColor": "0xaf575a",
                    "mapping.choroplethLayer.minimumColor": "0x62b3b2",
                    "mapping.type": "marker",
                    "mapping.map.center": "(40.71,-163.74)",
                    "mapping.markerLayer.markerOpacity": "0.8",
                    "resizable": true,
                    "drilldown": "none",
                    "mapping.showTiles": "1",
                    "mapping.choroplethLayer.showBorder": "1",
                    "mapping.legend.placement": "bottomright",
                    "mapping.choroplethLayer.shapeOpacity": "0.75",
                    "mapping.markerLayer.markerMaxSize": "50",
                    "mapping.markerLayer.markerMinSize": "10",
                    "mapping.choroplethLayer.colorBins": "5",
                    "mapping.data.maxClusters": "100",
                    "mapping.map.scrollZoom": "1",
                    "mapping.choroplethLayer.colorMode": "auto",
                    "trellis.enabled": "0",
                    "mapping.tileLayer.minZoom": "0",
                    "mapping.map.panning": "1",
                    "trellis.size": "medium",
                    "mapping.tileLayer.maxZoom": "7",
                    "trellis.scales.shared": "1",
                    "mapping.map.zoom": "3",
                    "mapping.tileLayer.tileOpacity": "1",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]

    },
    "showcase_Wire_Transfer_Actions": {
        "id": "Wire Transfer Actions",
        "domain": "Application",
        "help": "Banks needs to monitor transfers.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Wire Transfer Statistics",
        "howToImplement": "<p>From your app logs, find the field that represents actions (authorized, denied, etc) for your transfers. Then, use a column chart for a total count of actions using stats and also use a timechart to show how the distribution is progressing across a time range.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "By visually seeing how many transfers are authorized, denied, cancelled, and have errors, this give a snapshot of the business across time.",
        "relevance": "Wire transfers result in a number of action results. In our example, actions may be authorized, cancelled, denied, or in error. By seeing a distribution of these actions across time, analysts are in better position to judge how the business is performing.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Wire Transfer Actions - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example provides reports on the distribution of actions (authorized, denied, cancelled) across counts and time.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Wire Transfer Actions",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Wire Transfer Actions - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Actions.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Actions.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Wire Transfer Distribution of Actions",
                "search": "|inputlookup wire_transfer.csv|sort - _time|stats count by action|sort - count",
                "vizParameters": { 
                    "trellis.size": "medium",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisX.scale": "linear",
                    "charting.chart.style": "shiny",
                    "resizable": true,
                    "charting.axisY.scale": "linear",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.legend.mode": "standard",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.stackMode": "default",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisY2.scale": "inherit",
                    "charting.drilldown": "none",
                    "charting.layout.splitSeries": "0",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "column",
                    "charting.axisX.abbreviation": "none",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "trellis.enabled": "0",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.lineWidth": "2",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.nullValueMode": "gaps",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.placement": "right",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
        {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Wire Transfer Timechart of Actions",
                "search": "|inputlookup wire_transfer.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|timechart span=15m fixedrange=F count by action",
                "vizParameters": {
                    "trellis.size": "medium",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisX.scale": "linear",
                    "charting.chart.style": "shiny",
                    "resizable": true,
                    "charting.axisY.scale": "linear",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.legend.mode": "standard",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.stackMode": "stacked",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisY2.scale": "inherit",
                    "charting.drilldown": "none",
                    "charting.layout.splitSeries": "0",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "area",
                    "charting.axisX.abbreviation": "none",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "trellis.enabled": "0",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.lineWidth": "2",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.nullValueMode": "gaps",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.placement": "right",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]

    },
    "showcase_Wire_Transfer_Errors": {
        "id": "Wire Transfer Errors",
        "domain": "Application",
        "help": "Banks needs to monitor transfers.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Wire Transfer Statistics",
        "howToImplement": "<p>From your app logs, find the field that represents actions (authorized, denied, etc) for your transfers. Then, search for actions that represent errors and print in a table all the information about the customer such as time, customer name, amount, etc. ",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "By proactively monitoring which customers are receiving errors, banks can investigate root cause sooner and provide a better wire transfer experience.",
        "relevance": "When a wire transfer attempt is made resulting in an error condition, it causes a bad customer experience. Look for these conditions proactively.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Wire Transfer Errors - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example provides a report on which customers received errors, while attempting a wire transfer. It promotes proactive resolution.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Wire Transfer Errors",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Wire Transfer Errors - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Errors.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Errors.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Wire Transfer Customers Receiving Errors",
                "search": "|inputlookup wire_transfer.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|search action=\"error\"|eval amount=tostring(round(amount, 2),\"commas\")|table *|fields - epoch OpenDate",
                "vizParameters": { 
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]

    },
    "showcase_Wire_Transfer_IPs": {
        "id": "Wire Transfer IPs",
        "domain": "Application",
        "help": "Banks needs to monitor large transfers to suspicious countries.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Wire Transfer Statistics",
        "howToImplement": "<p>From your app logs, find all transfers. Use |timechart span=15m count by ClientIPs and |timechart span=15m count DestIPs to create the two reports. Keep in mind that this latter report implementation is artifical as most likely, you will have access to the destination location (city, country) in your data. For the sample data, we use a destination IP address for convenience.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "By visually seeing over time the top client and destinations where transfers originate and where they are going, a quick idea of the business process can be gathered. It also helps to know how many transfers are initiated and being received at given periods. This helps you track your top customers for the time slice.",
        "relevance": "In one example we showed you a map for where wire transfers are originating and terminating. In this example, we are showing the top originations and destinations over time.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Wire Transfer IPs - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example provides reports on the top IPs that are being used to transfer funds over time.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Wire Transfer IPs",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Wire Transfer IPs - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_IPs.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_IPs.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Wire Transfer Timechart of Top Client IPs",
                "search": "|inputlookup wire_transfer.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|timechart span=15m fixedrange=F count by clientIP usenull=f limit=10",
                "vizParameters": {
                    "trellis.size": "medium",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisX.scale": "linear",
                    "charting.chart.style": "shiny",
                    "resizable": true,
                    "charting.axisY.scale": "linear",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.legend.mode": "standard",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.stackMode": "stacked",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisY2.scale": "inherit",
                    "charting.drilldown": "none",
                    "charting.layout.splitSeries": "0",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "area",
                    "charting.axisX.abbreviation": "none",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "trellis.enabled": "0",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.lineWidth": "2",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.nullValueMode": "zero",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.placement": "right",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
        {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Wire Transfer Timechart of Top Destination IPs",
                "search": "|inputlookup wire_transfer.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|timechart span=15m fixedrange=F count by destIP usenull=f limit=10",
                "vizParameters": {
                    "trellis.size": "medium",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisX.scale": "linear",
                    "charting.chart.style": "shiny",
                    "resizable": true,
                    "charting.axisY.scale": "linear",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.legend.mode": "standard",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.stackMode": "stacked",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisY2.scale": "inherit",
                    "charting.drilldown": "none",
                    "charting.layout.splitSeries": "0",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "area",
                    "charting.axisX.abbreviation": "none",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "trellis.enabled": "0",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.lineWidth": "2",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.nullValueMode": "zero",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.placement": "right",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]

    },
    "showcase_Wire_Transfer_Max_Amounts": {
        "id": "Wire Transfer Max Amounts",
        "domain": "Application",
        "help": "Banks needs to monitor large transfers",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Wire Transfer Statistics",
        "howToImplement": "<p>From your app logs, find all transfers. Use |stats max(amount) as max_amount by customer|sort - max_amount|head 10 to find the largest amounts being transferred. The head 10 will limit to the top 10. Use a bar chart to visualize.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "By visually seeing the largest amounts being transfered over a time range with a customer name, a bank has insight into the largest individual amounts of money being moved by customers. This identifies customers with large accounts emptying some of their balance.",
        "relevance": "Banks want to know the higest amounts being transferred out of their bank as this is something worth monitoring to understand if it is chronic for the same customer or is it a one time anomaly.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Wire Transfer Max Amounts - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example provides a report on the largest amount of money beng transferred at a given time reporting on the top 10 largest amounts.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Wire Transfer Max Amounts",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Wire Transfer Max Amounts - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Max_Amounts.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Max_Amounts.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Top 10 Largest Amounts Transferred",
                "search": "|inputlookup wire_transfer.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|search action=\"authorized\"|stats max(amount) as max_amount by customer|sort - max_amount|head 10",
                "vizParameters": {
                    "trellis.size": "medium",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisX.scale": "linear",
                    "charting.chart.style": "shiny",
                    "resizable": true,
                    "charting.axisY.scale": "linear",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.legend.mode": "standard",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.chart.stackMode": "stacked",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.axisY2.scale": "inherit",
                    "charting.drilldown": "none",
                    "charting.layout.splitSeries": "0",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.chart": "bar",
                    "charting.axisX.abbreviation": "none",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "trellis.enabled": "0",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.lineWidth": "2",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.nullValueMode": "zero",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.legend.placement": "right",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]

    },
    "showcase_Wire_Transfer_Amount_Outliers": {
        "id": "Wire Transfer Amount Outliers",
        "domain": "Application",
        "help": "Banks needs to monitor large transfers",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Wire Transfer Statistics",
        "howToImplement": "<p>From your app logs, find all transfers. Use |stats avg(amount) as avg by customer to find the average amount. Average out the entire average and find the standard deviation using eventstats. Finally, find all results where the average amount of the customer is greater than the average of all results plus the standard deviation. You may change the amount of standard deviation if needed such as 2*standard deviation.",
        "hasSearch": "Yes",
        "category": "Outliers",
        "knownFP": "unused",
        "operationalize": "By locating outliers in the amount that is being transferred, a bank can monitor which customers have the largest average transfers. By running this report daily, they can see if the customers are the same each day (fleeing customers) or different.",
        "relevance": "Users who have transferred amounts larger than the general population of users may be worth monitoring. Is this a one time large transfer or are they consistently on lists for the largest amounts being transferred?",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Wire Transfer Amount Outliers - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example provides a report on customers, who have the largest average amounts transferred compared to the entire average plus standard deviation.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Wire Transfer Amount Outliers",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Wire Transfer Amount Outliers - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Amount_Outliers.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Amount_Outliers.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Customer Average Amounts Greater Than Overall Average plus Standar Deviation",
                "search": "|inputlookup wire_transfer.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|search action=\"authorized\"|stats avg(amount) as avg_amount by customer|eventstats avg(avg_amount) as avg_all stdev(avg_amount) as stdev_all|where avg_amount>(avg_all+stdev_all)|eval avg_amount=tostring(round(avg_amount, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]

    },
    "showcase_Wire_Transfer_Sankey": {
        "id": "Wire Transfer Sankey",
        "domain": "Application",
        "help": "Banks needs to monitor large transfers",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Wire Transfer Statistics",
        "howToImplement": "<p>From your app logs, find all transfer attempts. Use a stats count by source,destination to produce a table of results for your time span. Use Sankey for your visualization. In the sample data, we have used a client IP for the source and destination IP for the target. The destination IP, here, is artificial as most banks will have access to a target location name rather than a destination IP address in their logs. The destination IP is in the sample data for convenience.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Linking the amount of times a clientip is linked to a location destination gives trends in a visual manner. This may help in future planning and fraud use cases. For instance, in the sample data, the diagram shows that the destination is a source for another transfer. Why is that? These are the types of questions this example can help raise.",
        "relevance": "Linking the origination and destination for a wire transfer by the amount of times the two were used is useful for analysts. Showing this visualization in a Sankey diagram makes this a natural fit for this example.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Wire Transfer Sankey - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example provides a Sankey report linking the source and destination counts for wire transfers.",
        "released": "1.0.0",
        "journey": "Stage_3",
        "icon": "Core_Use_Case.png",
        "name": "Wire Transfer Sankey",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Wire Transfer Sankey - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Wire_Transfer_Sankey.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Wire_Transfer_Sankey.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "VisualizationElement",
                "title": "Wire Transfer Source IP to Destination IP",
                "search": "|inputlookup wire_transfer.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|search action=\"authorized\"|stats count by clientIP,destIP",
                "vizParameters": {
        "type": "sankey_diagram_app.sankey_diagram",
            "trellis.size": "medium",
            "resizable": true,
            "trellis.enabled": "0",
            "drilldown": "none",
            "trellis.scales.shared": "1",
                    "count": "15",
                    "refresh.display": "progressbar"
                }
            }

        ]

    },
    "showcase_TX_3Steps": {
        "id": "TX 3Steps",
        "domain": "Application",
        "help": "TX 1,2, or 3 steps.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Transaction Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a transaction. Use a common ID such as a session ID to group events by the same ID. In our example for a four step transaction, we want to use a stats count by sessionID as the part of the search that counts how many steps were in a transaction. A count of one means one step, two means two steps, and three means three steps. We have used three different reports in this example looking for where the count=1, count=2, or count=3 for each respective report. Other fields may be printed by using list or values in the stats command.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "For our four step transaction, it is important to note, which transactions only made it to 1 step, 2 steps, or 3 steps. This will not only give you an indicator of how many did not finish, but it also provides details about each one that did not finish and how many steps they did finish. This is important for accuracy and also for investigation for improving the system.",
        "relevance": "Splunk is being used to monitor a four step transaction. By monitoring the list of sessions that only made it partially to the end, analysts can make better decisions to improve the application.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=TX 3Steps - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "For a four step transaction, find all transaction attempts that only made it to 1, 2, or 3 steps.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Transactions that only made 1, 2, or 3 steps",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "TX 3Steps - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "TX_3Steps.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/TX_3Steps.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Transactions that only made it to one step.",
                "search": "|inputlookup transdate.csv|sort - _time|stats values(_time) as time values(action) as action values(customer) as customer count by sessionID|where count=1",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
        {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Transactions that only made it to two steps.",
                "search": "|inputlookup transdate.csv|sort - _time|stats values(_time) as time values(action) as action values(customer) as customer count by sessionID|where count=2",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
        {
                "panel": "row3cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Transactions that only made it to three steps.",
                "search": "|inputlookup transdate.csv|sort - _time|stats values(_time) as time values(action) as action values(customer) as customer count by sessionID|where count=3",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_TX_Average_Duration": {
        "id": "TX Average Duration",
        "domain": "Application",
        "help": "TX Avg Duration",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Transaction Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a transaction. Use a common ID such as a session ID to group events by the same ID. In our example for a four step transaction, we want to use a stats count by sessionID as the part of the search that counts how many steps were in a transaction. A count of 4 means the transaction completed. In the stats command find the first and last time for each completed transaction and use last-first to calculate the duration in an eval statement. Then, use timechart avg(duration) to find the average duration.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "For our four step transaction, it is important to calcuate how long each completed transaction takes. This could be used to find out what periods in time performance is slow and to visually see which transactions may have missed SLAs based on agreed upon SLA numbers.",
        "relevance": "Splunk is being used to monitor a four step transaction. A timechart is used here to visually see the average duration of transactions that made it to all four steps.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=TX Average Duration - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Use a timechart to visually see the average duration of completed transactions.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Average Duration Chart for Transactions that Completed",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "TX Average Duration - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "TX_Average_Duration.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/TX_Average_Duration.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Average Duration of Completed Transactions.",
                "search": "|inputlookup transdate.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|stats count  values(_time) as _time first(_time) as first last(_time) as last by sessionID|where count>3|eval duration=last-first|timechart span=10m fixedrange=F avg(duration)",
                "vizParameters": {
                    "charting.axisX.scale": "linear",
                    "charting.lineWidth": "2",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.legend.mode": "standard",
                    "charting.chart.style": "shiny",
                    "charting.axisY.scale": "linear",
                    "charting.axisY2.scale": "inherit",
                    "charting.axisY2.abbreviation": "none",
                    "charting.chart.nullValueMode": "connect",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.chart.stackMode": "default",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.layout.splitSeries": "0",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.legend.placement": "right",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart": "line",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleY.visibility": "visible",
                    "trellis.enabled": "0",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.chart.showDataLabels": "none",
                    "resizable": true,
                    "charting.drilldown": "none",
                    "charting.axisTitleX.visibility": "visible",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "trellis.size": "medium",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_TX_Average_Duration_Steps": {
        "id": "TX Average Duration Steps",
        "domain": "Application",
        "help": "TX Avg Duration Steps",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Transaction Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a transaction. Use a common ID such as a session ID to group events by the same ID. There are multiple ways to implement this. One easy way is to use streamstats to find the duration between two steps of a transaction (window=2) where you would use the last and first time to calculate a duration per step. If the duration is greater than 0 and the step ends in the expected name for the step, then this duration is counted at the end of the search to be passed to a stats command to compute an average duration. For a four step transaction, do this 3 times in different subsearches and use appendcols to glue it back together in one table.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "For our four step transaction, knowing the average duration between each step of a transaction can help provide fine grained statistics that can help improve performance and see which steps take the longest.",
        "relevance": "Splunk is being used to monitor a four step transaction. The average duration in between steps is listed in this example.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=TX Average Duration Steps - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Find the average duration between each step of a hypothetical four step transaction that has steps: Starting, In-Progress, In-Progress-Ending, and Finished.",
        "released": "1.0.0",
        "journey": "Stage_3",
        "icon": "Core_Use_Case.png",
        "name": "Average Duration in Between Steps of a Transaction",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "TX Average Duration Steps - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "TX_Average_Duration_Steps.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/TX_Average_Duration_Steps.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Average Duration in Between Steps of Four Step Transactions.",
                "search": "|inputlookup transdate.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|streamstats global=false window=2 first(epoch) as first last(epoch) as last last(action) as action by sessionID|eval duration=last-first|where duration>=0 AND action=\"in-progress\"|stats avg(duration) as Avg-In-Progress-Duration |appendcols [|inputlookup transdate.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|streamstats global=false window=2 first(epoch) as first last(epoch) as last last(action) as action by sessionID|eval duration=last-first|where duration>=0 AND action=\"ending\"|stats avg(duration) as Avg-In-Progress-Ending-Duration]|appendcols[|inputlookup transdate.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|streamstats global=false window=2 first(epoch) as first last(epoch) as last last(action) as action by sessionID|eval duration=last-first|where duration>=0 AND action=\"finished\"|stats avg(duration) as Avg-Now-Ending-Finished-Duration]",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_TX_Customers_Most_Completed": {
        "id": "TX Customers Most Completed",
        "domain": "Application",
        "help": "TX Avg Duration Steps",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Transaction Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a transaction. Use a common ID such as a session ID to group events by the same ID. You can't simply do a top command here without first using stats to find out all sessionID, customer combinations that made it to four steps (finished). Then, you can use the top command to list top 10 customers.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "For our four step transaction, knowing which customers have completed their transactions the most times gives visibility into who is using the application the most with success.",
        "relevance": "Splunk is being used to monitor a four step transaction. In this example, we are listing the top count of customers who had completed transactions.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=TX Customers Most Completed - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a chart of the customers who have completed the most transactions in our hypothetical four step transaction.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Top Customers Completing Transactions",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "TX Customers Most Completed - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "TX_Customers_Most_Completed.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/TX_Customers_Most_Completed.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Customers with Most Completed Transactions",
                "search": "|inputlookup transdate.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|stats count  last(action) as action values(_time) as _time by sessionID, customer|where count=4 and action=\"finished\"|top customer limit=10",
                "vizParameters": {
                    "charting.axisX.scale": "linear",
                    "charting.lineWidth": "2",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.legend.mode": "standard",
                    "charting.chart.style": "shiny",
                    "charting.axisY.scale": "linear",
                    "charting.axisY2.scale": "inherit",
                    "charting.axisY2.abbreviation": "none",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.chart.stackMode": "default",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.layout.splitSeries": "0",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.legend.placement": "right",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart": "pie",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleY.visibility": "visible",
                    "trellis.enabled": "0",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.chart.showDataLabels": "none",
                    "resizable": true,
                    "charting.drilldown": "none",
                    "charting.axisTitleX.visibility": "visible",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "trellis.size": "medium",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_TX_Average_Duration_Steps_Sankey": {
        "id": "TX Average Duration Steps Sankey",
        "domain": "Application",
        "help": "TX Avg Duration Steps",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Transaction Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a transaction. Use a common ID such as a session ID to group events by the same ID. There are multiple ways to implement this. One easy way is to use streamstats to find the duration between two steps of a transaction (window=2) where you would use the last and first time to calculate a duration per step. If the duration is greater than 0 and the step ends in the expected name for the step, then this duration is counted at the end of the search to be used to print in a table the action and average duration. For a four step transaction, do this 3 times in different subsearches and use appendpipe to glue it back together in one table. Save the the search as a Sankey Chart that shows the source as the transaction name and the average duration as the target name.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "For our four step transaction, knowing the average duration between each step of a transaction can help provide fine grained statistics that can help improve performance and see which steps take the longest. By showing this in a Sankey Chart, we can see the steps clearly in terms of size and see which ones took the longest.",
        "relevance": "Splunk is being used to monitor a four step transaction. This example visually shows the average duration in between steps of the transaction as a Sankey diagram.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=TX Average Duration Steps Sankey - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Find the average duration between each step of a hypothetical four step transaction that has steps: Starting, In-Progress, In-Progress-Ending, and Finished. Visually show in a Sankey Chart.",
        "released": "1.0.0",
        "journey": "Stage_4",
        "icon": "Core_Use_Case.png",
        "name": "Average Duration in Between Steps of a Transaction in Sankey",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Intermediate",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "TX Average Duration Steps Sankey - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "TX_Average_Duration_Steps_Sankey.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/TX_Average_Duration_Steps_Sankey.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "VisualizationElement",
                "title": "Average Duration in Between Steps of a Four Step Transaction in Sankey.",
                "search": "|inputlookup transdate.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|streamstats global=false window=2 first(epoch) as first last(epoch) as last by sessionID|eval duration=last-first|table  action, duration|where duration>=0 AND action=\"in-progress\"|stats avg(duration) as Avg-In-Progress-Duration|eval source=\"start\", target=\"in-progress\"| rename Avg-In-Progress-Duration as count |appendpipe [|inputlookup transdate.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|streamstats global=false window=2 first(epoch) as first last(epoch) as last by sessionID|eval duration=last-first|table  action, duration|where duration>=0 AND action=\"ending\"|stats avg(duration) as Avg-In-Progress-Ending-Duration |eval source=\"in-progress\", target=\"ending\"|rename Avg-In-Progress-Ending-Duration as count]|appendpipe[|inputlookup transdate.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|streamstats global=false window=2 first(epoch) as first last(epoch) as last by sessionID|eval duration=last-first|table  action, last duration|where duration>=0 AND action=\"finished\"|stats avg(duration) as Avg-Ending-Finished-Duration|eval source=\"ending\", target=\"finished\"| rename Avg-Ending-Finished-Duration as count]|fields source target count|rename count as \"Average Duration\"",
                "vizParameters": {
                    "type": "sankey_diagram_app.sankey_diagram",
                    "trellis.scales.shared": "1",
                    "trellis.enabled": "0",
                    "resizable": true,
                    "trellis.size": "medium",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_TX_Outliers_Duration": {
        "id": "TX Outliers Duration",
        "domain": "Application",
        "help": "TX Outliers Duration",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Transaction Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a transaction. Use a common ID such as a session ID to group events by the same ID. In our example for a four step transaction, we want to use a stats count by sessionID as the part of the search that counts how many steps were in a transaction. A count of four steps means the transaction finished. In the stats command also note the first and last time for the transaction to compute the duration. Then also compute average duration and standard deviation of all average customer durations. If a customer duration is greater than the average plus 2 times the standard deviation, it is an outlier.",
        "hasSearch": "Yes",
        "category": "Outliers",
        "knownFP": "unused",
        "operationalize": "For our four step transaction, it is important to note tthe average duration of all transactions. If a customer duration is above the average by N (in this case 2) times the standard deviation, it is most likely a candidate for a SLA violation and it should be investigated.",
        "relevance": "Splunk is being used to monitor a four step transaction. This example is used to find outliers for the average duration for the transaction.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=TX Outliers Duration - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "For a hypothetical four step transaction, this example shows customer transactions that have duration times at least N standard deviations above the average duration of all completed transactions.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Outliers in Transaction Duration",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "TX Outliers Duration - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "TX_Outliers_Duration.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/TX_Outliers_Duration.png"
            }
        ],
        "hideSPLMode": false,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Customer Durations Two Standard Devations Above Average.",
                "search": "|inputlookup transdate.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|stats count values(customer) as customer   values(_time) as _time first(epoch) as first last(epoch) as last by sessionID|where count=4|eval duration=last-first|eventstats avg(duration) as avgdur stdev(duration) as stdev|where duration>(avgdur+(2*stdev))|fields - first last count _time|table sessionID customer duration avgdur stdev",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_TX_Count_By_Action": {
        "id": "TX Count By Action",
        "domain": "Application",
        "help": "TX Count By Action",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Transaction Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a transaction. Use an action field (start, in-progress, ending, finished) to name a step in a transaction. In our example for a four step transaction, we want to use a stats count by sessionID as the part of the search that counts how many steps were in a transaction. To do this with one stats command, simply use count(eval(match(action, Name of Action))) for each action step in the stats command.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "For our four step transaction, it is important to have counts on how many steps were performed for each transaction that started. How many went to two steps, three steps or completed? This will help measure the quality of the application as ideally, it is best if all transactions complete.",
        "relevance": "Splunk is being used to monitor a four step transaction. Knowing the counts for how many transactions made it to a particular step is important for analysts to gauge the application.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=TX Count By Action - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "For a hypothetical four step transaction, this example counts how many went to two steps, three steps, and completed four steps.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Categorizing Transaction Steps by Count by Step",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "TX Count By Action - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "TX_Count_By_Action.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/TX_Count_By_Action.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Count by Action (Step) for Four Step Transactions",
                "search": "|inputlookup transdate.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|stats count(eval(action=\"start\")) as start_count count(eval(action=\"in-progress\")) as in-progress_count count(eval(action=\"ending\")) as ending_count count(eval(action=\"finished\")) as finished_count",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_TX_Count_By_Terminated_Step": {
        "id": "TX Count By Terminated Step",
        "domain": "Application",
        "help": "TX Count By Terminated Step",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Transaction Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a transaction. In our four step transaction, you can use stats to count how many transactions had 1, 2, 3, or 4 steps by grouping by sessionID and using a where clause to limit the count to 1, 2, 3, or 4 steps. One way to do this is to run 4 different searches in subsearches varying only by the where clause in each subsearch and then using appendcols to glue the four single value counts together.", 
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": " Transaction counts is a typical FSI use case. For our four step transaction, it is important to have counts on how many transactions terminated at each step. Ideally, you would want all transactions to complete and have zero counts for all the terminated sub-steps. If the number of transactions terminating at the sub-steps are larger than zero, investigate why those transactions did not finish.",
        "relevance": "Splunk is being used to monitor a four step transaction. Knowing how many terminated at each step helps analysts gauge the application.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=TX Count By Terminated Step - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "For a hypothetical four step transaction, this example counts how many terminated at one step, two steps, three steps, and completed four steps.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Counts for Terminated Transaction That Did Not Finish",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "TX Count By Terminated Step - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "TX_Count_By_Terminated_Step.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/TX_Count_By_Terminated_Step.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Total Counts for Each Terminated Step for Four Step Transactions",
                "search": "|inputlookup transdate.csv|sort - _time|dedup sessionID|stats count(sessionID) as TotalSessions|appendcols[|inputlookup transdate.csv|sort - _time|stats count by sessionID|where count=1 |stats count(sessionID) as StoppedAtStartStep]|appendcols[|inputlookup transdate.csv|sort - _time|stats count by sessionID|where count=2 |stats count(sessionID) as StoppedAtStep2]|appendcols[|inputlookup transdate.csv|sort - _time|stats count by sessionID|where count=3 |stats count(sessionID) as StoppedAtStep3]|appendcols[|inputlookup transdate.csv|sort - _time|stats count by sessionID|where count=4|stats count(sessionID) as CompletedTransactions]",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_TX_Steps_Over_Time": {
        "id": "TX Steps Over Time",
        "domain": "Application",
        "help": "TX Steps Over Time",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Transaction Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a transaction. In our four step transaction, you can use timechart in 10 minute spans to count how many transactions had actions of starting, in-progress, ending and finished.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": " Transaction counts is a typical FSI use case. Seeing how many transactions are at certain step over time gives a visual representation of the business. This helps in solving SLA issues and provides statistics for the performance of your application.",
        "relevance": "Splunk is being used to monitor a four step transaction. In this example, we want to show a timechart for when each step of the transaction was reached. This will visually show when steps are starting and ending over time.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=TX Steps Over Time - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "For a hypothetical four step transaction, this example shows a chart for when each step was reached over time for transactions in the requested time period.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Transaction Steps Seen Over Time",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "TX Steps Over Time - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "TX_Steps_Over_Time.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/TX_Steps_Over_Time.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Transaction That Reached a Step Shown Over Time",
                "search": "|inputlookup transdate.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|timechart span=10s fixedrange=F count(eval(action=\"start\")) as start count(eval(action=\"in-progress\")) as in-progress count(eval(action=\"ending\")) as ending count(eval(action=\"finished\")) as finished",
                "vizParameters": {
                    "charting.axisX.scale": "linear",
                    "charting.lineWidth": "2",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.legend.mode": "standard",
                    "charting.chart.style": "shiny",
                    "charting.axisY.scale": "linear",
                    "charting.axisY2.scale": "inherit",
                    "charting.axisY2.abbreviation": "none",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.chart.stackMode": "default",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.layout.splitSeries": "0",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.legend.placement": "right",
                    "charting.axisX.abbreviation": "none",
                    "charting.chart": "line",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleY.visibility": "visible",
                    "trellis.enabled": "0",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.chart.showDataLabels": "none",
                    "resizable": true,
                    "charting.drilldown": "none",
                    "charting.axisTitleX.visibility": "visible",
                    "trellis.scales.shared": "1",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "trellis.size": "medium",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_Credit_Limit_Denies": {
        "id": "Credit Limit Denies",
        "domain": "Application",
        "help": "Credit Limit Increase Denies",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Limit Increase",
        "howToImplement": "<p>First, index your application logs that pertain to a credit limit increase request from customers. You will need fields for customer name or ID and desired credit limit. Then, correlate this data via a lookup with external data that shows if the customers is in good standing (pays on time and has good credit), has an income, and has a number of yearly transactions with the credit card. Now, apply rules to deny. For instance, the customer is not in good standing, has income that is not 10 times the credit limit amount, or a has too few transactions. List out each denial reason in a table. A separate process can review these reports to make a final decision.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Please check with your local government regulation to determine how you can use these use cases to determine credit worthless for a individual or company. Splunk is not saying or implying that we can help determine risk. Use of this use case is just an example of what is possible.<br><br> In this example, Splunk is not only monitoring machine data, but it is also actively participating in the preliminary transaction. By using Splunk to provide reports on why customers were denied credit limit increases, you can operationalize the preliminary decision from in coming log events, allowing for faster decision making and streamlining the business.",
        "relevance": "In the past, Splunk has been used as a source to make decisions for transactions. In this example the data in Splunk, along with reference data, is used to provide reasons to deny a credit limit increase for customers.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Credit Limit Denies - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Customers have asked for a credit limit increase. Use reference data to correlate with the customer's request and list out the reasons why the customer was denied. Reasons for denial could be bad standing, low income, or not enough transactions. Splunk is involved in helping make the decision.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Credit Limit Increase Denial Details",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Credit Limit Denies - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Credit_Limit_Denies.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Credit_Limit_Denies.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Denied because yearly transaction numbers too low (less than or equal to 10)",
                "search": "|inputlookup credit_limit_requests.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|eval action=\"authorized\"|lookup CustomerData customer|eval denied_reason=\"Number of yearly transactions too low\"|where good_standing=\"yes\" AND year_transactions<=10|eval action=\"denied\"|eval income=tostring(round(income, 2),\"commas\"), new_limit=tostring(round(new_limit, 2),\"commas\")|fields - epoch",
                "vizParameters": {
                    "count": "10",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
        {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Denied because income is too low (less than 10 times credit limit)",
                "search": "|inputlookup credit_limit_requests.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|eval action=\"authorized\"|lookup CustomerData customer|eval denied_reason=\"Income too low compared to new credit limit\"|where good_standing=\"yes\" AND income<=(10*new_limit)|eval action=\"denied\"|eval income=tostring(round(income, 2),\"commas\"), new_limit=tostring(round(new_limit, 2),\"commas\")|fields - epoch",
                "vizParameters": {
                    "count": "10",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
        {
                "panel": "row3cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Denied because customer is not in good standing (bad credit)",
                "search": "|inputlookup credit_limit_requests.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|eval action=\"authorized\"|lookup CustomerData customer|eval denied_reason=\"customer is not in good standing\" |eval action=\"denied\"|where good_standing=\"no\"|eval income=tostring(round(income, 2),\"commas\"), new_limit=tostring(round(new_limit, 2),\"commas\") |fields - epoch",
                "vizParameters": {
                    "count": "10",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]
    },
    "showcase_Credit_Limit_Authorized": {
        "id": "Credit Limit Authorized",
        "domain": "Application",
        "help": "Credit Limit Increase Authorized",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Limit Increase",
        "howToImplement": "<p>First, index your application logs that pertain to a credit limit increase request from customers. You will need fields for customer name or ID and desired credit limit. Then, correlate this data via a lookup with external data that shows if the customers is in good standing (pays on time and has good credit), has an income ten times the new credit limit, and has a number of yearly transactions (greater than 10) with the credit card. Now, apply rules to authorize. For instance, if the customer is in good standing, has income that is ten times the credit limit amount, and at least 10 transactions per year, authorize the customer in a table. A separate process can review these reports to make a final decision. Run the reports on a hourly basis.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "Please check with your local government regulation to determine how you can use these use cases to determine credit worthless for a individual or company. Splunk is not saying or implying that we can help determine risk. Use of this use case is just an example of what is possible.<br><br> In this example, Splunk is not only  monitoring machine data, but it is also actively participating in the preliminary transaction. By using Splunk to provide reports on why customers were authorized credit limit increases, you can operationalize the preliminary decision from in coming log events, allowing for faster decision making and streamlining the business.",
        "relevance": "In the past, Splunk has been used as a source to make decisions for transactions. In this example the data in Splunk, along with reference data, is used to authorize a credit limit increase for customers.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Credit Limit Authorized - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Customers have asked for a credit limit increase. Use reference data to correlate with the customer's request and provide a list of customers that were preliminarily authorized. Customers must be in good standing, have enough income, and enough transactions. Splunk is involved in helping make the decision.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Credit Limit Increase Authorization Details",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Credit Limit Authorized - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Credit_Limit_Authorized.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Credit_Limit_Authorized.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Authorized Because Good Standing, Income, and Yearly Transaction Number",
                "search": "|inputlookup credit_limit_requests.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|eval action=\"authorized\"|lookup CustomerData customer|eval action=if(good_standing=\"yes\" AND year_transactions>10 AND income>(new_limit*10), \"authorized\", \"denied\")|where action=\"authorized\"|eval income=tostring(round(income, 2),\"commas\"), new_limit=tostring(round(new_limit, 2),\"commas\")|fields - epoch",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_Credit_Limit_Over_Time": {
        "id": "Credit Limit Over Time",
        "domain": "Application",
        "help": "Credit Limit Increase Authorized",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Limit Increase",
        "howToImplement": "<p>First, index your application logs that pertain to a credit limit increase request from customers. You will need fields for customer name or ID and desired credit limit. Then, correlate this data via a lookup with external data that shows if the customers is in good standing (pays on time and has good credit), has an income ten times the new credit limit, and has a number of yearly transactions (greater than 10) with the credit card. This means it counts as authorized, otherwise it is denied. Put this in an action field and then submit a timechart to show authorized vs denied over time.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "In this example, Splunk is not only  monitoring machine data, but it is also actively participating in the preliminary transaction. By using Splunk to provide reports on authorized vs. denied over time, you can visually see how the business is performing. Too many authorizations or denials may mean the rules may need to be tweaked.",
        "relevance": "In the past, Splunk has been used as a source to make decisions for transactions. In this example Splunk is being used as a source, along with reference data, to decide whether to authorize or deny a credit limit increase for customers. The example shows the decision counts over time.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Credit Limit Over Time - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Customers have asked for a credit limit increase. Use reference data to correlate with the customer's request and provide a list of customers that were preliminarily authorized or denied. Use a timechart to compare authorizations vs denials over time.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Authorization vs. Denial Over Time",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Credit Limit Over Time - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Credit_Limit_Over_Time.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Credit_Limit_Over_Time.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Authorized vs. Denied Counts for Credit Limit Increase Over Time",
                "search": "|inputlookup credit_limit_requests.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|eval action=\"authorized\"|lookup CustomerData customer|eval action=if(good_standing=\"yes\" AND year_transactions>10 AND income>(new_limit*10), \"authorized\", \"denied\")|timechart span=10m fixedrange=F count by action",
                "vizParameters": {
                    "trellis.scales.shared": "1",
                    "charting.chart.stackMode": "default",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.chart.nullValueMode": "connect",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "resizable": true,
                    "trellis.size": "medium",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart": "line",
                    "charting.chart.style": "shiny",
                    "charting.axisY.scale": "linear",
                    "charting.legend.mode": "standard",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.drilldown": "none",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisX.scale": "linear",
                    "charting.lineWidth": "2",
                    "charting.axisY2.abbreviation": "none",
                    "charting.legend.placement": "right",
                    "trellis.enabled": "0",
                    "charting.axisY2.scale": "inherit",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_Credit_Limit_Average_Increase": {
        "id": "Credit Limit Average Increase",
        "domain": "Application",
        "help": "Credit Limit Increase Authorized",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Limit Increase",
        "howToImplement": "<p>First, index your application logs that pertain to a credit limit increase request from customers. Locate a field that has the new credit limit increase request and use a timechart to average out the increase over time.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "In this example, we are showing the average credit limit increase request amount over time. This gives a quick at a glance look at how much credit the average customer is requesting at any given time helping the business prepare for giving out future credit.",
        "relevance": "In the past, Splunk has been used as a source to make decisions for transactions. In this example Splunk is being used as a source, along with reference data, to make authorization decisions for credit limit increases for customers. This example will then show the average new limit over time.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Credit Limit Average Increase - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Customers have asked for a credit limit increase. This example provides a time chart that shows the average new credit limit amount requested over time to help monitor the potential available credit needed.",
        "released": "1.0.0",
        "journey": "Stage_3",
        "icon": "Core_Use_Case.png",
        "name": "New Credit Limit Requested Amount Over Time",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Credit Limit Average Increase - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Credit_Limit_Average_Increase.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Credit_Limit_Average_Increase.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Average Credit Limit Amounts Over Time",
                "search": "|inputlookup credit_limit_requests.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|timechart span=10m fixedrange=F avg(new_limit) as requested_limit",
                "vizParameters": {
                    "trellis.scales.shared": "1",
                    "charting.chart.stackMode": "default",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.chart.nullValueMode": "connect",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisTitleX.visibility": "visible",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "resizable": true,
                    "trellis.size": "medium",
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart": "line",
                    "charting.chart.style": "shiny",
                    "charting.axisY.scale": "linear",
                    "charting.legend.mode": "standard",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.drilldown": "none",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisX.scale": "linear",
                    "charting.lineWidth": "2",
                    "charting.axisY2.abbreviation": "none",
                    "charting.legend.placement": "right",
                    "trellis.enabled": "0",
                    "charting.axisY2.scale": "inherit",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_Credit_Limit_Trellis": {
        "id": "Credit Limit Trellis",
        "domain": "Application",
        "help": "Credit Limit Increase Trellis",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Limit Increase",
        "howToImplement": "<p>First, index your application logs that pertain to a credit limit increase request from customers. You will need fields for customer name or ID and desired credit limit. Then, correlate this data via a lookup with external data that shows if the customers is in good standing (pays on time and has good credit), has an income ten times the new credit limit, and has a number of yearly transactions (greater than 10) with the credit card. Apply these checks in a timechart with a count(eval() function. You will get counts for the 3 reasons the credit limit increase was denied. Save the visualization as a Trellis Chart to see over time reasons for denial side-by-side.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "In this example, Splunk is not only  monitoring machine data, but it is also actively participating in the preliminary transaction. By using Splunk to provide reports on reasons for denial side-by-side in a Trellis chart, you can get insights into the why limit increases are denied over time for future planning and to troubleshoot rules that may be too strict.", 
        "relevance": "In the past, Splunk has been used as a source to make decisions for transactions. In this example, Splunk is being used as a source, along with reference data, to use rules to deny a credit limit increase for customers. The denial reasons are shown side-by-side over time.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Credit Limit Trellis - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "Customers have asked for a credit limit increase. Use reference data to correlate with the customer's request and use a Trellis chart to provide side-by-side counts of reasons for denial over time.",
        "released": "1.0.0",
        "journey": "Stage_4",
        "icon": "Core_Use_Case.png",
        "name": "Credit Limit Increase Denial Counts Side-by-Side",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Credit Limit Trellis - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Credit_Limit_Trellis.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Credit_Limit_Trellis.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Reasons for Credit Limit Increase Denials Trellis Chart",
                "search": "|inputlookup credit_limit_requests.csv|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|eval action=\"authorized\"|lookup CustomerData customer|timechart span=15m fixedrange=F count(eval(good_standing=\"no\")) as \"denied not good standing\" count(eval(year_transactions<=10)) as \"denied not enough yearly transations\" count(eval(income<(10*new_limit))) as \"denied not enough income\"",
                "vizParameters": {
                    "trellis.scales.shared": "1",
                    "charting.chart.stackMode": "default",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.axisTitleY.visibility": "collapsed",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisTitleX.visibility": "collapsed",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.axisY.abbreviation": "none",
                    "charting.axisY2.enabled": "0",
                    "resizable": true,
                    "trellis.size": "medium",
                    "charting.axisTitleY2.visibility": "collapsed",
                    "charting.chart": "line",
                    "charting.chart.style": "shiny",
                    "charting.axisY.scale": "linear",
                    "charting.legend.mode": "standard",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.chart.showDataLabels": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.drilldown": "none",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisX.scale": "linear",
                    "charting.lineWidth": "2",
                    "charting.axisY2.abbreviation": "none",
                    "charting.legend.placement": "none",
                    "trellis.enabled": "1",
                    "charting.axisY2.scale": "inherit",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_CCAuth_Status_Subcontractors": {
        "id": "CCAuth Status Subcontractors",
        "domain": "Application",
        "help": "Credit Limit Increase Authorized",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a credit card authorization. The fields that matter are the action for what happened (authorized vs some exception) and the name of the subcontractor that issued the credit card. The report is simply |chart count over subcontractor by action.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "In this example, we are showing a table of counts of possible results from using the credit card by subcontractor over a given time period. This is very useful to run as a changing report to monitor the business. If a particular subcontractor is having too many credit card issues, they will show up on this report indicating proactive action should be taken.",
        "relevance": "Credit card authorization attempts can lead to authorized, denied, cancelled, or error response actions. Each subcontractor (partner) who licenses the Credit Card will provide a status. These statuses can be summed up by subcontractor and shown.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CCAuth Status Subcontractors - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a report of a count of possible actions by contractor for credit card authorization attempts. Knowing in near real-time the status of credit card usage is an important banking function.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Credit Card Usage Counts by Authorization Status",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CCAuth Status Subcontractors - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CCAuth_Status_Subcontractors.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CCAuth_Status_Subcontractors.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Authorization attempts over subcontractor by action",
                "search": "|inputlookup authorizations.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|chart count over subcontractor by action",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_CCAuth_Most_Authorizations": {
        "id": "CCAuth Most Authorizations",
        "domain": "Application",
        "help": "Credit Card Authorized",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a credit card authorization. The fields that matter are the action for what happened (authorized), customer ID and amount. Now, group the authorizations by customer ID and count how many. Use eventstats to get the average count and standard deviation of all authorized attempts and then filter in all customers who had a count greater than the average plus two standard deviations.",
        "hasSearch": "Yes",
        "category": "Outliers",
        "knownFP": "unused",
        "operationalize": "In this example, we are finding all customers that have the most authorization successful attempts and the amounts they spent in a given time period. By finding counts greater than the average of all attempts plus N*standard deviation, no hard coded threshold is needed. These are now our highest usage customers and the business needs to know about them at any given time.",
        "relevance": "These are your outlier credit card authorization customers. The have received the highest number of authorizations in a given time period.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CCAuth Most Authorizations - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a report of customers who have the highest amount of successful credit card authorizations in a given time compared to the rest of the customers. Knowing your top customers by usage can help drive business decisions.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Credit Card Usage Top Customers' Authorization Counts",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CCAuth Most Authorizations - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CCAuth_Most_Authorizations.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CCAuth_Most_Authorizations.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Customers with Authorizations Counts Greater than Average Plus 2 Standard Deviations",
                "search": "|inputlookup authorizations.csv| where action=\"authorized\"|eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|eval amount=tostring(round(amount, 2),\"commas\")|stats count values(amount) as amounts values(subcontractor) as subcontractors by customer|eventstats avg(count) as avg stdev(count) as stdev|where count>(avg+2*stdev)| sort - count",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_CCAuth_Outlier_Response_Time": {
        "id": "CCAuth Outlier Response Time",
        "domain": "Application",
        "help": "Credit Card Authorized",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a credit card authorization. The fields that matter are the response time in seconds for what happened, customer ID and subcontractor issuing the credit card. Now, group the average response times by customer ID. Use eventstats to get the average response time and standard deviation of all attempts and then filter in all customers who had a response time greater than the average plus four standard deviations.",
        "hasSearch": "Yes",
        "category": "Outliers|Customer Experience",
        "knownFP": "unused",
        "operationalize": "In this example, we are finding all customers that have highest response time in a time period. By finding response times greater than the average of all response times plus N*standard deviation, no hard coded threshold is needed. These are now our customers having the worse experience in getting an authorization in terms of time. The business should be aware of these outliers.",
        "relevance": "These are your outlier credit card authorization customers in terms of response time. They have the highest average response time compared to other customers in a given time period.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CCAuth Outlier Response Time - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a report of customers who have the highest response times for credit card authorization attempts in a given time compared to the rest of the customers. Knowing which customers are suffering the worst customer experience may be the first step to improving it.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Credit Card Usage Highest Response Times",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CCAuth Outlier Response Time - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CCAuth_Outlier_Response_Time.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CCAuth_Outlier_Response_Time.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Customers with Response Times Greater Than Average Plus 4 Standard Deviations",
                "search": "|inputlookup authorizations.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|stats avg(ResponseTime) as averageResp by customer,subcontractor|eventstats avg(averageResp) as avg stdev(averageResp) as stdev |where averageResp>(avg+4*stdev)",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }

        ]
    },
    "showcase_CCAuth_Customer_Issues": {
        "id": "CCAuth Customer Issues",
        "domain": "Application",
        "help": "Credit Card Authorized",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a credit card authorization. The fields that matter are the results of the attempt, customer ID and subcontractor issuing the credit card. Create one report for customers with errors, one with customers with cancellations, and one with customer with cancellations followed by an authorization.",
        "hasSearch": "Yes",
        "category": "Outliers|Customer Experience",
        "knownFP": "unused",
        "operationalize": "Customers that received errors or had their credit card authorization attempt cancelled are experiencing unusual issues that need to be monitored. It may also be unusual to receive an authorization after an initial cancellation. Proactively monitoring these issues may help improve the application and business process.",
        "relevance": "A customer or entity may cancel a credit card authorization attempt. If they initiate it again and are authorized, this KPI needs to be noted just to see how many times this occurs in a given time period. Other customers may simply cancel and some customers may receive errors. Each of these should be reported.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CCAuth Customer Issues - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows reports for customers experiencing credit card authorization errors, cancellations, and authorizations only after an initial cancellation. Unusual statuses should be monitored.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "Credit Card Authorization Issues",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CCAuth Customer Issues - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CCAuth_Customer_Issues.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CCAuth_Customer_Issues.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Customers receving authorization after initial cancellation",
                "search": "|inputlookup authorizations.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|stats values(amount) as amount first(action) as first_action last(action) as last_action by customer, subcontractor,sessionID |where first_action=\"cancelled\" AND last_action=\"authorized\"|eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
        {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Customers receving cancellations",
                "search": "|inputlookup authorizations.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|where action=\"cancelled\"|table _time, customer, action, amount, subcontractor|eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
        {
                "panel": "row2cell2",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Customers receving errors",
                "search": "|inputlookup authorizations.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|where action=\"error\"|table _time, customer, action, amount, subcontractor|eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }


        ]
    },
    "showcase_CCAuth_Subcontractor_Counts": {
        "id": "CCAuth Subcontractor Counts",
        "domain": "Application",
        "help": "Credit Card Authorized",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a credit card authorization. The fields that matter are the results of the attempt, and subcontractor issuing the credit card. Create one report for a count of actions by subcontractor, another with a timechart counting actions by subcontractor, and one with count over subcontractor by action.",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "This is the type of dashboard you would want to put on a monitor in front of executives. By knowing at a glance how many credit cards are being authorized by subcontractor in three different charts, the business can make decisions in real-time to react to unusual conditions.",
        "relevance": "Banks want to monitor each one of their subcontractors to see how they are performing in terms of authorization attempts. This example provides reports split by each contractor on counts of actions that resulted per authorization attempt.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CCAuth Subcontractor Counts - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows reports for actions (authorization, cancellations, etc) by subcontractors with absolute counts, counts over time, and counts split by action. The reports can be given to executives to gauge the business.",
        "released": "1.0.0",
        "journey": "Stage_3",
        "icon": "Core_Use_Case.png",
        "name": "Credit Card Authorization Counts by Subcontractor",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CCAuth Subcontractor Counts - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CCAuth_Subcontractor_Counts.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CCAuth_Subcontractor_Counts.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Count by Authorizations Over Time",
                "search": "|inputlookup authorizations.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|timechart span=10m fixedrange=F count(action) as action by subcontractor",
                "vizParameters": {
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.legend.placement": "right",
                    "charting.chart": "line",
                    "charting.drilldown": "none",
                    "charting.chart.style": "shiny",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.axisY.scale": "linear",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisY.abbreviation": "none",
                    "charting.legend.mode": "standard",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleX.visibility": "visible",
                    "resizable": true,
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.showDataLabels": "all",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "trellis.enabled": "0",
                    "charting.lineWidth": "2",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.stackMode": "stacked",
                    "trellis.scales.shared": "1",
                    "trellis.size": "medium",
                    "charting.axisX.scale": "linear",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
        {
                "panel": "row2cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Count by Possible Actions",
                "search": "|inputlookup authorizations.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|chart count by action",
                "vizParameters": {
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.nullValueMode": "connect",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.legend.placement": "right",
                    "charting.chart": "column",
                    "charting.drilldown": "none",
                    "charting.chart.style": "shiny",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.axisY.scale": "linear",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisY.abbreviation": "none",
                    "charting.legend.mode": "standard",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleX.visibility": "visible",
                    "resizable": true,
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.showDataLabels": "none",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "trellis.enabled": "0",
                    "charting.lineWidth": "2",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.stackMode": "default",
                    "trellis.scales.shared": "1",
                    "trellis.size": "medium",
                    "charting.axisX.scale": "linear",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            },
        {
                "panel": "row2cell2",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Count Over Subcontractor by Action",
                "search": "|inputlookup authorizations.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|chart count over subcontractor by action",
                "vizParameters": {
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.legend.placement": "right",
                    "charting.chart": "column",
                    "charting.drilldown": "none",
                    "charting.chart.style": "shiny",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.axisY.scale": "linear",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisY.abbreviation": "none",
                    "charting.legend.mode": "standard",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleX.visibility": "visible",
                    "resizable": true,
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.showDataLabels": "all",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "trellis.enabled": "0",
                    "charting.lineWidth": "2",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.stackMode": "stacked",
                    "trellis.scales.shared": "1",
                    "trellis.size": "medium",
                    "charting.axisX.scale": "linear",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }


        ]
    },
    "showcase_CCAuth_Auth_Denial_Subcontractors": {
        "id": "CCAuth Auth Denial Subcontractors",
        "domain": "Application",
        "help": "Credit Card Authorized",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a credit card authorization. The fields that matter are the results of the attempt, and subcontractor issuing the credit card. Create a timechart report for a count of actions by subcontractor where one count is count(eval(action=\"authorized\")) while the other count is count(eval(action=\"denied\")).",
        "hasSearch": "Yes",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "This report can be used by executives to gauge the business to see how subcontractors for credit cards are doing over time. Too many denials or not enough authorizations should lead to an investigation for why.",
        "relevance": "Subcontractors for credit card authorization will provide response action statuses (authorized vs. denied) over time. By providing a report on this over time, a bank can guage the performance of their underwritten cards issued to their partners.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CCAuth Auth Denial Subcontractors - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a timechart report for authorization and denial counts by subcontractors to guage the performance of the credit card business.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Credit Card Authorizations and Denials by Subcontractor",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CCAuth Auth Denial Subcontractors - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CCAuth_Auth_Denial_Subcontractors.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CCAuth_Auth_Denial_Subcontractors.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table", 
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Authorizations and Denials by Subcontractor Over Time",
                "search": "|inputlookup authorizations.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|timechart span=10m fixedrange=F count(eval(action=\"authorized\")) as authorized count(eval(action=\"denied\")) as denied by subcontractor",
                "vizParameters": {
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.legend.placement": "right",
                    "charting.chart": "area",
                    "charting.drilldown": "none",
                    "charting.chart.style": "shiny",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.axisY.scale": "linear",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisY.abbreviation": "none",
                    "charting.legend.mode": "standard",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleX.visibility": "visible",
                    "resizable": true,
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.showDataLabels": "none",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "trellis.enabled": "0",
                    "charting.lineWidth": "2",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.stackMode": "stacked",
                    "trellis.scales.shared": "1",
                    "trellis.size": "medium",
                    "charting.axisX.scale": "linear",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }


        ]
    },
    "showcase_CCAuth_Average_Response": {
        "id": "CCAuth Average Response",
        "domain": "Application",
        "help": "Credit Card Authorized",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a credit card authorization. The fields that matter are the response times by attempt, and subcontractor issuing the credit card. Create a timechart report for a count of average response time split by subcontractor.",
        "hasSearch": "Yes",
        "category": "Customer Experience",
        "knownFP": "unused",
        "operationalize": "This report can be used to understand the customer experience with response times by subcontractors. If any of the subcontractors have response times much worse than the others, there should be a follow up.",
        "relevance": "Comparing the average response time for credit card authorization attempts over time split by subcontractor is the purpose of this example.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CCAuth Average Response - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a timechart report of the average response time by subcontractor to gauge customer experience.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Credit Card Authorization Response Times by Subcontractor",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CCAuth Average Response - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CCAuth_Average_Response.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CCAuth_Average_Response.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table", 
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Average Response Time by Subcontractor",
                "search": "|inputlookup authorizations.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort _time|timechart span=10m fixedrange=F avg(ResponseTime) as averageResponseTime by subcontractor",
                "vizParameters": {
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.nullValueMode": "connect",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.legend.placement": "right",
                    "charting.chart": "line",
                    "charting.drilldown": "none",
                    "charting.chart.style": "shiny",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.axisY.scale": "linear",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisY.abbreviation": "none",
                    "charting.legend.mode": "standard",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleX.visibility": "visible",
                    "resizable": true,
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.showDataLabels": "none",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "trellis.enabled": "0",
                    "charting.lineWidth": "2",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.stackMode": "stacked",
                    "trellis.scales.shared": "1",
                    "trellis.size": "medium",
                    "charting.axisX.scale": "linear",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }


        ]
    },
    "showcase_CCAuth_Timewrap": {
        "id": "CCAuth Timewrap",
        "domain": "Application",
        "help": "Credit Card Authorized",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Statistics",
        "howToImplement": "<p>First, index your application logs that pertain to a credit card authorization. The fields that matter are the response times and events that pertain to authorization attempts with the credit card. Create a timechart report for a count of average response time and pass the results to timewrap for a 4 hour comparison of today vs yesterday.",
        "hasSearch": "Yes",
        "category": "Customer Experience",
        "knownFP": "unused",
        "operationalize": "This report can be used to understand customer experience with response times in a two day span. If the chart changes dramatically and nothing else has changed, investigate why.",
        "relevance": "Banks want to know the average response time day over day for credit card authorization attempts. This example provides a report comparing one day to the day before.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CCAuth Timewrap - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example shows a day over day comparison of the average response times for credit card authorization attempts.",
        "released": "1.0.0",
        "journey": "Stage_2",
        "icon": "Core_Use_Case.png",
        "name": "Credit Card Authorizations Today vs. Yesterday",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CCAuth Timewrap - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CCAuth_Timewrap.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CCAuth_Timewrap.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table", 
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "ChartElement",
                "title": "Comparing Response Times vs Yesterday in a 4 Hour Span",
                "search": "|inputlookup authorized2days.csv| eval _time=strptime(_time, \"%Y/%m/%d %H:%M:%S\")|sort - _time|timechart span=15m fixedrange=F avg(ResponseTime) as ResponseTime|timewrap series=exact time_format=\"Hours of %m/%d\" 4h",
                "vizParameters": {
                    "charting.axisLabelsX.majorLabelStyle.overflowMode": "ellipsisNone",
                    "charting.chart.nullValueMode": "gaps",
                    "charting.legend.labelStyle.overflowMode": "ellipsisMiddle",
                    "charting.legend.placement": "right",
                    "charting.chart": "line",
                    "charting.drilldown": "none",
                    "charting.chart.style": "shiny",
                    "charting.axisY2.scale": "inherit",
                    "charting.chart.bubbleMaximumSize": "50",
                    "charting.axisY.scale": "linear",
                    "charting.chart.bubbleMinimumSize": "10",
                    "charting.axisY.abbreviation": "none",
                    "charting.legend.mode": "standard",
                    "charting.chart.bubbleSizeBy": "area",
                    "charting.chart.sliceCollapsingThreshold": "0.01",
                    "charting.axisTitleY.visibility": "visible",
                    "charting.axisX.abbreviation": "none",
                    "charting.axisY2.abbreviation": "none",
                    "charting.axisLabelsX.majorLabelStyle.rotation": "0",
                    "charting.axisY2.enabled": "0",
                    "charting.axisTitleX.visibility": "visible",
                    "resizable": true,
                    "charting.axisTitleY2.visibility": "visible",
                    "charting.chart.showDataLabels": "none",
                    "charting.layout.splitSeries.allowIndependentYRanges": "0",
                    "trellis.enabled": "0",
                    "charting.lineWidth": "2",
                    "charting.layout.splitSeries": "0",
                    "charting.chart.stackMode": "default",
                    "trellis.scales.shared": "1",
                    "trellis.size": "medium",
                    "charting.axisX.scale": "linear",
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }


        ]
    },
    "showcase_MFID_Impact_Buy": {
        "id": "MFID Impact Buy",
        "domain": "Application",
        "help": "Capture the time difference between an NTP server and the hostinvolved with a MFID trade. If the difference is too much, Splunk can report upon it and you can take action to correct it.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "MFID",
        "howToImplement": "<p>Use a script to contact an NTP server on a host every N minutes and capture their results to a file. Forward this file to Splunk and check if the time drift is tolerable. A script such as echo `sntp time_server` `hostname` may be enough. In this example, every time you take a measurement, also record at the same time the total volume of trades and monetary amount that was involved for buy orders in some database. Later, when you find intolerable time drifts for the host, correlate with a lookup to see how much volume and amounts were involved in buy orders at the time of drift.",
        "hasSearch": "Yes",
        "category": "Compliance",
        "knownFP": "unused",
        "operationalize": "Hosts that have a large time drift may effect best execution for buy orders. If you know which hosts have a time drift at any particular time, you may want to know the business impact of buy orders in terms of volume and amount at that time as well.",
        "relevance": "Hosts that have a large time drift may effect best execution. Knowing what aggregate trade amounts were involved on that host at the time of drift ia a key KPI to judge possible impact.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=MFID Impact Buy - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example show the business impact of buy orders on a time drifted host by listing out the volume and monetary amount that was recorded on that host at the time of intolerable time drifting.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "MFID Time Drift Impact on Buy Orders",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "SNTP Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=sntp_logs|where drift<-0.1 OR drift>+0.1",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "MFID Impact Buy - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "MFID_Impact_Buy.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/MFID_Impact_Buy.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Hosts with time drifts and buy order volumes and amounts involved",
                "search": "|inputlookup timedrift.csv|sort - date|where drift<-0.1 OR drift>+0.1|lookup VolumeBuy host, date|table date, host, drift, amount, volume|eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_MFID_Impact_Sell": {
        "id": "MFID Impact Sell",
        "domain": "Application",
        "help": "Capture the time difference between an NTP server and the hostinvolved with a MFID trade. If the difference is too much, Splunk can report upon it and you can take action to correct it.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "MFID",
        "howToImplement": "<p>Use a script to contact an NTP server on a host every N minutes and capture their results to a file. Forward this file to Splunk and check if the time drift is tolerable. A script such as echo `sntp time_server` `hostname` may be enough. In this example, every time you take a measurement, also record at the same time the total volume of trades and monetary amount that was involved in sell orders in some database. Later, when you find intolerable time drifts for the host, correlate with a lookup to see how much volume and amounts were involved in sell orders at the time of drift.",
        "hasSearch": "Yes",
        "category": "Compliance",
        "knownFP": "unused",
        "operationalize": "Hosts that have a large time drift may effect best execution for sell orders. If you know which hosts have a time drift at any particular time, you may want to know the business impact of sell orders in terms of volume and amount at that time as well.",
        "relevance": "Hosts that have a large time drift may effect best execution. Knowing what aggregate trade amounts were involved on that host at the time of drift ia a key KPI to judge possible impact.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=MFID Impact Sell - Demo",
        "dashboard_type": "XML Panels with Screenshot",
        "description": "This example show the business impact of sell orders on a time drifted host by listing out the volume and monetary amount that was recorded on that host at the time of intolerable time drifting.",
        "released": "1.0.0",
        "journey": "Stage_1",
        "icon": "Core_Use_Case.png",
        "name": "MFID Time Drift Impact on Sell Orders",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "SNTP Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=sntp_logs|where drift<-0.1 OR drift>+0.1",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "MFID Impact Sell - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "MFID_Impact_Sell.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/MFID_Impact_Sell.png"
            }
        ],
        "hideSPLMode": "exception",
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "Hosts with time drifts and sell order volumes and amounts involved",
                "search": "|inputlookup timedrift.csv|sort - date|where drift<-0.1 OR drift>+0.1|lookup VolumeSell host, date|table date, host, drift, amount, volume|eval amount=tostring(round(amount, 2),\"commas\")",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_Payment_ITSI": {
        "id": "Payment ITSI",
        "domain": "Application",
        "help": "Payment applications will send a request for payment to be cleared and expect a response.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Payment Response",
        "howToImplement": "<p><b>This example requires Splunk ITSI.</b> Create a Payment Request Service in ITSI that has at least two KPIs. One will count the number responses that returned successfully much like the example in this Splunk FSI Essentials App. The other will find the average response time in 1 minute spans. Create thresholds for critical, high, medium, and normal for each KPI. Create another service called Response. Among the KPIs for this service is counting errors for giving a response to a request for payment. Create a Glass Table that shows the Request and Response Service with a minimum of these 3 KPIs. Enhance it to use Adaptive Thresholds and also have dependent services in the Glass Table.",
        "hasSearch": "No",
        "category": "Responses",
        "knownFP": "unused",
        "operationalize": "A Glass Table showing at a glance Payment Request and Response KPIs along with a response time KPI can provide instant feedback on the health of your request response application. For instance, in this example, we see that there are 30 responses missing, which coincide with 30 errors from the requests, giving us a root cause for the issue.",
        "relevance": "This examples shows a Glass Table of a possible Payments Request Response service. Seeing the health scores of the KPIs in question can help determine the root cause quickly, if something goes wrong.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=Payment ITSI - Demo",
        "dashboard_type": "Screenshots Only",
        "description": "This examples shows a Glass Table of a possible Payments Request Response service.",
        "released": "1.0.0",
        "journey": "Stage_4",
        "icon": "ITSI_Use_Case.png",
        "name": "Payment ITSI",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "Payment ITSI - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "Payment_ITSI.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/Payment_ITSI.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "",
                "search": "| makeresults count=1|eval Message=\"Use Splunk ITSI\"|fields - _time",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    },
    "showcase_CCAuth_ITSI": {
        "id": "CCAuth_ITSI",
        "domain": "Application",
        "help": "CC Auth Glass Table.",
        "app": "Splunk_Essentials_For_Telco",
        "usecase": "Credit Card Statistics",
        "howToImplement": "<p><b>This example requires Splunk ITSI.</b> Create an App Server Service that has requests for credit card authorizations as a KPI in ITSI. Create another service that fulfills the authorization requests. The App Server Service Health will depend on the KPI that fulfills the authorization service. Create thresholds for critical, high, medium, and normal for each KPI. Create a Glass Table that shows the App Server and Authorization Service with a minimum of the 2 KPIs. Enhance it to use Adaptive Thresholds and also have dependent services in the Glass Table.",
        "hasSearch": "No",
        "category": "Analytics",
        "knownFP": "unused",
        "operationalize": "A Glass Table showing at a glance credit card authorization KPIs can provide instant feedback on the health of your authorization application. For instance, in this example, we see that at this time 100% of all requests to authorize have been fulfilled, meaning the service is running as normal.",
        "relevance": "This examples shows a Glass Table of a possible credit card authorization service. Seeing the health scores of the KPIs in question can help determine the root cause quickly, if something goes wrong.",
        "includeSSE": "Yes",
        "dashboard": "showcase_simple_search?ml_toolkit.dataset=CCAuth_ITSI - Demo",
        "dashboard_type": "Screenshots Only",
        "description": "This examples shows a Glass Table of a possible credit card authorization service.",
        "released": "1.0.0",
        "journey": "Stage_4",
        "icon": "ITSI_Use_Case.png",
        "name": "Credit Card Authorization ITSI",
        "displayapp": "Splunk_Essentials_For_Telco",
        "SPLEase": "Easy",
        "datasource": "Application Logs",
        "highlight": "Yes",
        "alertvolume": "unused",
        "sampleSPL": "sourcetype=app_logs",
        "essential_apps": "Application Analytics, IT Troubleshooting  Monitoring",
        "examples": [
            {
                "name": "CCAuth_ITSI - Demo",
                "label": "Demo Data"
            }
        ],
        "images": [
            {
                "name": "CCAuth_ITSI.png",
                "label": "",
                "path": "/static/app/Splunk_Essentials_For_Telco/images/use_case_image/CCAuth_ITSI.png"
            }
        ],
        "hideSPLMode": true,
        "autoOpen": "supportingImages_table",
        "visualizations": [
            {
                "panel": "row1cell1",
                "type": "viz",
                "vizType": "TableElement",
                "title": "",
                "search": "| makeresults count=1|eval Message=\"Use Splunk ITSI\"|fields - _time",
                "vizParameters": {
                    "count": "15",
                    "drilldown": "none",
                    "refresh.display": "progressbar"
                }
            }
        ]

    }
    
}
, 
 "roles":
 { 
   "default": { 
      "summaries":[
    "showcase_Payment_Response_Outliers",
    "showcase_Payment_Response_Missing",
    "showcase_Payment_Response_Statistics",
    "showcase_Payment_SLA_Counts",
    "showcase_Payment_SLA_Amounts",
    "showcase_Payment_ITSI",
    "showcase_Wire_Transfer_Fraud_Denies",
    "showcase_Wire_Transfer_Fraud_NewAccount",
    "showcase_Wire_Transfer_Fraud_MultipleIP",
    "showcase_Wire_Transfer_Fraud_TooMany",
    "showcase_Wire_Transfer_Fraud_Suspicious",
    "showcase_ATM_Outliers",
    "showcase_ATM_Risk_Scores",
    "showcase_ATM_Location_Fraud",
    "showcase_ATM_Testing_Fraud",
    "showcase_ATM_10000_Fraud",
    "showcase_MFID_Time_Drift",
    "showcase_MFID_Best_Execution_Buy",
    "showcase_MFID_Best_Execution_Sell",
    "showcase_MFID_Impact_Buy",
    "showcase_MFID_Impact_Sell",
    "showcase_CC_Fraud_Rare_Spending",
    "showcase_CC_Fraud_Rare_TooMany",
    "showcase_CC_Fraud_New_Category",
    "showcase_CC_Fraud_Small_Large",
    "showcase_CC_Fraud_TooMany_TooLarge",
    "showcase_Account_Compliance_Negative_Balance",
    "showcase_Account_Compliance_Zero_Balance",
    "showcase_Account_Compliance_TooMany",
    "showcase_Account_Compliance_TooOld",
    "showcase_Account_Too_Much_Balance",
    "showcase_FIX_Readable",
    "showcase_FIX_Average_Price",
    "showcase_FIX_Order_Status_Distribution",
    "showcase_FIX_Message_Types",
    "showcase_FIX_Order_Types",
    "showcase_Bitcoin_TX_Index",
    "showcase_Bitcoin_Average_Block_Fee",
    "showcase_Bitcoin_Average_Market_Price",
    "showcase_Bitcoin_Average_Trade_Volume",
    "showcase_Bitcoin_Average_Miners_Revenue",
    "showcase_Trade_Where_Is_It",
    "showcase_Trade_Top_Customers",
    "showcase_Trade_Total_Bought",
    "showcase_Trade_Total_Sold",
    "showcase_Trade_Sell_Statistics",
    "showcase_Trade_Buy_Statistics",
    "showcase_Login_Denied_Auth",
    "showcase_Login_Denied",
    "showcase_Login_Errors",
    "showcase_Login_Response_Outliers",
    "showcase_Login_Response_Timewrap",
    "showcase_Login_Trellis",
    "showcase_Login_Action_Location",
    "showcase_Login_Action_Time",
    "showcase_Login_Action_Types_Time",
    "showcase_Login_Response_Location",
    "showcase_ATM_Stat_Maps",
    "showcase_ATM_Stat_Trellis",
    "showcase_ATM_Stat_Top_Users",
    "showcase_ATM_Stat_With_Dep",
    "showcase_ATM_Stat_Sankey",
    "showcase_ATM_Stat_Horizon",
    "showcase_ATM_Stat_Timeline",
    "showcase_Wire_Transfer_Maps",
    "showcase_Wire_Transfer_Actions",
    "showcase_Wire_Transfer_Errors",
    "showcase_Wire_Transfer_IPs",
    "showcase_Wire_Transfer_Max_Amounts",
    "showcase_Wire_Transfer_Amount_Outliers",
    "showcase_Wire_Transfer_Sankey",
    "showcase_TX_3Steps",
    "showcase_TX_Average_Duration",
    "showcase_TX_Average_Duration_Steps",
    "showcase_TX_Customers_Most_Completed",
    "showcase_TX_Average_Duration_Steps_Sankey",
    "showcase_TX_Outliers_Duration",
    "showcase_TX_Count_By_Action",
    "showcase_TX_Count_By_Terminated_Step",
    "showcase_TX_Steps_Over_Time",
    "showcase_Credit_Limit_Denies",
    "showcase_Credit_Limit_Authorized",
    "showcase_Credit_Limit_Over_Time",
    "showcase_Credit_Limit_Average_Increase",
    "showcase_Credit_Limit_Trellis",
    "showcase_CCAuth_Status_Subcontractors",
    "showcase_CCAuth_Most_Authorizations",
    "showcase_CCAuth_Outlier_Response_Time",
    "showcase_CCAuth_Customer_Issues",
    "showcase_CCAuth_Subcontractor_Counts",
    "showcase_CCAuth_Auth_Denial_Subcontractors",
    "showcase_CCAuth_Average_Response",
    "showcase_CCAuth_Timewrap",
    "showcase_CCAuth_ITSI",
    "showcase_Splunk_Internal_Top_Sourcetypes",
    "showcase_Splunk_Search_Scheduler_Usage"
    ]
      }
     }
   } 
