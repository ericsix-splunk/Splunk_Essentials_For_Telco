 {
    "CDN - User Behavior - Top Browsers": {
        "prereqs": [
            {
                "test": "| inputlookup cdn_connections.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Only use the field(s) we want..",
            "Analyze our data set by Browser type now.. ",
            "Here we pull out the OS string and do some matching. This is pretty basic. There are apps on SplunkBase that do a better job.",
            "Here we pull out the browser type. Again this is pretty basic and now where complete. There are apps for this...",
            "Same here, but for arch type..",
            "Make the search results a bit prettier..",
            "And find our browsers.."
        ],
        "value": "| inputlookup cdn_connections \n| sort - _time \n| fields _time http_user_agent \n| rename http_user_agent AS useragent \n| eval os = case(match(useragent,\"Windows .. 5.1\"),\"Windows XP\",match(useragent,\"droid\"),\"Android\",match(useragent,\"Windows NT 6.1\"),\"Windows 7\",match(useragent,\"Win98\"),\"Windows 98\",match(useragent,\"Windows NT 6.3\"),\"Windows Server 2012\",match(useragent,\"Windows NT 6.2\"),\"Windows 8\",match(useragent,\"Windows NT 6.0\"),\"Windows Server 2008\",match(useragent,\"Windows Phone 8.1\"),\"Windows Mobile 8\",match(useragent,\"Mac OS X 10.10\"),\"OSX 10.10\",match(useragent,\"Mac OS X 10_9\"),\"OSX 10.9\",match(useragent,\"Mac OS X 10.6\"),\"OSX 10.6\",match(useragent,\"Mac OS X 10.5\"),\"OSX 10.5\",match(useragent,\"Mac OS X 10_8\"),\"OSX 10.8\",match(useragent,\"Mac OS X 10_7\"),\"OSX 10.7\",match(useragent,\"Apple TV\"),\"IOS\",match(useragent,\"iPad\"),\"IOS\",match(useragent,\"iPhone\"),\"IOS\",match(useragent,\"linux|Linux\"),\"Linux\") \n| eval browser = case(match(useragent,\"MSIE 10.0\"),\"IE 10.0\",match(useragent,\"MSIE 7.0\"),\"IE 7.0\",match(useragent,\"Chrome\"),\"Chrome\",match(useragent,\"Safari/\"),\"Safari\",match(useragent,\"Firefox\"),\"Firefox\",match(useragent,\"MSIE 9.0\"),\"IE 9.0\",match(useragent,\"ANVSDK ios\"),\"Anvato Player\",match(useragent,\"UCBrowser\"),\"UC Browser\",match(useragent,\"Opera\"),\"Opera\",match(useragent,\"Gecko Galeon\"),\"Gecko\",match(useragent,\"Netscape6\"),\"Netscape\") \n| eval arch = case(match(useragent,\"droid\"),\"android\",match(useragent,\"iPad\"),\"ipad\",match(useragent,\"iPod\"),\"ipod\",match(useragent,\"Apple TV\"),\"Apple TV\",match(useragent,\"iPhone\"),\"iphone\",match(os,\"Windows\"),\"x86_64\",match(useragent,\"Intel|x86_64\"),\"x86_64\") \n| fillnull value=\"UNKNOWN\" os arch browser \n| stats count by browser \n| sort - count",
        "label": "CDN - User Behavior - Top Browsers"
    },

    "Cache Hit Ratio by Number of Requests": {
        "prereqs": [
            {
                "test": "| inputlookup cdn_general_operations | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Format our timestamps..",
            "Pull our fields of interest from the sourcetype(s)",
            "Start calculating our hit ratio with our messageBytes by time and contentprovider",
            "Calculate total hits and total bytes transferred from our cache",
            "Summate our total requests and cached content values",
            "Calculate a hit ratio of cached content and format it..",
            ""
        ],
        "value": "| inputlookup cdn_general_operations \n| eval time=strptime(_time,\"%Y-%m-%d %H:%M:S\") \n| fields _time messageBytes cached cp \n| stats count values(messageBytes) AS totalBytes by _time cp cached \n| stats sum(count) AS totalRequests sum(totalBytes) as totalBytes by cached  \n| stats sum(totalRequests) as totalRequested sum(eval(totalRequests*if(cached==\"true\",1,0))) as \"cached\" \n| eval cacheRequestedHitRatio=round(cached/totalRequested * 100, 2) \n| fields cacheRequestedHitRatio",
        "label": "Cache Hit Ratio by Number of Requests"
    },

    "Cache Hit Ratio by Amount of Traffic": {
        "prereqs": [
            {
                "test": "| inputlookup cdn_general_operations | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Format our timestamps..",
            "Pull our fields of interest from the sourcetype(s)",
            "Start calculating our hit ratio with our messageBytes by time and contentprovider",
            "Calculate total hits and total bytes transferred from our cache",
            "Summate our total requests and cached content values",
            "Calculate a hit ratio of cached content and format it..",
            ""
        ],
        "value": "| inputlookup cdn_general_operations \n| eval time=strptime(_time,\"%Y-%m-%d %H:%M:S\") \n| fields _time messageBytes cached \n| stats sum(messageBytes) as \"totalBytes\", sum(eval(messageBytes * if(cached==\"true\",1,0))) as \"cachedBytes\" \n| eval cacheTrafficHitRatio=round(cachedBytes/totalBytes*100,2) \n| fields cacheTrafficHitRatio",
        "label": "Cache Hit Ratio by Amount of Traffic"
    },

    
    "CDN Total Number of Requests": {
        "prereqs": [
            {
                "test": "| inputlookup cdn_general_operations | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Format our timestamps..",
            "Pull our fields of interest from the sourcetype(s)",
            "Start calculating our hit ratio with our messageBytes by time and contentprovider",
            "Calculate total hits and total bytes transferred from our cache",
            "Summate our total requests and cached content values",
            "Calculate a hit ratio of cached content and format it..",
            ""
        ],
        "value": "| inputlookup cdn_general_operations \n| eval _time=strptime(_time, \"%Y-%m-%d %H:%M:%S\") \n| stats count",
        "label": "CDN Total Number of Requests"
    },

    "CDN Total Amount of Traffic": {
        "prereqs": [
            {
                "test": "| inputlookup cdn_general_operations | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Format our timestamps..",
            "Pull our fields of interest from the sourcetype(s)",
            "Start calculating our hit ratio with our messageBytes by time and contentprovider",
            "Calculate total hits and total bytes transferred from our cache",
            "Summate our total requests and cached content values",
            "Calculate a hit ratio of cached content and format it..",
            ""
        ],
        "value": "| inputlookup cdn_general_operations \n| eval time=strptime(_time,\"%Y-%m-%d %H:%M:S\") \n| fields _time messageBytes \n| stats sum(messageBytes) as totalTrafficBytes \n| eval totalTrafficGBytes=totalTrafficBytes/pow(10,9) \n| fields totalTrafficGBytes",
        "label": "CDN Total Amount of Traffic"
    },


    "CDN Total Number of Errors Over Time": {
        "prereqs": [
            {
                "test": "| inputlookup cdn_general_operations | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Format our timestamps..",
            "Pull our fields of interest from the sourcetype(s)",
            "Start calculating our hit ratio with our messageBytes by time and contentprovider",
            "Calculate total hits and total bytes transferred from our cache",
            "Summate our total requests and cached content values",
            "Calculate a hit ratio of cached content and format it..",
            ""
        ],
        "value": "| inputlookup cdn_general_operations \n| eval time=strptime(_time,\"%Y-%m-%d %H:%M:S\") \n| convert timeformat=\"%Y-%m-%d %T\" mktime(_time) AS _time \n| sort _time \n| fields _time messageBytes cached cp status \n| eval statusFailed=if(status >= 400, 1, 0) \n| search statusFailed=\"1\" \n| timechart fixedrange=false span=1m sum(statusFailed) AS \"Error Events\"",    
        "label": "CDN Total Number of Errors Over Time"
    },

    "General Call Disposition Metrics": {
        "prereqs": [
            {
                "test": "| inputlookup cdr_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup cdr_logs \n| lookup cdr_disposition_mapping disposition \n| stats count values(description) AS Description by disposition \n| rename disposition AS Disposition count AS Count \n| table Description Disposition Count \n| eval Description=if(match(Disposition,\"CONGESTED\"),\"Route Error\",Description) \n| sort - Count",
            "label": "General Call Disposition Metrics"
    },

    "Failed Call Metrics - Simple": {
        "prereqs": [
            {
                "test": "| inputlookup cdr_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup physical_card_logs \n| lookup physical_card_error_codes errorCode OUTPUTNEW status \n| lookup physical_card_mapping readerID AS badgereaderId OUTPUTNEW description \n| lookup physical_card_user_mapping cardId AS badgeId OUTPUTNEW firstName lastName emailAddress employeeId note officeId \n| search employeeId=\"25020002\" \n| fields - badgereaderId,envAlarm,errorCode,powerStatus \n| eval fullName = firstName+\" \"+lastName \n| fields _time badgeId employeeId fullName officeId description status note \n| rename badgeId AS \"Badge ID #\" employeeId AS \"Employee Number\" fullName AS \"Employee Name\" officeId AS \"Home Office\" description AS \"Card Reader Location\" status AS \"Read Status\" note AS \"Additional Notes..\"",
                "label": "Failed Call Metrics - Simple"
    },

    "Failed Call Metrics - Advanced": {
        "prereqs": [
            {
                "test": "| inputlookup cdr_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup cdr_logs \n| eval _time = start \n| lookup cdr_disposition_mapping disposition \n| search disposition=FAILED OR disposition=CONGESTED \n| eval Description=if(match(disposition,\"CONGESTED\"),\"Route Error\",description) \n| rex field=src \"(?<srcCountry>\\d+)(?=\\d{10})\" \n| rex field=dst \"(?<dstCountry>\\d+)(?=\\d{10})\" \n| lookup cdr_country_codes phoneCode AS dstCountry OUTPUTNEW countryName as dstCountryName ISO2 AS dstCountryCode \n| table _time src dst dstCountryCode Description disposition \n| rename _time AS Time src AS \"Source #\" dst AS \"Destination #\" disposition AS Disposition dstCountryCode AS \"Destination Country\"",
        "label": "Failed Call Metrics - Advanced"
    },

    "Failed Call Metrics - Geo Stats": {
        "prereqs": [
            {
                "test": "| inputlookup cdr_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup cdr_logs \n| eval _time = start \n| lookup cdr_disposition_mapping disposition \n| search disposition=FAILED OR disposition=CONGESTED \n| eval Description=if(match(disposition,\"CONGESTED\"),\"Route Error\",description) \n| rex field=src \"(?<srcCountry>\\d+)(?=\\d{10})\" \n| rex field=dst \"(?<dstCountry>\\d+)(?=\\d{10})\" \n| lookup cdr_country_codes phoneCode AS dstCountry OUTPUTNEW countryName as dstCountryName ISO2 AS dstCountryCode \n| stats count by dstCountryName  \n| geom geo_countries allFeatures=true featureIdfield=dstCountryName",
        "label": "Failed Call Metrics - Geo Stats"
    },

    "Failed Call Metrics - By Destination and Gateway": {
        "prereqs": [
            {
                "test": "| inputlookup cdr_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup cdr_logs \n| eval _time = start \n| lookup cdr_disposition_mapping disposition \n| search disposition=FAILED OR disposition=CONGESTED \n| eval Description=if(match(disposition,\"CONGESTED\"),\"Route Error\",description) \n| rex field=src \"(?<srcCountry>\\d+)(?=\\d{10})\" \n| rex field=dst \"(?<dstCountry>\\d+)(?=\\d{10})\" \n| lookup cdr_country_codes phoneCode AS dstCountry OUTPUTNEW countryName as dstCountryName ISO2 AS dstCountryCode \n| table src dst dstCountryCode partyBiD disposition Description _time \n| stats count values(dst) AS Destination values(disposition) AS Disposition values(Description) AS Description values(_time) as Time by partyBiD dst \n| rename partyBiD AS \"Routed Path\" \n| table Time Destination Description \"Routed Path\" count",
        "label": "Failed Call Metrics - By Destination and Gateway"
    },

    "General Call Metrics - Geo Stats": {
        "prereqs": [
            {
                "test": "| inputlookup cdr_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup cdr_logs \n| eval _time = start \n| lookup cdr_disposition_mapping disposition \n| search disposition=\"ANSWERED\" OR disposition=\"BUSY\" \n| rex field=src \"(?<srcCountry>\\d+)(?=\\d{10})\" \n| rex field=dst \"(?<dstCountry>\\d+)(?=\\d{10})\" \n| lookup cdr_country_codes phoneCode AS dstCountry OUTPUTNEW countryName as dstCountryName ISO2 AS dstCountryCode \n| stats count by dstCountryName \n| geom geo_countries allFeatures=true featureIdfield=dstCountryName",
        "label": "General Call Metrics - Geo Stats"
    },

    "General Call Metrics - Top Destination Countries": {
        "prereqs": [
            {
                "test": "| inputlookup cdr_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup cdr_logs \n| eval _time = start \n| rex field=src \"(?<srcCountry>\\d+)(?=\\d{10})\" \n| rex field=dst \"(?<dstCountry>\\d+)(?=\\d{10})\" \n| lookup cdr_country_codes phoneCode AS dstCountry OUTPUTNEW countryName as dstCountryName \n| top limit=10 dstCountryName",   
        "label": "General Call Metrics - Top Destination Countries"
    },

    "General Call Metrics - Least Called Countries": {
        "prereqs": [
            {
                "test": "| inputlookup cdr_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup cdr_logs \n| eval _time = start \n| lookup cdr_disposition_mapping disposition \n| rex field=src \"(?<srcCountry>\\d+)(?=\\d{10})\" \n| rex field=dst \"(?<dstCountry>\\d+)(?=\\d{10})\" \n| lookup cdr_country_codes phoneCode AS dstCountry OUTPUTNEW countryName as dstCountryName ISO2 AS dstCountryCode \n| rare limit=10 dstCountryName",
        "label": "General Call Metrics - Least Called Countries"
    },

    "General Call Metrics - Top Outbound Callers": {
        "prereqs": [
            {
                "test": "| inputlookup cdr_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup cdr_logs \n| eval _time = start | rex field=src \"(?<srcCountry>\\d+)(?=\\d{10})\" \n| rex field=dst \"(?<dstCountry>\\d+)(?=\\d{10})\" \n| lookup cdr_country_codes phoneCode AS dstCountry OUTPUTNEW countryName as dstCountryName ISO2 AS dstCountryCode \n| top dstCountryName by src \n| rename src AS \"Caller\" dstCountryName AS \"Destinaton Country\" count as Count",
        "label": "General Call Metrics - Top Outbound Callers"
    },

    "General Call Metrics - Top Call Durations by Destination": {
        "prereqs": [
            {
                "test": "| inputlookup cdr_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup cdr_logs \n| eval _time = start \n| lookup cdr_disposition_mapping disposition \n| search disposition=\"ANSWERED\" OR disposition=\"BUSY\" \n| rex field=src \"(?<srcCountry>\\d+)(?=\\d{10})\" \n| rex field=dst \"(?<dstCountry>\\d+)(?=\\d{10})\" \n| lookup cdr_country_codes phoneCode AS dstCountry OUTPUTNEW countryName as dstCountryName ISO2 AS dstCountryCode \n| fields src dst dstCountryName duration \n| stats count list(dst) AS dst list(dstCountryName) as dstCountryName by duration src \n| rename duration AS \"Call Duration\" src AS \"Caller\" dst AS \"Called Number\" dstCountryName AS \"Destination Country\" \n| sort - \"Call Duration\"",
        "label": "General Call Metrics - Top Call Durations by Destination"
    },

    "General Call Metrics - Shortest Call Durations by Destination": {
        "prereqs": [
            {
                "test": "| inputlookup cdr_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup cdr_logs \n| eval _time = start \n| lookup cdr_disposition_mapping disposition \n| search disposition=\"ANSWERED\" OR disposition=\"BUSY\" \n| rex field=src \"(?<srcCountry>\\d+)(?=\\d{10})\" \n| rex field=dst \"(?<dstCountry>\\d+)(?=\\d{10})\" \n| lookup cdr_country_codes phoneCode AS dstCountry OUTPUTNEW countryName as dstCountryName ISO2 AS dstCountryCode \n| fields src dst dstCountryName duration \n| stats count list(dst) AS dst list(dstCountryName) as dstCountryName by duration src \n| rename duration AS \"Call Duration\" src AS \"Caller\" dst AS \"Called Number\" dstCountryName AS \"Destination Country\" \n| sort \"Call Duration\"",
        "label": "General Call Metrics - Shortest Call Durations by Destination"
    },

    
    "General Call Metrics - Session Tracking": {
        "prereqs": [
            {
                "test": "| inputlookup cdr_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup cdr_logs \n| eval _time = start \n| table _time accountcode channel src dst duration partyBiD \n| rex field=channel \".*-(?<sessionId>\\d+$)\" \n| search duration > 0 \n| convert dur2sec(duration) AS CallDuration \n| eval CallDuration=round((CallDuration/60),0).\" minutes\" \n| stats count values(sessionId) AS SessionID values(accountcode) AS AccountID values(dst) AS DestinationNumber values(_time) AS DialTime list(CallDuration) AS CallDuration by src dst \n| lookup cdr_account_mappings accountCode AS AccountID OUTPUT accountName billingState \n| rename src AS SourceNumber \n| table AccountID accountName billingState SourceNumnber DestinationNumber SessionID CallDuration DialTime",
        "label": "General Call Metrics - Session Tracking"
    },

    "Security Auditing - Badge Monitoring": {
        "prereqs": [
            {
                "test": "| inputlookup physical_card_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "",
            "Enrich our data...",
            "Enrich our data... ",
            "Here we will search for a specific Employee Identifier.",
            "Narrow our interesting fields down a bit..",
            "",
            "",
            "Make this more Human Readable.."
        ],
        "value": "| inputlookup physical_card_logs \n| lookup physical_card_error_codes errorCode OUTPUTNEW status \n| lookup physical_card_mapping readerID AS badgereaderId OUTPUTNEW description \n| lookup physical_card_user_mapping cardId AS badgeId OUTPUTNEW firstName lastName emailAddress employeeId note officeId \n| search employeeId=\"25020002\" \n| fields - badgereaderId,envAlarm,errorCode,powerStatus \n| eval fullName = firstName+\" \"+lastName \n| fields _time badgeId employeeId fullName officeId description status note \n| rename badgeId AS \"Badge ID #\" employeeId AS \"Employee Number\" fullName AS \"Employee Name\" officeId AS \"Home Office\" description AS \"Card Reader Location\" status AS \"Read Status\" note AS \"Additional Notes..\"",
                "label": "Security Auditing - Badge Monitoring"
    },

    "Security Auditing - Secure Facilities": {
        "prereqs": [
            {
                "test": "| inputlookup physical_card_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Enrich our data...",
            "Enrich our data... ",
            "Perform some statistical analysis on the Room, Status of the Reader, and the Badge.",
            "For this example, we mask Internal Employees Id's and Customer's Badges.",
            "Figure out the direction of the badge read based on the actual card reader.",
            "Match our room and give it a more human friendly name.",
            "Select our fields for reporting.",
            "Bit more of clean up..",
            "",
            "Can you read epoch? Convert this to readable form."
        ],
        "value": "| inputlookup physical_card_logs \n| lookup physical_card_mapping readerID AS badgereaderId OUTPUTNEW description active \n| lookup physical_card_user_mapping cardId AS badgeId \n| search description=\"LV-DC-2-DC-003-*\" \n| stats count list(description) AS Room list(status) AS Status list(badgeId) AS BadgeID list(employeeId) AS userId by _time \n| eval Personnel=if(match(userId,\"-\"),\"Customer Card\",\"Splunk Datacenter Staff\") \n| eval Direction=case(match(Room,\"-in\"),\"Ingress\",match(Room,\"-out\"),\"Egress\") \n| eval Room=case(match(Room,\"LV-DC-2-DC-003-\"),\"Secure Room - 3\") \n| fields _time Room Personnel Direction \n| rename _time AS \"Time\" \n| convert ctime(Time)",
              "label": "Security Auditing - Secure Facilities"
    },

    "Security Auditing - Abnormal Failures": {
        "prereqs": [
            {
                "test": "| inputlookup physical_card_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Enrich our data...",
            "Enrich our data... ",
            "Perform some statistical analysis on the Room, Status of the Reader, and the Badge.",
            "For this example, we mask Internal Employees Id's and Customer's Badges.",
            "Figure out the direction of the badge read based on the actual card reader.",
            "Match our room and give it a more human friendly name.",
            "Select our fields for reporting.",
            "Bit more of clean up..",
            "",
            "Can you read epoch? Convert this to readable form."
        ],
        "value": "| inputlookup physical_card_logs \n| lookup physical_card_error_codes errorCode OUTPUTNEW status \n| lookup physical_card_mapping readerID AS badgereaderId OUTPUTNEW description active \n| lookup physical_card_user_mapping cardId AS badgeId \n| eval fullName=firstName+\" \"+lastName \n| fields _time badgeId description fullName status \n| search status=\"ACCESS-DENIED\" OR status=\"READ-SUCCESS\" \n| streamstats count reset_on_change=true window=2 by description \n| search (count > 1) AND status=\"ACCESS-DENIED\" \n| bin span=5m _time \n| stats count list(badgeId) AS Badge list(description) AS Location list(fullName) as Name by _time \n| where count > 1 \n| rename _time AS Time \n| convert ctime(Time) \n| table Time Location Badge Name",
        "label": "Security Auditing - Abnormal Failures"
    },

    "Security Auditing - Environmental Check": {
        "prereqs": [
            {
                "test": "| inputlookup physical_card_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Enrich our data...",
            "Enrich our data... ",
            "Reduce our data set to only our interesting fields for this example.",
            "Filter for only FIRE or POWER events."
                    ],
        "value": "| inputlookup physical_card_logs \n| lookup physical_card_error_codes errorCode OUTPUTNEW status \n| lookup physical_card_mapping readerID AS badgereaderId OUTPUTNEW description\n| fields _time badgereaderId description envAlarm errorCode powerStatus status \n| search envAlarm=\"FIRE\" OR envAlarm=\"POWER\"",        
        "label": "Security Auditing - Environmental Check"
    },
    
    "Security Auditing - Environmental Reporting": {
        "prereqs": [
            {
                "test": "| inputlookup physical_card_logs.csv | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Enrich our data...",
            "Enrich our data... ",
            "Filter for only FIRE or POWER events.",
            "Sort by time, we need to make sure our data set is in order..",
            "Filter through events by description, and keep track of when the last reader was seen",
            "Calculate a duration between related events",
            "",
            "Fill null numeric values with a 0 to make sorting easier..",
            "Humanize the Events..",
            "Take our relevant fields and make a report friendly view.."
                    ],
        "value": "| inputlookup physical_card_logs \n| lookup physical_card_mapping readerID AS badgereaderId OUTPUTNEW description \n| lookup physical_card_error_codes errorCode OUTPUT status \n| search envAlarm=\"FIRE\" OR envAlarm=\"POWER\" \n| sort _time \n| streamstats window=0 current=false latest(_time) AS previousEventTime latest(status) AS previousStatus BY description \n| eval duration = _time - previousEventTime \n| rename status AS currentStatus \n| fillnull value=0 duration \n| eval envAlarm=case(match(envAlarm,\"FIRE\"),\"Fire Alarm Detected in Zone\",match(envAlarm,\"POWER\"),\"Power Event Detected in Zone\") \n| fields _time description currentStatus duration envAlarm \n| rename description AS \"Reader Location\" currentStatus AS \"Lock Status\" envAlarm AS \"Alarm\" \n| convert ctime(previousEventTime) \n| where duration > 0 \n| rename duration AS \"Duration of Alarm (seconds)\" _time AS \"Time Cleared\" \n| convert ctime(\"Time Cleared\") \n| table Alarm \"Reader Location\" \"Lock Status\" \"Duration of Alarm (seconds)\" \"Time Cleared\"",       
        "label": "Security Auditing - Environmental Reporting"
    },

    "WIFI AP Association": {
        "prereqs": [
            {
                "test": "| inputlookup telco_wifi_mapping | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Format our timestamp...",
            " ",
            "Chart the count of Access PointIDs over 15 minute buckets.",
            "Formatting with a lookup, remove for real data source."
                    ],
        "value": "| inputlookup telco_wifi_mapping \n| eval _time=strptime(accessTime, \"%Y-%m-%d %H:%M:%S\") \n| sort - _time \n| timechart count fixedrange=false span=15m by apID",
       "label": "WIFI AP Association"
    },

    "WIFI AP Access Duration Stats": {
        "prereqs": [
            {
                "test": "| inputlookup telco_wifi_mapping | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Format our timestamp...",
            " ",
            "Convert our timestamps to EPOCH times, which makes numeric operations easier.",
            "Calculate our Average / Maximum / Minimum connection durations.",
            "Convert to minutes",
            "Convert to minutes",
            "In most cases this is 0, or few seconds, but show in minutes.",
            "Make this more report friendly for the humans."
                    ],
        "value": "| inputlookup telco_wifi_mapping \n| eval _time=strptime(accessTime, \"%Y-%m-%d %H:%M:%S\") \n| sort _time \n| convert timeformat=\"%Y-%m-%d %T\" mktime(accessTime) AS accessTime mktime(accessDisconnectTime) AS accessDisconnectTime \n| eval accessDuration = accessDisconnectTime-accessTime \n| stats avg(accessDuration) as avgAccessDur max(accessDuration) as maxAccessdur min(accessDuration) as minAccessdur by apID \n| eval avgAccessDur=round(avgAccessDur/60,2) \n| eval maxAccessdur=round(maxAccessdur/60,2) \n| eval minAccessdur=round(minAccessdur/60,2) \n| rename apID AS \"WIFI AP Name\" avgAccessDur AS \"Average Duration (Minutes)\" maxAccessdur AS \"Maximum Duration (Minutes)\" minAccessdur AS \"Minimum Duration (Minutes)\"",
        "label": "WIFI AP Access Duration Stats"
    },
    
    "WIFI AP Geostats Access by Time": {
        "prereqs": [
            {
                "test": "| inputlookup telco_wifi_mapping | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Format our timestamp...",
            " ",
            "Chart the count of Access PointIDs over 15 minute buckets.",
            "Formatting with a lookup, remove for real data source."
                    ],
        "value": "| inputlookup telco_wifi_mapping \n| eval _time=strptime(accessTime, \"%Y-%m-%d %H:%M:%S\") \n| sort - _time \n| timechart count fixedrange=false span=15m by apID",
       "label": "WIFI AP Geostats Access by Time"
    },

    "WIFI AP Networks Users Connect To": {
        "prereqs": [
            {
                "test": "| inputlookup telco_wifi_mapping | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Format our timestamp...",
            "Sort our time..",
            "Here we start run stats against our network connections by Access Point and Network",
            "Running stats here again gives us a per AP and per Network connection list.",
            "Make this more human readable."
                    ],
        "value": "| inputlookup telco_wifi_mapping \n| eval _time=strptime(accessTime, \"%Y-%m-%d %H:%M:%S\") \n| sort - _time \n| stats count values(apInfoNetwork) AS apInfoNetworks by apID apInfoNetwork \n| stats list(apInfoNetwork) AS apInfoNetwork list(apID) as apID list(count) as Count \n| rename apInfoNetwork AS \"Connected Network\" apID AS \"Access Point Connected\" Count AS \"Connection Count\"", 
        "label": "WIFI AP Networks Users Connect To"
    },

    "WIFI AP Access Users Top Cities": {
        "prereqs": [
            {
                "test": "| inputlookup telco_wifi_mapping | stats count  ",
                "field": "count",
                "greaterorequalto": 1,
                "resolution": "Verify that lookups installed with Splunk Essentials for Telco is present",
                "name": "track_application_usage lookup file"
            }
        ],
        "description": [
            "First we pull in our demo dataset.",
            "Format our timestamp...",
            "Sort our time..",
            "We just want our known cities in this search. ",
            "Find our top cities."
                    ],
        "value": "| inputlookup telco_wifi_mapping \n| eval _time=strptime(accessTime, \"%Y-%m-%d %H:%M:%S\") \n| sort - _time \n| where userCity != \"UNKNOWN\" \n| top userCity",
        "label": "WIFI AP Access Users Top Cities"
    }
}
